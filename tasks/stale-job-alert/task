#!/bin/bash
set -eu
## ======================================================================
## The following environment variables can be overwritten in the
## environment to contol the operation of this script.
## ======================================================================

CONCOURSE_BASE_URL=${CONCOURSE_BASE_URL:=https://release-integration.ci.cf-app.com}
PIPELINE_INCLUDE=${PIPELINE_INCLUDE:=infrastructure}
JOB_KEYWORDS_EXCLUDE=${JOB_KEYWORDS_EXCLUDE:=ship-it transition stable-deploy}
VERBOSE=${VERBOSE:=false}

## ----------------------------------------------------------------------
## general function(s)
## ----------------------------------------------------------------------

converts(){
  t=$1

  d=$((t/60/60/24))
  h=$((t/60/60%24))

  if [ $d -gt 0 ]; then
    printf "%dd " $d
  fi
  if [ $h -gt 0 ]; then
    printf "%dh " $h
  fi
  printf '\n'
}

## ----------------------------------------------------------------------

#number of seconds in eight days
EIGHT_DAYS=691200

#current time in epoch time
CURRENT_TIME="$(date +%s)"

status=0

## ----------------------------------------------------------------------

for PIPELINE in $PIPELINE_INCLUDE; do

  #get all job info
  #jobs="$(curl ${CONCOURSE_BASE_URL}/api/v1/teams/main/pipelines/cf-deployment/jobs --silent | jq .)"
  jobs="$(curl ${CONCOURSE_BASE_URL}/api/v1/teams/main/pipelines/${PIPELINE}/jobs --silent | jq .)"

  if [ "${VERBOSE}" = "true" ]; then
      echo "jobs: ${jobs}"
  fi

  job_details="$(echo $jobs | jq '[.[] | .finished_build | [ .id, .job_name, .pipeline_name, .url, .start_time, .end_time ]]')"

  stale_jobs="$(echo $job_details | jq 'map(if .[4]==null then .[4]=.[5] else . end)')"
  stale_jobs="$(echo $stale_jobs | jq 'map(if .[5]==null then .[5]=.[4] else . end)')"
  stale_jobs="$(echo $stale_jobs | jq 'map(map(select(. | values)) | select(length > 0))')"
  stale_jobs="$(echo $stale_jobs | jq 'map(select(length > 5))')"

  if [ "${VERBOSE}" = "true" ]; then
      echo "job_details: ${job_details}"
  fi

  #get all jobs that haven't run in over a week
  stale_jobs="$(echo $stale_jobs | jq --argjson CURRENT_TIME "$CURRENT_TIME" --argjson EIGHT_DAYS "$EIGHT_DAYS" 'map(select($CURRENT_TIME - .[4] > $EIGHT_DAYS))')"

  ## ----------------------------------------------------------------------

  length=$(echo "$stale_jobs" | jq '. | length - 1 ')
  report=""

  if [ $length != -1 ]; then
    for j in $(seq 0 "$length"); do
      job_name="$(echo $stale_jobs | jq .[$j] | jq .[1])"
      FOUND="false"
      for KEYWORD in $JOB_KEYWORDS_EXCLUDE; do
        if [[ $job_name = *"$KEYWORD"* ]]; then
          FOUND="true"
        fi
      done
      if [ $FOUND = false ]; then
        report="$report $j"
      fi
    done
  fi

  ## ----------------------------------------------------------------------

cat <<EOF
======================================================================
  ___ _____ _   _    ___      _  ___  ___     _   _    ___ ___ _____  
 / __|_   _/_\ | |  | __|  _ | |/ _ \| _ )   /_\ | |  | __| _ \_   _| 
 \__ \ | |/ _ \| |__| _|  | || | (_) | _ \  / _ \| |__| _||   / | | 
 |___/ |_/_/ \_\____|___|  \__/ \___/|___/ /_/ \_\____|___|_|_\ |_| 
----------------------------------------------------------------------
 CONCOURSE_BASE_URL .... : ${CONCOURSE_BASE_URL}
 PIPELINE .............. : ${PIPELINE}
 JOB_KEYWORDS_EXCLUDE .. : ${JOB_KEYWORDS_EXCLUDE}
----------------------------------------------------------------------
EOF

  if [ -z "$report" ]; then
cat <<EOF
  No stale jobs found
EOF
  else
    status=1
    for k in $report; do
      job_name="$(echo $stale_jobs | jq .[$k] | jq .[1] | sed 's/"//g')"
      pipeline_name="$(echo $stale_jobs | jq .[$k] | jq .[2] | sed 's/"//g')"
      job_start_time="$(echo $stale_jobs | jq .[$k] | jq .[4] | sed 's/"//g')"
      job_url="$(echo $stale_jobs | jq .[$k] | jq .[3] | sed 's/"//g')"
      job_age="$(echo $(($CURRENT_TIME- $job_start_time)) | sed 's/"//g')"
      full_job_url=${CONCOURSE_BASE_URL}${job_url}

cat <<EOF
 Pipeline .. : $pipeline_name
 Job  ...... : $job_name
 Job URL ... : $full_job_url
 Started ... : $( converts "$job_age" )ago
----------------------------------------------------------------------
EOF
    done
  fi
  echo ""
done

exit $status
