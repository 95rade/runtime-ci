#!/bin/bash

set -xeu

root_dir=$PWD

VARS_FILE="${VARS_FILE:?"VARS_FILE must be provided"}"
STATE_FILE="${STATE_FILE:?"STATE_FILE must be provided"}"
DIRECTOR_NAME="${DIRECTOR_NAME:?"DIRECTOR_NAME must be provided"}"
OPS_FILES="${OPS_FILES:-""}"

ops_file_arguments=""
for op in ${OPS_FILES}
do
  ops_file_arguments="${ops_file_arguments} -o ${root_dir}/${op}"
done

set +x
bosh -n delete-env \
  --vars-store ${root_dir}/env-repo/${VARS_FILE} \
  --state env-repo/${STATE_FILE} \
  -o ${root_dir}/bosh-deployment/gcp/cpi.yml \
  -o ${root_dir}/bosh-deployment/external-ip-not-recommended.yml \
  $ops_file_arguments \
  -v project_id=$GCP_PROJECTID \
  -v $"gcp_credentials_json='$GCP_CREDENTIALS'" \
  -v external_ip=$(cat ${root_dir}/terraform/metadata | jq .external_ip) \
  -v zone=$GCP_ZONE \
  -v network=$(cat ${root_dir}/terraform/metadata | jq .network_name) \
  -v subnetwork=$(cat ${root_dir}/terraform/metadata | jq .subnetwork_name) \
  -v internal_cidr=$(cat ${root_dir}/terraform/metadata | jq .internal_cidr) \
  -v internal_gw=$(cat ${root_dir}/terraform/metadata | jq .internal_gw) \
  -v internal_ip=$(cat ${root_dir}/terraform/metadata | jq .internal_ip) \
  -v director_name=$DIRECTOR_NAME \
  -v tags=[] \
  ${root_dir}/bosh-deployment/bosh.yml
set -x

pushd env-repo
  if [[ -n $(git status --porcelain) ]]; then
    git config user.name "CF MEGA BOT"
    git config user.email "cf-mega@pivotal.io"
    git rm infrastructure/bosh/deployment-vars.yml
    git add --all infrastructure/bosh/state.json
    git commit -m "Commit bosh state file, and remove bosh deployment vars"
  fi
popd

shopt -s dotglob
cp -R env-repo/* updated-env-repo/
