#!/bin/bash -xeu

function check_fast_fails() {
  set +x
  if [ -z "${LB_DOMAIN}" -a "${BBL_IAAS}" == "gcp" ]; then
    echo "\$LB_DOMAIN is a required parameter for gcp.  Please set the domain."
    exit 1
  fi

  if [ -z "${BBL_LB_CERT}"  ]; then
    echo "\$BBL_LB_CERT is a required parameter"
    exit 1
  fi

  if [ -z "${BBL_LB_KEY}"  ]; then
    echo "\$BBL_LB_KEY is a required parameter"
    exit 1
  fi

  if [ -n "${LB_DOMAIN}" -a "${BBL_IAAS}" == "aws" ]; then
    echo "\$LB_DOMAIN is not honored for aws"
  fi
  set -x
}

function commit_bbl_state_file {
  local root_dir
  root_dir="${1}"

  pushd "${root_dir}/bbl-state/${BBL_STATE_DIR}"
    if [[ -n $(git status --porcelain) ]]; then
      git config user.name "CI Bot"
      git config user.email "cf-release-integration@pivotal.io"
      git add bbl-state.json
      git commit -m "Update bbl-state.json"
    fi
  popd

  pushd "${root_dir}"
    shopt -s dotglob
    cp -R bbl-state/* updated-bbl-state/
  popd
}

function write_bbl_certs() {
  set +x
  echo "$BBL_LB_CERT" > /tmp/bbl-cert
  echo "$BBL_LB_KEY" > /tmp/bbl-key
  set -x
}


function make_concatinated_operations_file() {
  local root_dir
  root_dir="${1}"
  pushd "${root_dir}/ops-files"
  cat $OPS_FILES | grep -v "\-\-\-" > concatinated-operations.yml
  popd
}

function main() {
  local root_dir
  root_dir="${1}"

  if [[ ${IS_BOSH_LITE} = false ]]; then
    check_fast_fails
  fi

  pushd "bbl-state/${BBL_STATE_DIR}"
    if [[ ${IS_BOSH_LITE} = false ]]; then
      write_bbl_certs
    fi

    bbl version

    local name_flag
    name_flag=""

    if [ -n "${BBL_ENV_NAME}" -a ! -f bbl-state.json ]; then
      name_flag="--name ${BBL_ENV_NAME}"
    fi

    make_concatinated_operations_file ${root_dir}

    local arguments
    arguments="--ops-file ${root_dir}/ops-files/concatinated-operations.yml"

    bbl --debug up ${name_flag} ${arguments} > "${root_dir}"/bbl_up.txt

    if [[ ${IS_BOSH_LITE} = false ]]; then
      local domain_flag
      domain_flag=""

      if [ "${BBL_IAAS}" == "gcp" ]; then
        domain_flag="--domain=${LB_DOMAIN}"
     fi

      # The two commands below amount to "create or update"
      bbl \
        --debug \
        create-lbs \
        --type=cf \
        --cert=/tmp/bbl-cert \
        --key=/tmp/bbl-key \
        --skip-if-exists \
        ${domain_flag} > "${root_dir}"/bbl_create_lbs.txt

      bbl \
        --debug \
        update-lbs \
        --cert=/tmp/bbl-cert \
        --key=/tmp/bbl-key \
        ${domain_flag} > "${root_dir}"/bbl_update_lbs.txt
    fi
  popd
}

trap "commit_bbl_state_file ${PWD}" EXIT

main ${PWD}
