---
groups:
- name: cf-deployment
  jobs:
  - merge-master
  - deploy-releases-fresh
  - deploy-releases-upgrade
  - acceptance-tests-fresh
  - acceptance-tests-upgrade
  - routing-acceptance-tests-upgrade
  - routing-acceptance-tests-fresh
- name: infrastructure
  jobs:
  - setup-infrastructure-fresh
  - destroy-infrastructure-fresh
  - create-bosh-director-fresh
  - destroy-bosh-director-fresh
  - setup-infrastructure
  - destroy-infrastructure
  - verify-nameserver-has-record
  - run-bosh-cleanup

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: cf-gcp-infrastructure
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/cf-gcp-infrastructure
- name: marauder-terraform
  type: terraform
  source:
    storage:
      bucket: runtimeci-tfstate
      bucket_path: routing-cf-deployment/
      region_name: us-west-1
      access_key_id: {{marauder_terraform_s3_access_key_id}}
      secret_access_key: {{marauder_terraform_s3_secret_key}}
    terraform_source: github.com/cloudfoundry-incubator/cf-gcp-infrastructure
    vars:
      project: {{marauder_gcp_project}}
      env_name: marauder
      region: us-central1
      zones: [us-central1-a, us-central1-b, us-central1-c]
      dns_suffix: cf-app.com
      ssl_cert: {{marauder_cf_ssl_cert}}
      ssl_cert_private_key: {{marauder_cf_ssl_cert_private_key}}
      service_account_key: {{gcp_service_account_json}}
- name: marauder-env-infrastructure
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/marauder-env.git
    private_key: {{marauder_env_private_key}}
    paths:
    - infrastructure/*
    - google_account_creds.json
- name: marauder-env-properties
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/marauder-env.git
    private_key: {{marauder_env_private_key}}
    paths: [ deployment-vars.yml ]
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 168h
- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: trelawney-env-infrastructure
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: {{trelawney_env_private_key}}
    paths:
    - bbl-infrastructure/*
    - terraform.tfstate
- name: trelawney-env-properties
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: {{trelawney_env_private_key}}
    paths:
    - deployment-env-vars.yml
    - integration_config_template.json
- name: trelawney-env-integration-config
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: {{trelawney_env_private_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: marauder-env-integration-config
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/marauder-env.git
    private_key: {{marauder_env_private_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: cf-deployment-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: cf-deployment-routing-api
  type: git
  source:
    branch: routing-api
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: routing-release-github
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests

jobs:
- name: setup-infrastructure-fresh
  serial_groups: [marauder]
  build_logs_to_retain: 100
  plan:
  - put: marauder-terraform
    params:
      env_name: marauder
      delete_on_failure: true

- name: destroy-infrastructure-fresh
  serial_groups: [marauder]
  build_logs_to_retain: 100
  plan:
  - put: marauder-terraform
    params:
      env_name: marauder
      action: destroy
    get_params:
      action: destroy

- name: merge-master
  serial_groups:
  - marauder
  - trelawney
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-master
      trigger: true
    - get: cf-deployment-routing-api
  - task: merge-master
    file: runtime-ci/scripts/ci/merge-branch/task.yml
    input_mapping:
      branch-repo: cf-deployment-master
      merging-repo: cf-deployment-routing-api
  - put: cf-deployment-routing-api
    params:
      repository: merged-repo
- name: deploy-releases-fresh
  serial_groups: [marauder]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-routing-api
      trigger: true
    - get: marauder-env-properties
      trigger: true
  - task: extract-director-creds-from-terraform-env
    file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
    input_mapping:
      env-repo: marauder-env-properties
  - task: bosh-upload-stemcell-upgrade
    file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
    input_mapping:
      cf-deployment: cf-deployment-routing-api
    params:
      INFRASTRUCTURE: google
  - task: bosh-deploy-cf
    file: runtime-ci/scripts/ci/bosh-deploy/task.yml
    input_mapping:
      manifest: cf-deployment-routing-api
      manifest-properties: marauder-env-properties
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      CA_CERT_FILE: ca-cert
      MANIFEST_FILE: cf-deployment.yml
      DEPLOYMENT_VARS_STORE: deployment-vars.yml
      SYSTEM_DOMAIN: marauder.cf-app.com
      OPS_FILES: "opsfiles/gcp.yml opsfiles/tcp-routing-gcp.yml"
    ensure:
      put: marauder-env-properties
      params:
        repository: updated-vars-store
        rebase: true

- name: acceptance-tests-fresh
  serial_groups: [marauder]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-acceptance-tests
      - get: cf-deployment-routing-api
        trigger: true
        passed: [ deploy-releases-fresh ]
      - get: marauder-env-properties
        trigger: true
        passed: [ deploy-releases-fresh ]
      - get: marauder-env-infrastructure
        passed: [ create-bosh-director-fresh ]
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.marauder.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/cfd-enable-docker-diego/task.yml
      input_mapping:
        cf-deployment: cf-deployment-routing-api
        env-repo: marauder-env-properties
      params:
        VARS_STORE_PATH: deployment-vars.yml
        SYSTEM_DOMAIN: marauder.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: marauder-env-properties
      params:
        NODES: 6
      file: runtime-ci/scripts/ci/run-cats/task.yml

- name: routing-acceptance-tests-fresh
  serial_groups: [marauder-routing]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: routing-release-github
      - get: marauder-env-properties
        trigger: true
        passed: [ deploy-releases-fresh ]
      - get: cf-deployment-routing-api
        trigger: true
        passed: [ deploy-releases-fresh ]
      - get: marauder-env-integration-config
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.marauder.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/cfd-enable-docker-diego/task.yml
      params:
        VARS_STORE_PATH: deployment-vars.yml
        SYSTEM_DOMAIN: marauder.cf-app.com
      input_mapping:
        cf-deployment: cf-deployment-routing-api
        env-repo: marauder-env-integration-config
    - task: run-rats
      input_mapping:
      - routing-release: routing-release-github
      - integration-config: marauder-env-integration-config
      file: runtime-ci/scripts/ci/run-rats/task.yml

- name: create-bosh-director-fresh
  serial_groups: [marauder]
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: marauder-env-infrastructure
  - get: cf-gcp-infrastructure
  - get: marauder-terraform
    trigger: true
    passed: [ setup-infrastructure-fresh ]
  - task: create-gcp-bosh-director
    file: runtime-ci/scripts/ci/create-gcp-bosh-director/task.yml
    input_mapping:
      env-repo: marauder-env-infrastructure
      terraform: marauder-terraform
    params:
      NATS_PASSWORD: {{marauder_nats_password}}
      MBUS_PASSWORD: {{marauder_mbus_password}}
      HM_PASSWORD: {{marauder_hm_password}}
      BLOBSTORE_AGENT_PASSWORD: {{marauder_blobstore_agent_password}}
      BLOBSTORE_DIRECTOR_PASSWORD: {{marauder_blobstore_director_password}}
      POSTGRES_PASSWORD: {{marauder_postgres_password}}
  - put: marauder-env-infrastructure
    params:
      repository: updated-env-repo
      rebase: true
  - task: update-gcp-cloud-config
    file: runtime-ci/scripts/ci/update-gcp-cloud-config/task.yml
    input_mapping:
      env-repo: updated-env-repo
      terraform: marauder-terraform

- name: destroy-bosh-director-fresh
  serial_groups: [setup-deploy-and-test]
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: marauder-env-infrastructure
    passed: [ create-bosh-director-fresh ]
  - get: cf-gcp-infrastructure
  - task: destroy-gcp-bosh-director
    file: runtime-ci/scripts/ci/destroy-gcp-bosh-director/task.yml
    input_mapping:
      env-repo: marauder-env-infrastructure
  - put: marauder-env-infrastructure
    params:
      repository: updated-env-repo
      rebase: true

- name: destroy-infrastructure
  serial_groups: [trelawney, trelawney-routing]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: trelawney-env-infrastructure
    - get: runtime-ci
  - task: unbind-elb-from-r53
    file: runtime-ci/scripts/ci/unbind-elb-from-r53/task.yml
    input_mapping:
      env-repo: trelawney-env-infrastructure
    params:
      AWS_ACCESS_KEY_ID: {{trelawney_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{trelawney_aws_secret_access_key}}
      DOMAIN: trelawney.cf-app.com
  - task: destroy-infrastructure
    file: runtime-ci/scripts/ci/destroy-infrastructure/task.yml
    input_mapping:
      env-repo: trelawney-env-infrastructure
  - put: trelawney-env-infrastructure
    params:
      repository: updated-env-repo

- name: setup-infrastructure
  serial_groups: [trelawney, trelawney-routing]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: trelawney-env-infrastructure
    - get: runtime-ci
  - task: setup-infrastructure
    file: runtime-ci/scripts/ci/setup-infrastructure/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{trelawney_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{trelawney_aws_secret_access_key}}
      BBL_LB_CERT: {{trelawney_lbs_ssl_cert}}
      BBL_LB_KEY: {{trelawney_lbs_ssl_signing_key}}
    input_mapping:
      env-repo: trelawney-env-infrastructure
  - put: trelawney-env-infrastructure
    params:
      repository: updated-env-repo
  - task: extract-director-creds-from-bbl
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    params:
      STATE_DIR_PATH: bbl-infrastructure
    input_mapping:
      env-repo: trelawney-env-infrastructure
  - task: bbl-mixin-routing-release-lbs
    file: runtime-ci/scripts/ci/bbl-mixin-routing-release-lbs/task.yml
    input_mapping:
      env-repo: updated-env-repo
    params:
      AWS_ACCESS_KEY_ID: {{trelawney_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{trelawney_aws_secret_access_key}}
      AWS_DEFAULT_REGION: us-east-1
      ENV_NAME: trelawney
  - put: trelawney-env-infrastructure
    params:
      repository: updated-env-repo
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-env-repo
    params:
      AWS_ACCESS_KEY_ID: {{trelawney_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{trelawney_aws_secret_access_key}}
      DOMAIN: trelawney.cf-app.com

- name: deploy-releases-upgrade
  serial_groups: [trelawney, trelawney-routing]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-routing-api
      trigger: true
    - get: trelawney-env-properties
      trigger: true
    - get: trelawney-env-infrastructure
  - task: extract-director-creds-from-bbl
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    params:
      STATE_DIR_PATH: bbl-infrastructure
    input_mapping:
      env-repo: trelawney-env-infrastructure
  - task: bosh-upload-stemcell-upgrade
    file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
    input_mapping:
      cf-deployment: cf-deployment-routing-api
    params:
      INFRASTRUCTURE: aws
  - task: bosh-deploy-cf
    file: runtime-ci/scripts/ci/bosh-deploy/task.yml
    input_mapping:
      manifest: cf-deployment-routing-api
      manifest-properties: trelawney-env-properties
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      CA_CERT_FILE: ca-cert
      MANIFEST_FILE: cf-deployment.yml
      DEPLOYMENT_VARS_STORE: deployment-env-vars.yml
      SYSTEM_DOMAIN: trelawney.cf-app.com
      OPS_FILES: "opsfiles/change-logging-port-for-aws-elb.yml"
    ensure:
      put: trelawney-env-infrastructure
      params:
        repository: updated-vars-store
        rebase: true

- name: acceptance-tests-upgrade
  serial_groups: [trelawney]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-acceptance-tests
      - get: trelawney-env-properties
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: cf-deployment-routing-api
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: trelawney-env-integration-config
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.trelawney.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/cfd-enable-docker-diego/task.yml
      params:
        VARS_STORE_PATH: deployment-env-vars.yml
        SYSTEM_DOMAIN: trelawney.cf-app.com
      input_mapping:
        cf-deployment: cf-deployment-routing-api
        env-repo: trelawney-env-integration-config
    - task: run-cats
      input_mapping:
      - integration-config: trelawney-env-integration-config
      file: runtime-ci/scripts/ci/run-cats/task.yml

- name: routing-acceptance-tests-upgrade
  serial_groups: [trelawney-routing]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: routing-release-github
      - get: trelawney-env-properties
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: cf-deployment-routing-api
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: trelawney-env-integration-config
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.trelawney.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/cfd-enable-docker-diego/task.yml
      params:
        VARS_STORE_PATH: deployment-env-vars.yml
        SYSTEM_DOMAIN: trelawney.cf-app.com
      input_mapping:
        cf-deployment: cf-deployment-routing-api
        env-repo: trelawney-env-integration-config
    - task: run-rats
      input_mapping:
      - routing-release: routing-release-github
      - integration-config: trelawney-env-integration-config
      file: runtime-ci/scripts/ci/run-rats/task.yml

- name: verify-nameserver-has-record
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: runtime-ci
    - get: weekly
      trigger: true
    - task: verify-nameserver-has-record
      file: runtime-ci/scripts/ci/verify-nameserver-has-record/task.yml
      params:
        AWS_ACCESS_KEY_ID: {{trelawney_aws_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{trelawney_aws_secret_access_key}}
        DOMAIN: trelawney.cf-app.com

- name: run-bosh-cleanup
  serial: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: trelawney-env-infrastructure
      - get: daily
        trigger: true
    - task: extract-director-creds-from-bbl
      file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
      params:
        STATE_DIR_PATH: bbl-infrastructure
      input_mapping:
        env-repo: trelawney-env-infrastructure
    - task: run-bosh-cleanup
      privileged: true
      file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
