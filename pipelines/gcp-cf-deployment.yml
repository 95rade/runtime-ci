---
groups:
- name: infrastructure
  jobs:
  - setup-infrastructure
  - destroy-infrastructure
- name: cf-deployment
  jobs:
  - create-gcp-bosh-director
  - destroy-gcp-bosh-director
  - update-gcp-cloud-config
  - upload-stemcell
  - deploy-releases
  - delete-deployment
  - acceptance-tests

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: git
  type: docker-image
  source:
    repository: concourse/git-resource

resources:
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: luna-env
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_private_key}}
- name: cf-gcp-infrastructure
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/cf-gcp-infrastructure
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: terraform
  type: terraform
  source:
    storage:
      bucket: runtimeci-tfstate
      bucket_path: cf-deployment/
      region_name: us-west-1
      access_key_id: {{aws_access_key}}
      secret_access_key: {{aws_secret_key}}
    terraform_source: github.com/cloudfoundry-incubator/cf-gcp-infrastructure
    vars:
      project: {{project}}
      env_name: &terraform_env_name luna
      region: us-central1
      zones: [us-central1-a, us-central1-b, us-central1-c]
      dns_suffix: cf-app.com
      ssl_cert: {{cf_ssl_cert}}
      ssl_cert_private_key: {{cf_ssl_cert_private_key}}
      service_account_key: {{service_account_json}}
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

jobs:
- name: setup-infrastructure
  serial_groups: [setup-deploy-and-test]
  plan:
  - put: terraform
    params:
      env_name: *terraform_env_name
      delete_on_failure: true

- name: destroy-infrastructure
  serial_groups: [setup-deploy-and-test]
  plan:
  - put: terraform
    params:
      env_name: *terraform_env_name
      action: destroy
    get_params:
      action: destroy

- name: delete-deployment
  public: true
  serial_groups: [nats-deploy]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: luna-env
    - task: extract-director-creds-from-terraform-env
      file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
      input_mapping:
        env-repo: luna-env
    - task: delete-deployment-cf
      input_mapping:
        env-repo: luna-env
      file: runtime-ci/scripts/ci/delete-deployment-bosh-2-0/task.yml
      params:
        DEPLOYMENT_NAME: cf

- name: create-gcp-bosh-director
  serial_groups: [setup-deploy-and-test]
  plan:
  - get: runtime-ci
  - get: luna-env
  - get: cf-gcp-infrastructure
  - get: terraform
  - task: create-gcp-bosh-director
    file: runtime-ci/scripts/ci/create-gcp-bosh-director/task.yml
    input_mapping:
      env-repo: luna-env
    params:
      NATS_PASSWORD: {{nats_password}}
      MBUS_PASSWORD: {{mbus_password}}
      HM_PASSWORD: {{hm_password}}
      BLOBSTORE_AGENT_PASSWORD: {{blobstore_agent_password}}
      BLOBSTORE_DIRECTOR_PASSWORD: {{blobstore_director_password}}
      POSTGRES_PASSWORD: {{postgres_password}}
  - put: luna-env
    params:
      repository: updated-env-repo

- name: destroy-gcp-bosh-director
  serial_groups: [setup-deploy-and-test]
  plan:
  - get: runtime-ci
  - get: luna-env
  - get: cf-gcp-infrastructure
  - task: destroy-gcp-bosh-director
    file: runtime-ci/scripts/ci/destroy-gcp-bosh-director/task.yml
    input_mapping:
      env-repo: luna-env
  - put: luna-env
    params:
      repository: updated-env-repo

- name: update-gcp-cloud-config
  serial_groups: [setup-deploy-and-test]
  plan:
  - get: runtime-ci
  - get: luna-env
  - get: cf-gcp-infrastructure
  - get: terraform
  - task: update-gcp-cloud-config
    file: runtime-ci/scripts/ci/update-gcp-cloud-config/task.yml
    input_mapping:
      env-repo: luna-env

- name: upload-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: luna-env
    - get: cf-deployment-develop
    - get: stemcell
  - task: extract-director-creds-from-terraform-env
    file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
    input_mapping:
      env-repo: luna-env
  - task: bosh-upload-stemcell
    file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
    params:
      TARGET_FILE: target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      CA_CERT_FILE: ca-cert
      STEMCELL_NAME: "*.tgz"

- name: deploy-releases
  serial: true
  serial_groups: [setup-deploy-and-test]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: luna-env
  - task: extract-director-creds-from-terraform-env
    file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
    input_mapping:
      env-repo: luna-env
  - task: bosh-deploy-cf
    file: runtime-ci/scripts/ci/bosh-deploy/task.yml
    input_mapping:
      manifest: cf-deployment-develop
      manifest-properties: luna-env
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      CA_CERT_FILE: ca-cert
      MANIFEST_FILE: cf-deployment.yml
      DEPLOYMENT_VAR_FILE: deployment-vars.yml
      OPS_FILE: opsfiles/gcp.yml

- name: acceptance-tests
  public: true
  serial_groups: [setup-deploy-and-test]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-acceptance-tests
      - get: luna-env
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.luna.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
      input_mapping:
        cf-target: target-file-dir
      params:
        CF_USER: {{luna_admin_username}}
        CF_PASSWORD: {{luna_admin_password}}
    - task: run-cats
      input_mapping:
      - integration-config: luna-env
      params:
        NODES: 6
      file: runtime-ci/scripts/ci/run-cats/task.yml

