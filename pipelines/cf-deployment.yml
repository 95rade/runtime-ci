---
groups:
- name: cf-deployment
  jobs:
  - update-releases
  - deploy-releases-fresh
  - deploy-releases-lite
  - deploy-releases-upgrade
  - acceptance-tests-fresh
  - acceptance-tests-lite
  - acceptance-tests-upgrade
  - routing-acceptance-tests-fresh
  - post-delete-deployment-fresh
  - bless-manifest
- name: infrastructure
  jobs:
  - setup-infrastructure
  - setup-infrastructure-fresh
  - setup-infrastructure-lite
  - create-bosh-director-lite
  - destroy-bosh-director-lite
  - destroy-infrastructure
  - destroy-infrastructure-fresh
  - destroy-infrastructure-lite
  - verify-nameserver-has-record
  - run-bosh-cleanup
  - run-bosh-cleanup-fresh
  - run-bosh-cleanup-lite

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: snitch-terraform
  type: terraform
  source:
    storage:
      bucket: runtimeci-tfstate
      bucket_path: cf-deployment-bosh-lite/
      region_name: us-west-1
      access_key_id: {{snitch_terraform_s3_access_key_id}}
      secret_access_key: {{snitch_terraform_s3_secret_key}}
    terraform_source: github.com/cloudfoundry/runtime-ci//scripts/ci/bosh-create-env/terraform/bosh-lite/
    vars:
      project: {{snitch_gcp_project}}
      region: us-central1
      zones: [us-central1-a]
      env_name: snitch
      dns_suffix: cf-app.com
      service_account_key: {{snitch_gcp_service_account_json}}
- name: luna-env-infrastructure
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_private_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: luna-env-properties
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_private_key}}
    paths:
    - deployment-vars.yml
    - integration_config.json
    - rats_integration_config.json
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 168h
- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: hermione-env-infrastructure
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - bbl-state.json
- name: hermione-env-properties
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - deployment-vars.yml
    - integration_config.json
- name: windows-stemcell
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-windows2012R2-go_agent.tgz
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: routing-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: cf-deployment-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: capi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/capi-release
- name: nats-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nats-release
- name: routing-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release
- name: etcd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release
- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: loggregator-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator
- name: cf-mysql-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release
- name: uaa-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release
- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: binary-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/binary-buildpack-release
- name: dotnet-core-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/dotnet-core-buildpack-release
- name: go-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/go-buildpack-release
- name: java-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-buildpack-release
- name: nodejs-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nodejs-buildpack-release
- name: php-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/php-buildpack-release
- name: python-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/python-buildpack-release
- name: ruby-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/ruby-buildpack-release
- name: staticfile-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/staticfile-buildpack-release
- name: cflinuxfs2-rootfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release
- name: snitch-env-properties
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - deployment-vars.yml
    - integration_config.json
    - rats_integration_config.json
- name: snitch-env-infrastructure
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - infrastructure/*
- name: snitch-env-bbl-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - bbl-state.json
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/ChunyiLyu/bosh-deployment.git
- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

jobs:
- name: setup-infrastructure
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: hermione-env-infrastructure
    - get: runtime-ci
  - task: setup-infrastructure
    file: runtime-ci/scripts/ci/setup-infrastructure/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-east-1
      BBL_AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{hermione_lbs_ssl_cert}}
      BBL_LB_KEY: {{hermione_lbs_ssl_signing_key}}
      DOMAIN: hermione.cf-app.com
    input_mapping:
      env-repo: hermione-env-infrastructure
  - put: hermione-env-infrastructure
    params:
      repository: updated-env-repo
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-env-repo
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com

- name: setup-infrastructure-fresh
  serial_groups: [luna]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: luna-env-infrastructure
  - task: setup-infrastructure
    file: runtime-ci/scripts/ci/setup-infrastructure/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{luna_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      BBL_LB_CERT: {{luna_cf_ssl_cert}}
      BBL_LB_KEY: {{luna_cf_ssl_cert_private_key}}
      DOMAIN: luna.cf-app.com
    input_mapping:
      env-repo: luna-env-infrastructure
  - put: luna-env-infrastructure
    params:
      repository: updated-env-repo
      rebase: true

- name: setup-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - put: snitch-terraform
    params:
      env_name: snitch
      delete_on_failure: true

- name: create-bosh-director-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: bosh-deployment
  - get: cf-deployment-develop
  - get: snitch-env-infrastructure
  - get: snitch-terraform
    trigger: true
    passed: [ setup-infrastructure-lite ]
  - task: bosh-create-env
    file: runtime-ci/scripts/ci/bosh-create-env/task.yml
    input_mapping:
      env-repo: snitch-env-infrastructure
      terraform: snitch-terraform
    params:
      STATE_FILE: infrastructure/bosh/state.json
      VARS_FILE: infrastructure/bosh/deployment-vars.yml
      OPS_FILES: "bosh-deployment/bosh-lite.yml bosh-deployment/jumpbox-user.yml bosh-deployment/gcp/bosh-lite-vm-type.yml"
      DIRECTOR_NAME: snitch
      GCP_PROJECTID: {{snitch_gcp_project}}
      GCP_CREDENTIALS: {{snitch_gcp_service_account_json}}
      GCP_ZONE: us-central1-a
  - put: snitch-env-infrastructure
    params:
      repository: updated-env-repo
      rebase: true
  - task: bbl-state-from-vars-store
    file: runtime-ci/scripts/ci/bbl-state-from-vars-store/task.yml
    input_mapping:
      env-repo: snitch-env-infrastructure
      terraform: snitch-terraform
  - put: snitch-env-bbl-state
    params:
      repository: updated-env-repo
      rebase: true
  - task: extract-director-creds-from-terraform-env
    file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
    input_mapping:
      env-repo: snitch-env-infrastructure
  - task: bosh-update-cloud-config
    file: runtime-ci/scripts/ci/bosh-update-cloud-config/task.yml
    input_mapping:
      cloud-config: cf-deployment-develop
    params:
      TARGET_FILE: target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      CA_CERT_FILE: ca-cert
      CLOUD_CONFIG_FILE: bosh-lite/cloud-config.yml

- name: deploy-releases-fresh
  serial_groups: [luna, luna-routing]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-develop
      trigger: true
    - get: luna-env-properties
    - get: luna-env-infrastructure
  - task: extract-director-creds-from-bbl
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    input_mapping:
      env-repo: luna-env-infrastructure
  - task: bosh-upload-stemcell-fresh
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: google
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      env-repo: luna-env-infrastructure
    file: runtime-ci/scripts/ci/delete-deployment-bosh-2-0/task.yml
    params:
      DEPLOYMENT_NAME: cf
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: luna-env-infrastructure
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-store: luna-env-properties
    params:
      SYSTEM_DOMAIN: luna.cf-app.com
      OPS_FILES: "opsfiles/gcp.yml opsfiles/tcp-routing-gcp.yml"
    ensure:
      put: luna-env-properties
      params:
        repository: updated-vars-store
        rebase: true
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      DEPLOYMENT_VARS_STORE: deployment-vars.yml
    input_mapping:
      manifest-properties: luna-env-properties
    ensure:
      put: luna-env-properties
      params:
        repository: updated-integration-config
        rebase: true
  - task: ensure-api-healthy
    file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
    params:
      ENDPOINT: api.luna.cf-app.com

- name: deploy-releases-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-develop
      trigger: true
    - get: hermione-env-properties
      trigger: true
    - get: hermione-env-infrastructure
    - get: windows-stemcell
  - task: extract-director-creds-from-bbl
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    input_mapping:
      env-repo: hermione-env-infrastructure
  - task: bosh-upload-stemcell-upgrade
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
    params:
      INFRASTRUCTURE: aws
  - task: bosh-upload-windows-stemcell
    file: runtime-ci/scripts/ci/bosh-upload-stemcell-1-0/task.yml
    input_mapping:
      stemcell: windows-stemcell
    params:
      TARGET_FILE: target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      CA_CERT_FILE: ca-cert
      STEMCELL_NAME: '*.tgz'
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: hermione-env-infrastructure
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-store: hermione-env-properties
    params:
      SYSTEM_DOMAIN: hermione.cf-app.com
      OPS_FILES: "opsfiles/change-logging-port-for-aws-elb.yml opsfiles/windows-cell.yml"
    ensure:
      put: hermione-env-infrastructure
      params:
        repository: updated-vars-store
        rebase: true
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      DEPLOYMENT_VARS_STORE: deployment-vars.yml
    input_mapping:
      manifest-properties: hermione-env-properties
    ensure:
      put: hermione-env-properties
      params:
        repository: updated-integration-config
        rebase: true

- name: deploy-releases-lite
  public: true
  serial_groups: [snitch]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
        trigger: true
      - get: bosh-deployment
      - get: snitch-env-infrastructure
      - get: snitch-env-properties
      - get: snitch-env-bbl-state
    - task: extract-director-creds-from-terraform-env
      file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
      input_mapping:
        env-repo: snitch-env-infrastructure
    - task: bosh-upload-stemcell-lite
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
      params:
        INFRASTRUCTURE: bosh-lite
    - task: bosh-deploy-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: snitch-env-bbl-state
        cf-deployment: cf-deployment-develop
        vars-store: snitch-env-properties
        ops-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
        OPS_FILES: "opsfiles/bosh-lite.yml"
      ensure:
        put: snitch-env-properties
        params:
          repository: updated-vars-store
          rebase: true
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        DEPLOYMENT_VARS_STORE: deployment-vars.yml
      input_mapping:
        manifest-properties: snitch-env-properties
      ensure:
        put: snitch-env-properties
        params:
          repository: updated-integration-config
          rebase: true
    - task: ensure-api-healthy
      file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
      params:
        ENDPOINT: api.snitch.cf-app.com

- name: acceptance-tests-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-acceptance-tests
      - get: hermione-env-properties
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: cf-deployment-develop
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: hermione-env-properties
      - get: cats-concourse-task
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.hermione.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
      params:
        VARS_STORE_PATH: deployment-vars.yml
        SYSTEM_DOMAIN: hermione.cf-app.com
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: hermione-env-properties
    - task: run-cats
      input_mapping:
      - integration-config: hermione-env-properties
      file: cats-concourse-task/task.yml

- name: acceptance-tests-fresh
  serial_groups: [luna]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-acceptance-tests
      - get: cf-deployment-develop
        trigger: true
        passed: [ deploy-releases-fresh ]
      - get: luna-env-properties
      - get: cats-concourse-task
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.luna.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: luna-env-properties
      params:
        VARS_STORE_PATH: deployment-vars.yml
        SYSTEM_DOMAIN: luna.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: luna-env-properties
      params:
        NODES: 6
      file: cats-concourse-task/task.yml

- name: acceptance-tests-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-acceptance-tests
      - get: cf-deployment-develop
        trigger: true
        passed: [ deploy-releases-lite ]
      - get: snitch-env-properties
      - get: cats-concourse-task
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.snitch.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: snitch-env-properties
      params:
        VARS_STORE_PATH: deployment-vars.yml
        SYSTEM_DOMAIN: snitch.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: snitch-env-properties
      params:
        NODES: 6
      file: cats-concourse-task/task.yml

- name: routing-acceptance-tests-fresh
  serial_groups: [luna-routing]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: routing-acceptance-tests
      - get: luna-env-properties
      - get: cf-deployment-develop
        trigger: true
        passed: [ deploy-releases-fresh ]
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.luna.cf-app.com
    - task: enable-docker-diego
      file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
      params:
        VARS_STORE_PATH: deployment-vars.yml
        SYSTEM_DOMAIN: luna.cf-app.com
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: luna-env-properties
    - task: run-rats
      input_mapping:
      - routing-release: routing-acceptance-tests
      - integration-config: luna-env-properties
      file: runtime-ci/scripts/ci/run-rats/task.yml

- name: post-delete-deployment-fresh
  serial_groups: [luna, luna-routing]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: luna-env-infrastructure
      - get: luna-env-properties
        passed: [ deploy-releases-fresh ]
      - get: cf-deployment-develop
        trigger: true
        passed: [ acceptance-tests-fresh]
    - task: extract-director-creds-from-bbl
      file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
      input_mapping:
        env-repo: luna-env-infrastructure
    - task: delete-deployment-cf
      input_mapping:
        env-repo: luna-env-infrastructure
      file: runtime-ci/scripts/ci/delete-deployment-bosh-2-0/task.yml
      params:
        DEPLOYMENT_NAME: cf

- name: destroy-infrastructure
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: hermione-env-infrastructure
    - get: runtime-ci
  - task: unbind-elb-from-r53
    file: runtime-ci/scripts/ci/unbind-elb-from-r53/task.yml
    input_mapping:
      env-repo: hermione-env-infrastructure
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com
  - task: destroy-infrastructure
    file: runtime-ci/scripts/ci/destroy-infrastructure/task.yml
    input_mapping:
      env-repo: hermione-env-infrastructure
  - put: hermione-env-infrastructure
    params:
      repository: updated-env-repo

- name: destroy-infrastructure-fresh
  serial_groups: [luna]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: luna-env-infrastructure
    - get: runtime-ci
  - task: destroy-infrastructure
    file: runtime-ci/scripts/ci/destroy-infrastructure/task.yml
    input_mapping:
      env-repo: luna-env-infrastructure
  - put: luna-env-infrastructure
    params:
      repository: updated-env-repo
      rebase: true

- name: destroy-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: snitch-terraform
  - put: snitch-terraform
    params:
      env_name: snitch
      action: destroy
    get_params:
      action: destroy

- name: destroy-bosh-director-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: snitch-terraform
    - get: bosh-deployment
    - get: snitch-env-properties
    - get: snitch-env-infrastructure
      passed: [ create-bosh-director-lite ]
  - task: extract-director-creds-from-terraform-env
    file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
    input_mapping:
      env-repo: snitch-env-properties
  - task: ensure-no-cf-deployment
    input_mapping:
      env-repo: snitch-env-properties
    file: runtime-ci/scripts/ci/delete-deployment-bosh-2-0/task.yml
    params:
      DEPLOYMENT_NAME: cf
  - task: bosh-delete-env-lite
    file: runtime-ci/scripts/ci/bosh-delete-env/task.yml
    input_mapping:
      env-repo: snitch-env-infrastructure
    input_mapping:
      env-repo: snitch-env-infrastructure
      bosh-deployment: bosh-deployment
      terraform: snitch-terraform
    params:
      STATE_FILE: infrastructure/bosh/state.json
      VARS_FILE: infrastructure/bosh/deployment-vars.yml
      OPS_FILES: "bosh-deployment/bosh-lite.yml"
      DIRECTOR_NAME: snitch
      GCP_PROJECTID: {{snitch_gcp_project}}
      GCP_CREDENTIALS: {{snitch_gcp_service_account_json}}
      GCP_ZONE: us-central1-a
  - put: snitch-env-infrastructure
    params:
      repository: updated-env-repo
      rebase: true

- name: bless-manifest
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
    - do:
      - aggregate:
        - get: runtime-ci
        - get: cf-deployment-develop
          trigger: true
          passed:
          - acceptance-tests-upgrade
          - acceptance-tests-fresh
          - routing-acceptance-tests-fresh
          - acceptance-tests-lite
        - get: cf-deployment-master
    - put: cf-deployment-master
      params:
        repository: cf-deployment-develop

- name: update-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: hermione-env-infrastructure
    - get: cf-deployment-develop
    - get: hermione-env-properties
    - get: stemcell
      trigger: true
      params:
        tarball: false
    - get: capi-release
      trigger: true
      params:
        tarball: false
    - get: nats-release
      trigger: true
      params:
        tarball: false
    - get: routing-release
      trigger: true
      params:
        tarball: false
    - get: consul-release
      trigger: true
      params:
        tarball: false
    - get: etcd-release
      trigger: true
      params:
        tarball: false
    - get: diego-release
      trigger: true
      params:
        tarball: false
    - get: loggregator-release
      trigger: true
      params:
        tarball: false
    - get: cf-mysql-release
      trigger: true
      params:
        tarball: false
    - get: uaa-release
      trigger: true
      params:
        tarball: false
    - get: garden-runc-release
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-rootfs-release
      trigger: true
      params:
        tarball: false
    - get: binary-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: dotnet-core-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: go-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: java-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: nodejs-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: php-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: python-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: ruby-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: staticfile-buildpack-release
      trigger: true
      params:
        tarball: false
  - task: extract-director-creds-from-bbl
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    input_mapping:
      env-repo: hermione-env-infrastructure
  - task: create-binaries-manifest-section
    file: runtime-ci/scripts/ci/create-binaries-manifest-section/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: commit-generated-manifest
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      manifest: deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMMIT_MESSAGE: 'Update releases'
  - put: cf-deployment-develop
    params:
      repository: updated-repo

- name: verify-nameserver-has-record
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: runtime-ci
    - get: weekly
      trigger: true
    - task: verify-nameserver-has-record
      file: runtime-ci/scripts/ci/verify-nameserver-has-record/task.yml
      params:
        AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
        DOMAIN: hermione.cf-app.com

- name: run-bosh-cleanup
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: hermione-env-infrastructure
      - get: daily
        trigger: true
    - task: extract-director-creds-from-bbl
      file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
      input_mapping:
        env-repo: hermione-env-infrastructure
    - task: run-bosh-cleanup
      privileged: true
      file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml

- name: run-bosh-cleanup-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: luna-env-infrastructure
      - get: daily
        trigger: true
    - task: extract-director-creds-from-bbl
      file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
      input_mapping:
        env-repo: luna-env-infrastructure
    - task: run-bosh-cleanup
      privileged: true
      file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml

- name: run-bosh-cleanup-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: snitch-env-infrastructure
      - get: daily
        trigger: true
    - task: extract-director-creds-from-terraform-env
      file: runtime-ci/scripts/ci/extract-director-creds-from-terraform-env/task.yml
      input_mapping:
        env-repo: snitch-env-infrastructure
    - task: run-bosh-cleanup
      privileged: true
      file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
