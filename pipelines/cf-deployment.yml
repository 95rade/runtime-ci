---
groups:
- name: cf-deployment
  jobs:
  - complex-deploy
  - fresh-deploy
  - lite-deploy
  - transition-deploy
  - upgrade-deploy

  - lint-cf-deployment-manifest
  - complex-cats
  - fresh-cats
  - lite-cats
  - transition-cats
  - upgrade-cats
  - upgrade-smoke-tests
  - upgrade-wats
  - fresh-rats
  - lite-http-rats
  - upgrade-http-rats
  - ops-test
  - unit-test-ops-files
  - unit-test-transition-tools

  - bless-manifest
  - ship-it-minor
  - ship-it-patch
- name: releases
  jobs:
  - update-release-capi
  - update-release-cf-networking
  - update-release-grootfs
  - update-release-postgres
  - update-release-mysql
  - update-release-stemcell
  - update-releases
  - update-releases-windows
- name: dev
  jobs:
  - add-claimed-lock-fresh
  - add-claimed-lock-lite
  - add-claimed-lock-transition
  - add-claimed-lock-complex
  - add-claimed-lock-upgrade
  - bless-manifest
  - branch-freshness
  - destroy-infrastructure-compile
  - destroy-infrastructure-fresh
  - destroy-infrastructure-lite
  - destroy-infrastructure-ops
  - destroy-infrastructure-transition
  - destroy-infrastructure-complex
  - destroy-infrastructure-upgrade
  - ensure-transition-env-is-clean
  - ensure-complex-env-is-clean
  - fresh-acquire-pool
  - fresh-cats
  - fresh-delete-deployment
  - fresh-deploy
  - fresh-rats
  - fresh-release-pool-manual
  - legacy-deploy
  - lint-cf-deployment-manifest
  - lite-acquire-pool
  - lite-cats
  - lite-deploy
  - lite-http-rats
  - lite-release-pool
  - lite-release-pool-manual
  - ops-test
  - remove-claimed-lock-complex
  - remove-claimed-lock-fresh
  - remove-claimed-lock-lite
  - remove-claimed-lock-transition
  - run-bosh-cleanup-lite
  - run-bosh-cleanup-upgrade
  - setup-infrastructure-compile
  - setup-infrastructure-fresh
  - setup-infrastructure-lite
  - setup-infrastructure-ops
  - setup-infrastructure-transition
  - setup-infrastructure-complex
  - setup-infrastructure-upgrade
  - ship-it-minor
  - ship-it-patch
  - complex-acquire-pool
  - complex-deploy
  - complex-cats
  - transition-acquire-pool
  - transition-cats
  - transition-delete-deployment
  - transition-deploy
  - transition-record-compatible-versions
  - unit-test-ops-files
  - unit-test-transition-tools
  - update-release-capi
  - update-release-mysql
  - update-releases
  - update-releases-windows
  - upgrade-acquire-pool
  - upgrade-cats
  - upgrade-deploy
  - upgrade-http-rats
  - upgrade-release-pool
  - upgrade-smoke-tests
  - upgrade-wats
  - verify-nameserver-has-record
- name: inf
  jobs:
  - add-claimed-lock-fresh
  - add-claimed-lock-upgrade
  - add-claimed-lock-complex
  - add-claimed-lock-lite
  - setup-infrastructure-compile
  - setup-infrastructure-fresh
  - add-claimed-lock-transition
  - setup-infrastructure-transition
  - setup-infrastructure-complex
  - setup-infrastructure-lite
  - setup-infrastructure-ops
  - setup-infrastructure-upgrade
  - destroy-infrastructure-compile
  - destroy-infrastructure-fresh
  - destroy-infrastructure-transition
  - destroy-infrastructure-complex
  - destroy-infrastructure-lite
  - destroy-infrastructure-ops
  - destroy-infrastructure-upgrade
  - remove-claimed-lock-complex
  - remove-claimed-lock-fresh
  - remove-claimed-lock-lite
  - remove-claimed-lock-transition
  - verify-nameserver-has-record
  - run-bosh-cleanup-upgrade
  - run-bosh-cleanup-lite
  - transition-acquire-pool
  - ensure-transition-env-is-clean
  - legacy-deploy
  - complex-acquire-pool
  - ensure-complex-env-is-clean
  - complex-legacy-deploy
- name: up
  jobs:
  - upgrade-acquire-pool
  - upgrade-cats
  - upgrade-deploy
  - upgrade-http-rats
  - upgrade-release-pool
  - upgrade-smoke-tests
  - upgrade-wats
  - bless-manifest
- name: fr
  jobs:
  - fresh-acquire-pool
  - fresh-cats
  - fresh-delete-deployment
  - fresh-deploy
  - fresh-rats
  - fresh-release-pool-manual
  - bless-manifest
- name: li
  jobs:
  - lite-acquire-pool
  - lite-cats
  - lite-deploy
  - lite-http-rats
  - lite-release-pool
  - lite-release-pool-manual
  - bless-manifest
- name: tr
  jobs:
  - ensure-complex-env-is-clean
  - complex-legacy-deploy
  - complex-acquire-pool
  - complex-deploy
  - complex-cats

  - transition-release-pool-manual
  - ensure-transition-env-is-clean
  - legacy-deploy
  - transition-acquire-pool
  - transition-cats
  - transition-delete-deployment
  - transition-deploy
  - transition-record-compatible-versions
  - bless-manifest

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

- name: complex-legacy-cf-bosh-deployment
  type: bosh-deployment
  source:
    target: https://bosh.dumbledore.cf-app.com:25555
    username: admin
    password: {{dumbledore_bosh_password}}
    deployment: cf
    ignore_ssl: true

- name: complex-legacy-diego-bosh-deployment
  type: bosh-deployment
  source:
    target: https://bosh.dumbledore.cf-app.com:25555
    username: admin
    password: {{dumbledore_bosh_password}}
    deployment: cf-diego
    ignore_ssl: true

- name: legacy-cf-bosh-deployment
  type: bosh-deployment
  source:
    target: https://bosh.minerva.cf-app.com:25555
    username: admin
    password: {{minerva_bosh_password}}
    deployment: cf
    ignore_ssl: true

- name: legacy-diego-bosh-deployment
  type: bosh-deployment
  source:
    target: https://bosh.minerva.cf-app.com:25555
    username: admin
    password: {{minerva_bosh_password}}
    deployment: cf-diego
    ignore_ssl: true

- name: legacy-cf-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release
- name: legacy-diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: legacy-garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: legacy-cflinuxfs2-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release
- name: legacy-cf-networking-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-networking-release
- name: legacy-grootfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/grootfs-release

- name: turbulence-github-release
  type: git
  source:
    uri: https://github.com/cppforlife/turbulence-release.git
    branch: master

- name: fresh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: lite-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/lite
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: upgrade-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/upgrade
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: complex-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/complex
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: transition-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/transition
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: ops-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/ops
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: minerva-env-stubs-and-vars
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
    paths:
    - transition/stubs/*
    - deployment-vars.yml
    - integration_config.json
    - s3-vars.yml
    - rds-vars.yml
- name: dumbledore-env-stubs-and-vars
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: {{dumbledore_env_readwrite_deploy_key}}
    paths:
    - transition/stubs/*
    - deployment-vars.yml
    - integration_config.json
    - s3-vars.yml
    - rds-vars.yml
- name: dumbledore-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: {{dumbledore_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: luna-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: luna-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: luna-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - deployment-vars.yml
- name: minerva-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
- name: dumbledore-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: {{dumbledore_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
- name: greengrass-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/greengrass-env.git
    private_key: {{greengrass_env_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: trelawney-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: {{trelawney_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 168h
- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: hermione-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - bbl-state.json
- name: hermione-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - integration_config.json
    - wats_integration_config.json
    - rats_integration_config.json
- name: hermione-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - deployment-vars.yml
- name: hermione-env-turbulence-vars
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - turbulence-deployment-vars.yml
- name: windows-stemcell
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-windows2012R2-go_agent.tgz
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: cf-deployment-transition
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-transition.git
- name: cf-deployment-transition-compatability
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment-transition-compatibility.git
    private_key: {{cf_deployment_transition_compatibility_private_key}}
- name: cf-deployment-release-candidate
  type: git
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: cf-deployment-all-branches
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-deployment.git
- name: cf-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-release.git
    depth: 1
    submodules: none
- name: github-diego-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/diego-release.git
    tag_filter: v1.*
- name: github-routing-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release
- name: windows-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/ChunyiLyu/wats
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: cf-deployment-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: nats-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nats-release
- name: routing-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release
- name: etcd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release
- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: loggregator-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator
- name: capi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/capi-release
- name: postgres-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
- name: cf-networking-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-networking-release
- name: grootfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/grootfs-release
- name: cf-mysql-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release
- name: uaa-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release
- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: binary-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/binary-buildpack-release
- name: dotnet-core-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/dotnet-core-buildpack-release
- name: go-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/go-buildpack-release
- name: java-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-buildpack-release
- name: nodejs-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nodejs-buildpack-release
- name: php-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/php-buildpack-release
- name: python-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/python-buildpack-release
- name: ruby-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/ruby-buildpack-release
- name: staticfile-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/staticfile-buildpack-release
- name: statsd-injector-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/statsd-injector-release
- name: cflinuxfs2-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release
- name: cf-smoke-tests-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-smoke-tests-release
- name: hwc-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/hwc-buildpack-release
- name: garden-windows-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-windows-bosh-release
- name: snitch-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - deployment-vars.yml
- name: snitch-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: snitch-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - google_account_creds.json
    - bbl-state.json
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git
- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: mysql-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: {{concourse_gcp_service_account_json}}
    regexp: cf-mysql-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz

- name: capi-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: {{concourse_gcp_service_account_json}}
    regexp: capi-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz

- name: cf-deployment-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-relint-ci-semver.git
    branch: master
    private_key: {{cf_relint_ci_semver_private_key}}
    git_user: "CF MEGA BOT <cf-mega@pivotal.io>"
    file: cf-deployment-version

jobs:
- name: branch-freshness
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-all-branches
      trigger: true
    - get: runtime-ci
  - task: validate-branch-freshness
    file: runtime-ci/scripts/ci/validate-branch-freshness/task.yml
    input_mapping:
      repo: cf-deployment-all-branches

- name: add-claimed-lock-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: minerva
    output_mapping:
      pool-resource: transition-pool
  - put: transition-pool
    params: {add_claimed: transition-pool}

- name: setup-infrastructure-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: minerva-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: transition-pool
      trigger: true
      passed: [ add-claimed-lock-transition ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: {{minerva_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{minerva_aws_secret_access_key}}
      BBL_LB_CERT: {{minerva_lbs_ssl_cert}}
      BBL_LB_KEY: {{minerva_lbs_ssl_signing_key}}
      BBL_ENV_NAME: minerva-upgrade
    input_mapping:
      bbl-state: minerva-env-director-state
    ensure:
      put: minerva-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: transition-pool
    params: {release: transition-pool}

- name: add-claimed-lock-complex
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: dumbledore
    output_mapping:
      pool-resource: complex-pool
  - put: complex-pool
    params: {add_claimed: complex-pool}

- name: setup-infrastructure-complex
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: dumbledore-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: complex-pool
      trigger: true
      passed: [ add-claimed-lock-complex ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: {{dumbledore_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{dumbledore_aws_secret_access_key}}
      BBL_LB_CERT: {{dumbledore_lbs_ssl_cert}}
      BBL_LB_KEY: {{dumbledore_lbs_ssl_signing_key}}
      BBL_ENV_NAME: dumbledore-upgrade
    input_mapping:
      bbl-state: dumbledore-env-director-state
    ensure:
      put: dumbledore-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-bbl-state
    params:
      AWS_ACCESS_KEY_ID: {{dumbledore_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{dumbledore_aws_secret_access_key}}
      DOMAIN: dumbledore.cf-app.com
  - put: complex-pool
    params: {release: complex-pool}

- name: add-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {add_claimed: fresh-pool}

- name: setup-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: luna-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: fresh-pool
      trigger: true
      passed: [ add-claimed-lock-fresh ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{luna_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      BBL_LB_CERT: {{luna_cf_ssl_cert}}
      BBL_LB_KEY: {{luna_cf_ssl_cert_private_key}}
      LB_DOMAIN: luna.cf-app.com
      BBL_ENV_NAME: luna-fresh
    input_mapping:
      bbl-state: luna-env-director-state
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: fresh-pool
    params: {release: fresh-pool}

- name: setup-infrastructure-compile
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{greengrass_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      BBL_LB_CERT: {{greengrass_cf_ssl_cert}}
      BBL_LB_KEY: {{greengrass_cf_ssl_cert_private_key}}
      LB_DOMAIN: greengrass.cf-app.com
      BBL_ENV_NAME: greengrass-compile
    input_mapping:
      bbl-state: greengrass-env-director-state
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: add-claimed-lock-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: upgrade-pool
  - put: upgrade-pool
    params: {add_claimed: upgrade-pool}

- name: add-claimed-lock-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {add_claimed: lite-pool}

- name: setup-infrastructure-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: hermione-env-director-state
    - get: runtime-ci
    - get: turbulence-github-release
    - get: hermione-env-turbulence-vars
    - get: upgrade-pool
      trigger: true
      passed: [ add-claimed-lock-upgrade ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{hermione_lbs_ssl_cert}}
      BBL_LB_KEY: {{hermione_lbs_ssl_signing_key}}
      BBL_ENV_NAME: hermione-upgrade
    input_mapping:
      bbl-state: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-bbl-state
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com
  - task: deploy-turbulence-api-upgrade
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: turbulence-github-release
      vars-store: hermione-env-turbulence-vars
      bbl-state: hermione-env-director-state
      ops-files: runtime-ci
      vars-files: hermione-env-turbulence-vars
    params:
      MANIFEST_FILE: manifests/turbulence.yml
      SYSTEM_DOMAIN: cf-app.com # not used, this is a required by the task
      VARS_STORE_FILE: turbulence-deployment-vars.yml
      OPS_FILES: experiments/operations/add-turbulence-bosh-io-release.yml
    ensure:
      put: hermione-env-turbulence-vars
      params:
        repository: updated-vars-store
        rebase: true
  - put: upgrade-pool
    params: {release: upgrade-pool}

- name: setup-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: bosh-deployment
    - get: snitch-env-director-state
    - get: cf-deployment-develop
    - get: lite-pool
      trigger: true
      passed: [ add-claimed-lock-lite ]
  - task: setup-infrastructure
    file: runtime-ci/tasks/prototype/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{snitch_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      LB_DOMAIN: snitch.cf-app.com
      BBL_ENV_NAME: snitch-lite
      OPS_FILES: "bosh-lite.yml bosh-lite-runc.yml jumpbox-user.yml gcp/bosh-lite-vm-type.yml"
      IS_BOSH_LITE: true
    input_mapping:
      bbl-state: snitch-env-director-state
      ops-files: bosh-deployment
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: bosh-update-cloud-config
    file: runtime-ci/scripts/ci/bosh-update-cloud-config/task.yml
    input_mapping:
      bbl-state: snitch-env-director-state
      cloud-config: cf-deployment-develop
    params:
      CLOUD_CONFIG_FILE: "bosh-lite/cloud-config.yml"
  - put: lite-pool
    params: {release: lite-pool}

- name: setup-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: trelawney-env-director-state
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: prepared-ops-pool
  - put: ops-pool
    params: {add_claimed: prepared-ops-pool}
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{trelawney_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      BBL_LB_CERT: {{trelawney_cf_ssl_cert}}
      BBL_LB_KEY: {{trelawney_cf_ssl_cert_private_key}}
      LB_DOMAIN: trelawney.cf-app.com
      BBL_ENV_NAME: trelawney-fresh
    input_mapping:
      bbl-state: trelawney-env-director-state
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: ops-pool
    params: {release: ops-pool}

- name: fresh-acquire-pool
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
    - put: fresh-pool
      params: {acquire: true}

- name: lite-acquire-pool
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
    - put: lite-pool
      params: {acquire: true}

- name: lint-cf-deployment-manifest
  serial: false
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: lint-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: cf-deployment-develop
      run:
        path: /bin/bash
        args:
        - -exc
        - |
          ruby -e "require 'yaml'; YAML.load_file('./cf-deployment-develop/cf-deployment.yml')"

- name: unit-test-ops-files
  serial: false
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: unit-test-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-develop
      run:
        path: cf-deployment-develop/scripts/test

- name: unit-test-transition-tools
  serial: false
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-transition
    trigger: true
  - task: unit-test-suite
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-and-spiff
      inputs:
      - name: cf-deployment-transition
      run:
        path: cf-deployment-transition/test/test-suite.sh

- name: transition-acquire-pool
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-release-candidate
        trigger: true
      - get: legacy-cf-release
        trigger: true
      - get: legacy-diego-release
        trigger: true
      - put: transition-pool
        params: {claim: minerva}

- name: ensure-transition-env-is-clean
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-director-state
      - get: runtime-ci
      - get: transition-pool
        passed: [ transition-acquire-pool ]
        trigger: true
    - aggregate:
      - task: guarantee-no-existing-cf-deployment
        input_mapping:
          bbl-state: minerva-env-director-state
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      - task: guarantee-no-existing-diego-deployment
        input_mapping:
          bbl-state: minerva-env-director-state
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        params:
          DEPLOYMENT_NAME: cf-diego
    - aggregate:
      - task: recreate-uaadb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: minerva-env-director-state
        params:
          DB_HOST: {{minerva_uaadb_host}}
          DB_USER: {{minerva_uaadb_user}}
          DB_PASSWORD: {{minerva_uaadb_password}}
          DB_NAME: {{minerva_uaadb_db_name}}
      - task: recreate-ccdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: minerva-env-director-state
        params:
          DB_HOST: {{minerva_ccdb_host}}
          DB_USER: {{minerva_ccdb_user}}
          DB_PASSWORD: {{minerva_ccdb_password}}
          DB_NAME: {{minerva_ccdb_db_name}}
      - task: recreate-bbsdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: minerva-env-director-state
        params:
          DB_HOST: {{minerva_bbsdb_host}}
          DB_USER: {{minerva_bbsdb_user}}
          DB_PASSWORD: {{minerva_bbsdb_password}}
          DB_NAME: {{minerva_bbsdb_db_name}}

- name: complex-acquire-pool
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-release-candidate
        trigger: true
      - get: legacy-cf-release
        trigger: true
      - get: legacy-diego-release
        trigger: true
      - put: complex-pool
        params: {claim: dumbledore}

- name: ensure-complex-env-is-clean
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: dumbledore-env-director-state
      - get: runtime-ci
      - get: complex-pool
        passed: [ complex-acquire-pool ]
        trigger: true
    - aggregate:
      - task: guarantee-no-existing-cf-deployment
        input_mapping:
          bbl-state: dumbledore-env-director-state
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      - task: guarantee-no-existing-diego-deployment
        input_mapping:
          bbl-state: dumbledore-env-director-state
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        params:
          DEPLOYMENT_NAME: cf-diego
    - aggregate:
      - task: recreate-uaadb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: dumbledore-env-director-state
        params:
          DB_HOST: {{dumbledore_uaadb_host}}
          DB_USER: {{dumbledore_uaadb_user}}
          DB_PASSWORD: {{dumbledore_uaadb_password}}
          DB_NAME: {{dumbledore_uaadb_db_name}}
      - task: recreate-ccdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: dumbledore-env-director-state
        params:
          DB_HOST: {{dumbledore_ccdb_host}}
          DB_USER: {{dumbledore_ccdb_user}}
          DB_PASSWORD: {{dumbledore_ccdb_password}}
          DB_NAME: {{dumbledore_ccdb_db_name}}
      - task: recreate-npdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: dumbledore-env-director-state
        params:
          DB_HOST: {{dumbledore_npdb_host}}
          DB_USER: {{dumbledore_npdb_user}}
          DB_PASSWORD: {{dumbledore_npdb_password}}
          DB_NAME: {{dumbledore_npdb_db_name}}
      - task: recreate-ncdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: dumbledore-env-director-state
        params:
          DB_HOST: {{dumbledore_ncdb_host}}
          DB_USER: {{dumbledore_ncdb_user}}
          DB_PASSWORD: {{dumbledore_ncdb_password}}
          DB_NAME: {{dumbledore_ncdb_db_name}}
      - task: recreate-bbsdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: dumbledore-env-director-state
        params:
          DB_HOST: {{dumbledore_bbsdb_host}}
          DB_USER: {{dumbledore_bbsdb_user}}
          DB_PASSWORD: {{dumbledore_bbsdb_password}}
          DB_NAME: {{dumbledore_bbsdb_db_name}}
      - task: recreate-routingapidb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          bbl-state: dumbledore-env-director-state
        params:
          DB_HOST: {{dumbledore_routingapidb_address}}
          DB_USER: {{dumbledore_routingapidb_name}}
          DB_PASSWORD: {{dumbledore_routingapidb_password}}
          DB_NAME: {{dumbledore_routingapidb_db_name}}

- name: complex-legacy-deploy
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: dumbledore-env-stubs-and-vars
      - get: dumbledore-env-director-state
      - get: cf-release-master
      - get: github-diego-release
      - get: legacy-garden-runc-release
      - get: legacy-diego-release
      - get: legacy-cflinuxfs2-release
      - get: legacy-grootfs-release
      - get: legacy-cf-networking-release
      - get: legacy-cf-release
      - get: aws-stemcell
      - get: cf-deployment-transition
      - get: complex-pool
        passed: [ ensure-complex-env-is-clean ]
        trigger: true
    - task: generate-release-manifest-cf
      file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
      input_mapping:
        release-repo: cf-release-master
        stubs-repo: dumbledore-env-stubs-and-vars
      params:
        INFRASTRUCTURE: aws
        STUBS_PATH: transition/stubs/cf/cf-stub.yml
      output_mapping:
        manifest: cf-manifest
    - task: create-diego-manifest
      file: runtime-ci/scripts/ci/create-diego-manifest-with-config/task.yml
      input_mapping:
        diego-release: github-diego-release
        config: dumbledore-env-stubs-and-vars
        iaas-settings: dumbledore-env-stubs-and-vars
      output_mapping:
        generated-diego-manifest: diego-manifest
      params:
        IAAS_SETTINGS_PATH: transition/stubs/diego/iaas-settings.yml
        PROPERTY_OVERRIDES_PATH: transition/stubs/diego/property-overrides.yml
        INSTANCE_COUNT_OVERRIDES_PATH: transition/stubs/diego/instance-count-overrides.yml
        RELEASE_VERSIONS_PATH: transition/stubs/diego/release-versions.yml
        CF_NETWORKING_OVERRIDES_PATH: transition/stubs/diego/cf-networking.yml
        USE_ETCD: false
        USE_MYSQL: true
        DIEGO_MYSQL_OVERRIDES_PATH: transition/stubs/diego/rds-overrides.yml
        USE_GROOTFS: true
    - put: complex-legacy-cf-bosh-deployment
      params:
        manifest: cf-manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
        - legacy-cf-release/release.tgz
    - put: complex-legacy-diego-bosh-deployment
      params:
        manifest: diego-manifest/diego-deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
        - legacy-diego-release/release.tgz
        - legacy-garden-runc-release/release.tgz
        - legacy-cflinuxfs2-release/release.tgz
        - legacy-grootfs-release/release.tgz
        - legacy-cf-networking-release/release.tgz
    - task: bosh-run-errand-smoke-tests
      file: runtime-ci/tasks/run-errand/task.yml
      input_mapping:
        bbl-state: dumbledore-env-director-state
      params:
        ERRAND_NAME: smoke_tests

- name: legacy-deploy
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: minerva-env-stubs-and-vars
      - get: minerva-env-director-state
      - get: cf-release-master
      - get: github-diego-release
      - get: legacy-garden-runc-release
      - get: legacy-diego-release
      - get: legacy-cflinuxfs2-release
      - get: legacy-cf-release
      - get: aws-stemcell
      - get: cf-deployment-transition
      - get: transition-pool
        passed: [ ensure-transition-env-is-clean ]
        trigger: true
    - task: generate-release-manifest-cf
      file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
      input_mapping:
        release-repo: cf-release-master
        stubs-repo: minerva-env-stubs-and-vars
      params:
        INFRASTRUCTURE: aws
        STUBS_PATH: transition/stubs/cf/cf-stub.yml
      output_mapping:
        manifest: cf-manifest
    - task: create-diego-manifest
      file: runtime-ci/scripts/ci/create-diego-manifest/task.yml
      input_mapping:
        diego-release: github-diego-release
        iaas-settings: minerva-env-stubs-and-vars
        property-overrides: minerva-env-stubs-and-vars
        instance-count-overrides: minerva-env-stubs-and-vars
        release-versions: minerva-env-stubs-and-vars
      output_mapping:
        generated-diego-manifest: diego-manifest
      params:
        IAAS_SETTINGS_PATH: transition/stubs/diego/iaas-settings.yml
        INSTANCE_COUNT_OVERRIDES_PATH: transition/stubs/diego/instance-count-overrides.yml
        DIEGO_SQL_RESOURCE_PATH: property-overrides/transition/stubs/diego/rds-overrides.yml
        PROPERTY_OVERRIDES_PATH: transition/stubs/diego/property-overrides.yml
        RELEASE_VERSIONS_PATH: transition/stubs/diego/release-versions.yml
    - put: legacy-cf-bosh-deployment
      params:
        manifest: cf-manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
        - legacy-cf-release/release.tgz
    - put: legacy-diego-bosh-deployment
      params:
        manifest: diego-manifest/diego-deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
        - legacy-diego-release/release.tgz
        - legacy-garden-runc-release/release.tgz
        - legacy-cflinuxfs2-release/release.tgz
    - task: bosh-run-errand-smoke-tests
      file: runtime-ci/tasks/run-errand/task.yml
      input_mapping:
        bbl-state: minerva-env-director-state
      params:
        ERRAND_NAME: smoke_tests

- name: complex-deploy
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: dumbledore-env-stubs-and-vars
      - get: dumbledore-env-director-state
      - get: cf-deployment-release-candidate
        passed: [ bless-manifest ]
      - get: complex-pool
        passed: [ complex-legacy-deploy ]
        trigger: true
      - get: legacy-cf-release
        passed: [ complex-legacy-deploy ]
      - get: legacy-diego-release
        passed: [ complex-legacy-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ complex-legacy-deploy ]
      - get: legacy-garden-runc-release
        passed: [ complex-legacy-deploy ]
      - get: legacy-cf-networking-release
        passed: [ complex-legacy-deploy ]
      - get: legacy-grootfs-release
        passed: [ complex-legacy-deploy ]
      - get: cf-deployment-transition
    - task: extract-vars-store
      file: runtime-ci/tasks/r2d2/task.yml
      input_mapping:
      - bbl-state: dumbledore-env-director-state
      - vars-store: dumbledore-env-stubs-and-vars
      params:
        EXTRACT_CF_NETWORKING: true
    - task: bosh-upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-release-candidate
        bbl-state: dumbledore-env-director-state
      params:
        INFRASTRUCTURE: aws
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment-release-candidate
        new-ops-files: cf-deployment-transition
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: "cfr-to-cfd.yml remove-routing-api-for-transition.yml"
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: dumbledore-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: extracted-vars-store
        vars-files: dumbledore-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: dumbledore.cf-app.com
        OPS_FILES: "operations/aws.yml operations/experimental/use-cf-networking.yml operations/experimental/use-external-cf-networking-dbs.yml operations/use-external-dbs.yml operations/use-s3-blobstore.yml operations/cfr-to-cfd.yml operations/scale-down-etcd-for-cluster-changes.yml operations/experimental/use-grootfs.yml"
        VARS_FILES: "rds-vars.yml s3-vars.yml"
      ensure:
        put: dumbledore-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: delete-rump-diego
      input_mapping:
        bbl-state: dumbledore-env-director-state
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        DEPLOYMENT_NAME: cf-diego
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: dumbledore-env-stubs-and-vars
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: dumbledore-env-vars-store
        integration-configs: dumbledore-env-integration-configs
      ensure:
        put: dumbledore-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true

- name: transition-deploy
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-stubs-and-vars
      - get: minerva-env-director-state
      - get: cf-deployment-release-candidate
        passed: [ bless-manifest ]
      - get: transition-pool
        passed: [ legacy-deploy ]
        trigger: true
      - get: legacy-cf-release
        passed: [ legacy-deploy ]
      - get: legacy-diego-release
        passed: [ legacy-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ legacy-deploy ]
      - get: legacy-garden-runc-release
        passed: [ legacy-deploy ]
      - get: cf-deployment-transition
    - task: extract-vars-store
      file: runtime-ci/tasks/r2d2/task.yml
      input_mapping:
      - bbl-state: minerva-env-director-state
      - vars-store: minerva-env-stubs-and-vars
    - task: bosh-upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-release-candidate
        bbl-state: minerva-env-director-state
      params:
        INFRASTRUCTURE: aws
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment-release-candidate
        new-ops-files: cf-deployment-transition
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: "cfr-to-cfd.yml remove-routing-api-for-transition.yml"
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: minerva-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: extracted-vars-store
        vars-files: minerva-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: minerva.cf-app.com
        OPS_FILES: "operations/aws.yml operations/use-external-dbs.yml operations/use-s3-blobstore.yml operations/cfr-to-cfd.yml operations/scale-down-etcd-for-cluster-changes.yml"
        VARS_FILES: "rds-vars.yml s3-vars.yml"
      ensure:
        put: minerva-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: delete-rump-diego
      input_mapping:
        bbl-state: minerva-env-director-state
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        DEPLOYMENT_NAME: cf-diego
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: minerva-env-stubs-and-vars

- name: fresh-deploy
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: fresh-pool
      trigger: true
      passed: [ fresh-acquire-pool ]
    - get: cf-deployment-develop
      passed: [ fresh-acquire-pool ]
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: luna-env-vars-store
    - get: luna-env-integration-configs
    - get: luna-env-director-state
      passed: [ setup-infrastructure-fresh ]
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: luna-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: bosh-upload-stemcell-fresh
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: luna-env-director-state
    params:
      INFRASTRUCTURE: google
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-store: luna-env-vars-store
      vars-files: luna-env-vars-store
    params:
      SYSTEM_DOMAIN: luna.cf-app.com
      OPS_FILES: "operations/use-compiled-releases.yml operations/tcp-routing-gcp.yml operations/test/add-persistent-isolation-segment-diego-cell.yml operations/bypass-cc-bridge.yml"
      REGENERATE_VARS_STORE: true
    ensure:
      put: luna-env-vars-store
      params:
        repository: updated-vars-store
        rebase: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration_config.json
    input_mapping:
      vars-store: luna-env-vars-store
      integration-configs: luna-env-integration-configs
    ensure:
      put: luna-env-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true
  - task: ensure-api-healthy
    file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
    params:
      ENDPOINT: api.luna.cf-app.com
      DD_API_KEY: {{datadog_api_key}}
      METRIC_NAME: time-to-healthy-router
      ENV_NAME: luna

- name: ops-test
  serial_groups: [trelawney]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-develop
      trigger: true
    - get: trelawney-env-director-state
      passed: [ setup-infrastructure-ops ]
  - task: bosh-upload-stemcell-ops
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: trelawney-env-director-state
    params:
      INFRASTRUCTURE: google
  - aggregate:
    - task: bosh-dry-run-with-ops-cf-internal-mysql
      file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
      input_mapping:
        bbl-state: trelawney-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: trelawney.cf-app.com
        OPS_FILES: "operations/scale-to-one-az.yml operations/experimental/locket.yml operations/tcp-routing-gcp.yml operations/experimental/enable-local-route-emitter-tcp.yml operations/experimental/enable-loggregator-v2-diego-cell.yml operations/experimental/skip-consul-locks.yml operations/experimental/use-grootfs.yml operations/experimental/use-cf-networking.yml"
        DEPLOYMENT_NAME_SUFFIX: internal-mysql
    - task: bosh-dry-run-with-ops-cf-internal-postgres
      file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
      input_mapping:
        bbl-state: trelawney-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: trelawney.cf-app.com
        OPS_FILES: "operations/experimental/use-cf-networking.yml operations/experimental/locket.yml operations/use-postgres.yml operations/experimental/use-cf-networking-postgres.yml operations/experimental/locket-postgres.yml"
        DEPLOYMENT_NAME_SUFFIX: internal-postgres
    - task: bosh-dry-run-with-ops-cf-external-persistence
      file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
      input_mapping:
        bbl-state: trelawney-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: trelawney.cf-app.com
        OPS_FILES: "operations/scale-to-one-az.yml operations/tcp-routing-gcp.yml operations/experimental/enable-local-route-emitter-tcp.yml operations/experimental/enable-loggregator-v2-diego-cell.yml operations/experimental/skip-consul-locks.yml operations/experimental/use-grootfs.yml operations/use-s3-blobstore.yml operations/experimental/use-cf-networking.yml operations/experimental/use-external-cf-networking-dbs.yml operations/use-external-dbs.yml"
        VARS_FILES: "operations/example-vars-files/vars-use-s3-blobstore.yml operations/example-vars-files/vars-use-external-dbs.yml operations/example-vars-files/vars-use-external-cf-networking-dbs.yml"
        DEPLOYMENT_NAME_SUFFIX: external-persistence
- name: upgrade-acquire-pool
  public: true
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
    - put: upgrade-pool
      params: {acquire: true}

- name: upgrade-release-pool
  public: true
  plan:
  - get: upgrade-pool
    passed: [ upgrade-http-rats, upgrade-cats, upgrade-wats, upgrade-smoke-tests ]
    trigger: true
  - put: upgrade-pool
    params: {release: upgrade-pool}

- name: lite-release-pool
  public: true
  plan:
  - get: lite-pool
    passed: [ lite-cats, lite-http-rats ]
    trigger: true
  - put: lite-pool
    params: {release: lite-pool}

- name: fresh-release-pool-manual
  public: true
  plan:
  - get: fresh-pool
  ensure:
    try:
      put: fresh-pool
      params: {release: fresh-pool}

- name: lite-release-pool-manual
  public: true
  plan:
  - get: lite-pool
  ensure:
    try:
      put: lite-pool
      params: {release: lite-pool}

- name: transition-release-pool-manual
  public: true
  plan:
  - get: transition-pool
  ensure:
    try:
      put: transition-pool
      params: {release: transition-pool}

- name: upgrade-deploy
  serial_groups: [ hermione-wats, hermione-cats, hermione-smokes, hermione-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - on_failure:
      put: upgrade-pool
      params: {release: upgrade-pool}
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: upgrade-pool
        trigger: true
        passed: [ upgrade-acquire-pool ]
      - get: cf-deployment-develop
        passed: [ upgrade-acquire-pool ]
      - get: hermione-env-vars-store
      - get: hermione-env-director-state
        passed: [ setup-infrastructure-upgrade ]
      - get: hermione-env-integration-configs
      - get: windows-stemcell
    - task: bosh-upload-stemcell-upgrade
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        bbl-state: hermione-env-director-state
      params:
        INFRASTRUCTURE: aws
    - task: bosh-upload-windows-stemcell
      file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
      input_mapping:
        stemcell: windows-stemcell
        bbl-state: hermione-env-director-state
      params:
        STEMCELL_NAME: '*.tgz'
    - task: bosh-update-runtime-config
      file: runtime-ci/tasks/bosh-update-runtime-config/task.yml
      input_mapping:
        bbl-state: hermione-env-director-state
        runtime-configs: runtime-ci
      params:
        RUNTIME_CONFIG_FILE: experiments/runtime-configs/turbulence-runtime-config.yml
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: hermione-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-store: hermione-env-vars-store
        vars-files: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
        OPS_FILES: "operations/aws.yml operations/use-only-local-route-emitters.yml operations/windows-cell.yml operations/enable-local-route-emitters-windows-cell.yml operations/use-compiled-releases.yml operations/test/add-datadog-firehose-nozzle-aws.yml operations/use-s3-blobstore.yml operations/use-external-dbs.yml operations/enable-privileged-container-support.yml operations/test/alter-ssh-proxy-redirect-uri.yml"
      ensure:
        put: hermione-env-vars-store
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: hermione-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: hermione-env-vars-store
        integration-configs: hermione-env-integration-configs
      ensure:
        put: hermione-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true

- name: lite-deploy
  public: true
  serial_groups: [ snitch-cats, snitch-rats ]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
        passed: [ lite-acquire-pool ]
      - get: bosh-deployment
      - get: snitch-env-director-state
      - get: snitch-env-vars-store
      - get: snitch-env-integration-configs
      - get: lite-pool
        trigger: true
        passed: [ lite-acquire-pool ]
    - task: guarantee-no-existing-cf-deployment
      input_mapping:
        bbl-state: snitch-env-director-state
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    - task: bosh-upload-stemcell-lite
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        bbl-state: snitch-env-director-state
      params:
        INFRASTRUCTURE: bosh-lite
    - task: bosh-deploy-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state
        cf-deployment: cf-deployment-develop
        vars-store: snitch-env-vars-store
        ops-files: cf-deployment-develop
        vars-files: snitch-env-vars-store
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
        OPS_FILES: "operations/bosh-lite.yml"
      ensure:
        put: snitch-env-vars-store
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: snitch-env-vars-store
        integration-configs: snitch-env-integration-configs
      ensure:
        put: snitch-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true
    - task: ensure-api-healthy
      file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
      params:
        ENDPOINT: api.snitch.cf-app.com
        DD_API_KEY: {{datadog_api_key}}
        METRIC_NAME: time-to-healthy-router
        ENV_NAME: snitch

- name: complex-cats
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: dumbledore-env-stubs-and-vars
      - get: cf-deployment-release-candidate
        passed: [ complex-deploy ]
      - get: cats-concourse-task
      - get: complex-pool
        passed: [ complex-deploy ]
        trigger: true
      - get: legacy-cf-release
        passed: [ complex-deploy ]
      - get: legacy-diego-release
        passed: [ complex-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ complex-deploy ]
      - get: legacy-garden-runc-release
        passed: [ complex-deploy ]
      - get: cf-deployment-transition
        passed: [ complex-deploy ]
        trigger: true
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: dumbledore-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: dumbledore.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: dumbledore-env-stubs-and-vars
      params:
        NODES: 9
      file: cats-concourse-task/task.yml

- name: transition-cats
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: minerva-env-stubs-and-vars
      - get: cf-deployment-release-candidate
        passed: [ transition-deploy ]
      - get: cats-concourse-task
      - get: transition-pool
        passed: [ transition-deploy ]
        trigger: true
      - get: legacy-cf-release
        passed: [ transition-deploy ]
      - get: legacy-diego-release
        passed: [ transition-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ transition-deploy ]
      - get: legacy-garden-runc-release
        passed: [ transition-deploy ]
      - get: cf-deployment-transition
        passed: [ transition-deploy ]
        trigger: true
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: minerva-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: minerva.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: minerva-env-stubs-and-vars
      params:
        NODES: 9
      file: cats-concourse-task/task.yml

- name: transition-record-compatible-versions
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: legacy-cf-release
        passed: [ transition-cats ]
        params:
          tarball: false
      - get: legacy-diego-release
        passed: [ transition-cats ]
        trigger: true
        params:
          tarball: false
      - get: legacy-cflinuxfs2-release
        passed: [ transition-cats ]
        trigger: true
        params:
          tarball: false
      - get: legacy-garden-runc-release
        passed: [ transition-cats ]
        trigger: true
        params:
          tarball: false
      - get: cf-deployment-release-candidate
        passed: [ transition-cats ]
        trigger: true
      - get: cf-deployment-transition
        passed: [ transition-cats ]
        trigger: true
      - get: cf-deployment-transition-compatability
    - task: record-compatible-versions
      file: runtime-ci/tasks/record-r2d2-compatible-versions/task.yml
      input_mapping:
        cf-release: legacy-cf-release
        diego-release: legacy-diego-release
        cflinuxfs2-release: legacy-cflinuxfs2-release
        garden-runc-release: legacy-garden-runc-release
        cf-deployment: cf-deployment-release-candidate
        cf-deployment-transition-compatibility: cf-deployment-transition-compatability
    - put: cf-deployment-transition-compatability
      params:
        repository: updated-r2d2-compatibility
        rebase: true

- name: transition-delete-deployment
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-director-state
      - get: transition-pool
        passed: [ transition-cats ]
        trigger: true
  - task: delete-deployment-cf
    input_mapping:
      bbl-state: minerva-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - put: transition-pool
    params: {release: transition-pool}

- name: upgrade-cats
  serial_groups: [ hermione-cats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    on_failure:
      put: upgrade-pool
      params: {release: upgrade-pool}
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: hermione-env-director-state
        passed: [ upgrade-deploy ]
      - get: hermione-env-integration-configs
      - get: hermione-env-vars-store
        passed: [ upgrade-deploy ]
      - get: cf-deployment-develop
        passed: [ upgrade-deploy ]
      - get: cats-concourse-task
      - get: upgrade-pool
        trigger: true
        passed: [ upgrade-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: hermione-env-integration-configs
      file: cats-concourse-task/task.yml

- name: upgrade-wats
  public: true
  serial_groups: [ hermione-wats ]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    on_failure:
      put: upgrade-pool
      params: {release: upgrade-pool}
    do:
    - aggregate:
      - get: runtime-ci
      - get: windows-acceptance-tests
      - get: hermione-env-integration-configs
      - get: hermione-env-director-state
        passed: [ upgrade-deploy ]
      - get: hermione-env-vars-store
        passed: [ upgrade-deploy ]
      - get: cf-deployment-develop
        passed: [ upgrade-deploy ]
      - get: upgrade-pool
        trigger: true
        passed: [ upgrade-deploy ]
    - task: run-wats
      input_mapping:
      - integration-config: hermione-env-integration-configs
      file: runtime-ci/tasks/run-wats/task.yml

- name: upgrade-smoke-tests
  serial_groups: [hermione-smokes]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 1h
    on_failure:
      put: upgrade-pool
      params: {release: upgrade-pool}
    do:
    - aggregate:
      - get: runtime-ci
      - get: hermione-env-director-state
        passed: [upgrade-deploy]
      - get: cf-deployment-develop
        passed: [upgrade-deploy]
      - get: upgrade-pool
        trigger: true
        passed: [upgrade-deploy]
  - task: bosh-run-errand-smoke-tests
    file: runtime-ci/tasks/run-errand/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
    params:
      ERRAND_NAME: smoke-tests

- name: fresh-cats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cats-concourse-task
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: luna-env-vars-store
      - get: luna-env-integration-configs
      - get: fresh-pool
        trigger: true
        passed: [ fresh-deploy ]
      - get: cf-deployment-develop
        passed: [ fresh-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: luna-env-vars-store
      params:
        SYSTEM_DOMAIN: luna.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: luna-env-integration-configs
      file: cats-concourse-task/task.yml

- name: lite-cats
  serial_groups: [ snitch-cats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: cf-deployment-develop
        passed: [ lite-deploy ]
      - get: snitch-env-director-state
        passed: [ lite-deploy ]
      - get: snitch-env-vars-store
        passed: [ lite-deploy ]
      - get: snitch-env-integration-configs
      - get: cats-concourse-task
      - get: lite-pool
        trigger: true
        passed: [ lite-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      attempts: 10
      input_mapping:
        vars-store: snitch-env-vars-store
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: snitch-env-integration-configs
      params:
        NODES: 4
      file: cats-concourse-task/task.yml

- name: fresh-rats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: github-routing-release-master
      - get: luna-env-vars-store
      - get: luna-env-integration-configs
      - get: cf-deployment-develop
        passed: [ fresh-deploy ]
      - get: fresh-pool
        trigger: true
        passed: [ fresh-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: luna-env-vars-store
      params:
        SYSTEM_DOMAIN: luna.cf-app.com
    - task: run-rats
      input_mapping:
      - routing-release: github-routing-release-master
      - integration-config: luna-env-integration-configs
      file: runtime-ci/scripts/ci/run-rats/task.yml

- name: lite-http-rats
  serial_groups: [ snitch-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: github-routing-release-master
      - get: snitch-env-integration-configs
      - get: snitch-env-director-state
        passed: [ lite-deploy ]
      - get: snitch-env-vars-store
        passed: [ lite-deploy ]
      - get: cf-deployment-develop
        passed: [ lite-deploy ]
      - get: lite-pool
        trigger: true
        passed: [ lite-deploy ]
    - task: enable-docker-and-tasks
      attempts: 10
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: snitch-env-vars-store
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
    - task: run-rats
      input_mapping:
      - routing-release: github-routing-release-master
      - integration-config: snitch-env-integration-configs
      file: runtime-ci/scripts/ci/run-rats/task.yml
      params:
        PACKAGES: "http_routes"

- name: upgrade-http-rats
  serial_groups: [ hermione-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    on_failure:
      put: upgrade-pool
      params: {release: upgrade-pool}
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: github-routing-release-master
      - get: hermione-env-integration-configs
      - get: hermione-env-director-state
        passed: [ upgrade-deploy ]
      - get: hermione-env-vars-store
        passed: [ upgrade-deploy ]
      - get: cf-deployment-develop
        passed: [ upgrade-deploy ]
      - get: upgrade-pool
        trigger: true
        passed: [upgrade-deploy]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
    - task: run-rats
      input_mapping:
      - routing-release: github-routing-release-master
      - integration-config: hermione-env-integration-configs
      file: runtime-ci/scripts/ci/run-rats/task.yml
      params:
        PACKAGES: "http_routes"
        NODES: 2

- name: fresh-delete-deployment
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: luna-env-director-state
      - get: fresh-pool
        trigger: true
        passed:
        - fresh-cats
        - fresh-rats
    - task: delete-deployment-cf
      input_mapping:
        bbl-state: luna-env-director-state
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    - put: fresh-pool
      params: {release: fresh-pool}

- name: destroy-infrastructure-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: hermione-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: hermione-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: unbind-elb-from-r53
    file: runtime-ci/scripts/ci/unbind-elb-from-r53/task.yml
    input_mapping:
      env-repo: hermione-env-director-state
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-transition
  serial_groups: [minerva]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: transition-pool
      params: {claim: minerva}
    - get: minerva-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: minerva-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: minerva-env-director-state
    ensure:
      put: minerva-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-complex
  serial_groups: [dumbledore]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: complex-pool
      params: {claim: dumbledore}
    - get: dumbledore-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: dumbledore-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: dumbledore-env-director-state
    ensure:
      put: dumbledore-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-compile
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: greengrass-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: greengrass-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: fresh-pool
      params: {claim: luna}
    - get: luna-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: luna-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: remove-claimed-lock-complex
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: complex-pool
    passed: [ destroy-infrastructure-complex ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: dumbledore
    output_mapping:
      pool-resource: complex-pool
  - put: complex-pool
    params: {remove: complex-pool}


- name: remove-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: fresh-pool
    passed: [ destroy-infrastructure-fresh ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {remove: fresh-pool}

- name: remove-claimed-lock-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: lite-pool
    passed: [ destroy-infrastructure-lite ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {remove: lite-pool}

- name: remove-claimed-lock-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: transition-pool
    passed: [ destroy-infrastructure-transition ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: minerva
    output_mapping:
      pool-resource: transition-pool
  - put: transition-pool
    params: {remove: transition-pool}

- name: destroy-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: lite-pool
      params: {claim: snitch}
    - get: snitch-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: snitch-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: snitch-env-director-state
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: ops-pool
      params: {claim: trelawney}
    - get: trelawney-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: trelawney-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: trelawney-env-director-state
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: prepared-ops-pool
  - put: ops-pool
    params: {remove: prepared-ops-pool}

- name: bless-manifest
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
    passed:
    - fresh-cats
    - lite-cats
    - upgrade-cats
    - lite-http-rats
    - upgrade-http-rats
    - fresh-rats
    - upgrade-smoke-tests
    - ops-test
  - put: cf-deployment-release-candidate
    params:
      repository: cf-deployment-develop

- name: update-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: hermione-env-director-state
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: stemcell
      trigger: true
      params:
        tarball: false
    - get: nats-release
      trigger: true
      params:
        tarball: false
    - get: routing-release
      trigger: true
      params:
        tarball: false
    - get: consul-release
      trigger: true
      params:
        tarball: false
    - get: etcd-release
      trigger: true
      params:
        tarball: false
    - get: diego-release
      trigger: true
      params:
        tarball: false
    - get: loggregator-release
      trigger: true
      params:
        tarball: false
    - get: uaa-release
      trigger: true
      params:
        tarball: false
    - get: garden-runc-release
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-release
      trigger: true
      params:
        tarball: false
    - get: binary-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: dotnet-core-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: go-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: java-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: nodejs-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: php-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: python-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: ruby-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: staticfile-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: statsd-injector-release
      trigger: true
      params:
        tarball: false
    - get: cf-smoke-tests-release
      trigger: true
      params:
        tarball: false
  - task: create-binaries-manifest-section
    file: runtime-ci/scripts/ci/create-binaries-manifest-section/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
  - task: commit-generated-manifest
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      manifest: updated-deployment-manifest
      ops-file: cf-deployment-develop
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-release-postgres
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: postgres-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
  - task: update-release-postgres
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: postgres-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: postgres
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/use-postgres.yml
      UPDATED_OPS_FILE_PATH: use-postgres.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-postgres.yml
      OPS_FILE_DESTINATION: operations/use-postgres.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-release-grootfs
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: grootfs-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
  - task: update-release-grootfs
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: grootfs-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: grootfs
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-grootfs.yml
      UPDATED_OPS_FILE_PATH: use-grootfs.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-grootfs.yml
      OPS_FILE_DESTINATION: operations/experimental/use-grootfs.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-release-cf-networking
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-networking-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
  - task: update-release-cf-networking
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-networking-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-networking
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-cf-networking.yml
      UPDATED_OPS_FILE_PATH: use-cf-networking.yml
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-cf-networking.yml
      OPS_FILE_DESTINATION: operations/experimental/use-cf-networking.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-release-stemcell
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: stemcell
      passed: [ update-releases ]
      trigger: true
      params:
        tarball: false
  - task: bosh-upload-stemcell-compilation
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: greengrass-env-director-state
    params:
      INFRASTRUCTURE: google

- name: update-release-capi
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: stemcell
      passed: [ update-release-stemcell ]
      trigger: true
      params:
        tarball: false
    - get: capi-release
      trigger: true
      params:
        tarball: false
  - task: update-release-capi
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: capi-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: capi
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
  - task: deploy-for-compilation
    file: runtime-ci/tasks/deploy-for-compilation/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
    params:
      RELEASE_NAME: capi
  - task: export-capi-release
    file: runtime-ci/tasks/bosh-export-release/task.yml
    input_mapping:
      cf-deployment: updated-deployment-manifest
      bbl-state: greengrass-env-director-state
    params:
      BOSH_RELEASE: capi
      DEPLOYMENT_NAME: cf-compilation-capi
  - put: capi-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      compiled-release-tarball: exported-release
      ops-files: cf-deployment-develop
      bosh-io-release: capi-release
    params:
      RELEASE_NAME: capi
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-release-mysql
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: stemcell
      passed: [ update-release-stemcell ]
      trigger: true
      params:
        tarball: false
    - get: cf-mysql-release
      trigger: true
      params:
        tarball: false
  - task: update-release-mysql
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-mysql-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-mysql
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
  - task: deploy-for-compilation
    file: runtime-ci/tasks/deploy-for-compilation/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-mysql
  - task: export-mysql-release
    file: runtime-ci/tasks/bosh-export-release/task.yml
    input_mapping:
      cf-deployment: updated-deployment-manifest
      bbl-state: greengrass-env-director-state
    params:
      BOSH_RELEASE: cf-mysql
      DEPLOYMENT_NAME: cf-compilation-cf-mysql
  - put: mysql-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      compiled-release-tarball: exported-release
      ops-files: cf-deployment-develop
      bosh-io-release: cf-mysql-release
    params:
      RELEASE_NAME: cf-mysql
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-releases-windows
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    - get: garden-windows-bosh-release
      trigger: true
      params:
        tarball: false
    - get: hwc-buildpack-release
      trigger: true
      params:
        tarball: false
  - task: update-releases-windows
    file: runtime-ci/tasks/update-releases-windows/task.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
      garden-windows-release: garden-windows-bosh-release
      hwc-buildpack-release: hwc-buildpack-release
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows-cell.yml
      OPS_FILE_DESTINATION: operations/windows-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: verify-nameserver-has-record
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: runtime-ci
    - get: weekly
      trigger: true
    - task: verify-nameserver-has-record
      file: runtime-ci/scripts/ci/verify-nameserver-has-record/task.yml
      params:
        AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
        DOMAIN: hermione.cf-app.com

- name: run-bosh-cleanup-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: hermione-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: hermione-env-director-state

- name: run-bosh-cleanup-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: snitch-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state

- name: ship-it-patch
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - put: cf-deployment-version
        params: { bump: patch }
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - put: cf-deployment-master
        params:
          repository: cf-deployment-release-candidate
          tag: cf-deployment-version/version
          tag_prefix: v

- name: ship-it-minor
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - put: cf-deployment-version
        params: { bump: minor }
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - put: cf-deployment-master
        params:
          repository: cf-deployment-release-candidate
          tag: cf-deployment-version/version
          tag_prefix: v
