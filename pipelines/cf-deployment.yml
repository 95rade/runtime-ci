---
groups:
- name: cf-deployment
  jobs:
  - fresh-deploy
  - lite-deploy
  - transition-deploy
  - internal-services-transition-deploy
  - upgrade-deploy

  - lint-cf-deployment-manifest
  - branch-freshness
  - fresh-cats
  - fresh-enable-docker-and-tasks
  - lite-cats
  - transition-enable-docker-and-tasks
  - transition-cats
  - upgrade-cats
  - upgrade-set-feature-flags
  - upgrade-smoke-tests
  - upgrade-wats
  - fresh-rats
  - lite-enable-docker-and-tasks
  - lite-rats
  - transition-rats
  - upgrade-rats
  - ops-test
  - unit-test-ops-files
  - unit-test-transition-tools
  - unit-test-update-releases-coverage

  - bless-manifest
  - ship-it-major
  - ship-it-minor
  - ship-it-patch
  - ship-it-major-expedited
  - ship-it-minor-expedited
  - ship-it-patch-expedited
  - release-notes-template
  - transition-record-compatible-versions
- name: ops
  jobs:
  - unit-test-ops-files
  - unit-test-update-releases-coverage
  - ops-acquire-pool
  - ops-test
- name: up
  jobs:
  - unit-test-ops-files
  - unit-test-update-releases-coverage
  - upgrade-acquire-pool
  - upgrade-cats
  - upgrade-deploy
  - upgrade-set-feature-flags
  - upgrade-rats
  - upgrade-release-pool
  - upgrade-release-pool-manual
  - upgrade-smoke-tests
  - upgrade-wats
  - bless-manifest
- name: fr
  jobs:
  - unit-test-ops-files
  - unit-test-update-releases-coverage
  - fresh-acquire-pool
  - fresh-cats
  - fresh-delete-deployment
  - fresh-deploy
  - fresh-enable-docker-and-tasks
  - fresh-rats
  - fresh-release-pool-manual
  - bless-manifest
- name: li
  jobs:
  - unit-test-ops-files
  - unit-test-update-releases-coverage
  - lite-acquire-pool
  - lite-cats
  - lite-deploy
  - lite-enable-docker-and-tasks
  - lite-rats
  - lite-release-pool
  - lite-release-pool-manual
  - bless-manifest
- name: tr
  jobs:
  - transition-release-pool-manual
  - ensure-transition-env-is-clean
  - legacy-deploy
  - transition-acquire-pool
  - transition-cats
  - transition-rats
  - transition-delete-deployment
  - transition-deploy
  - transition-enable-docker-and-tasks
  - internal-services-release-pool-manual
  - ensure-internal-services-env-is-clean
  - internal-services-legacy-deploy
  - internal-services-transition-deploy
  - internal-services-acquire-pool
  - transition-record-compatible-versions
  - bless-manifest
- name: st
  jobs:
  - stable-acquire-pool
  - stable-deploy
  - stable-smoke-tests
  - stable-semihourly-pool-acquisition
  - stable-periodic-cats
  - stable-release-pool-manual
  - stable-update-cats-cfd-branch

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
- name: bosh-deployment-v2
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: windows-stemcell-bosh-release
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-windows2012R2-go_agent

- name: windows-google-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2012R2-go_agent

- name: legacy-cf-bosh-deployment
  type: bosh-deployment-v2
  source:
    deployment: cf

- name: legacy-diego-bosh-deployment
  type: bosh-deployment-v2
  source:
    deployment: cf-diego

- name: legacy-cf-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release
- name: legacy-diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: legacy-garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: legacy-cflinuxfs2-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release

- name: fresh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: lite-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/lite
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: upgrade-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/upgrade
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: stable-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/stable
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: transition-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/transition
    private_key: {{relint_ci_pools_readwrite_deploy_key}}

- name: internal-services-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/internal-services
    private_key: {{relint_ci_pools_readwrite_deploy_key}}


- name: ops-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/ops
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: minerva-env-stubs-and-vars
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
- name: minerva-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: dumbledore-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: {{dumbledore_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: dumbledore-env-stubs-and-vars
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: {{dumbledore_env_readwrite_deploy_key}}
- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: bellatrix-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bellatrix-env.git
    private_key: {{bellatrix_env_readwrite_deploy_key}}
    paths:
    - bbl-state
- name: bellatrix-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bellatrix-env.git
    private_key: {{bellatrix_env_readwrite_deploy_key}}
    paths:
    - deployment-vars.yml
- name: bellatrix-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bellatrix-env.git
    private_key: {{bellatrix_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
- name: luna-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - bbl-state
- name: luna-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: luna-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - deployment-name.yml
    - deployment-vars.yml
    - network-name.yml
    - syslog-vars.yml
    - bbs-key-label.yml
- name: minerva-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
    paths:
    - bbl-state
- name: dumbledore-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: {{dumbledore_env_readwrite_deploy_key}}
    paths:
    - bbl-state
- name: trelawney-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: {{trelawney_env_readwrite_deploy_key}}
    paths:
    - bbl-state
    - google_account_creds.json
- name: half-hourly
  type: time
  source:
    interval: 30m
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: hermione-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - bbl-state
- name: hermione-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - integration_config.json
    - wats_integration_config.json
    - rats_integration_config.json
- name: hermione-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - deployment-vars.yml
    - datadog-deployment-vars.yml
    - rds-vars.yml
    - runtime-config.yml
    - confab-timeout-vars.yml
    - scale-windows-cells.yml
- name: hermione-env-turbulence-vars
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - turbulence-deployment-vars.yml
- name: hermione-env-turbulence-manifest
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - turbulence.yml
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: cf-deployment-transition
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-transition.git
- name: cf-deployment-transition-compatibility
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment-transition-compatibility.git
    private_key: {{cf_deployment_transition_compatibility_private_key}}
- name: cf-deployment-release-candidate
  type: git
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: cf-deployment-all-branches
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-deployment.git
- name: cf-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-release.git
- name: github-diego-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/diego-release.git
    tag_filter: v1.*
- name: github-routing-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release
- name: windows-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/wats
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
    private_key: {{cf_acceptance_tests_private_key}}
- name: cf-deployment-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: snitch-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - deployment-vars.yml
- name: snitch-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: snitch-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - bbl-state
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git
- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: cf-deployment-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-relint-ci-semver.git
    branch: master
    private_key: {{cf_relint_ci_semver_private_key}}
    git_user: "CF MEGA BOT <cf-mega@pivotal.io>"
    file: cf-deployment-version

- name: deliver-tracker-story
  type: tracker
  source:
    token: {{cf_mega_api_token}}
    project_id: "1382120"
    tracker_url: https://www.pivotaltracker.com

- name: cf-deployment-concourse-tasks-docker-latest
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks

jobs:
- name: branch-freshness
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-all-branches
      trigger: true
    - get: runtime-ci
  - task: validate-branch-freshness
    file: runtime-ci/scripts/ci/validate-branch-freshness/task.yml
    input_mapping:
      repo: cf-deployment-all-branches

- name: fresh-acquire-pool
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
      passed: [unit-test-ops-files, unit-test-update-releases-coverage]
    - put: fresh-pool
      params: {acquire: true}

- name: ops-acquire-pool
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
      passed: [unit-test-ops-files, unit-test-update-releases-coverage]
    - put: ops-pool
      params: {acquire: true}

- name: lite-acquire-pool
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
      passed: [unit-test-ops-files, unit-test-update-releases-coverage]
    - put: lite-pool
      params: {acquire: true}

- name: lint-cf-deployment-manifest
  serial: false
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: lint-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: cf-deployment-develop
      run:
        path: /bin/bash
        args:
        - -exc
        - |
          ruby -e "require 'yaml'; YAML.load_file('./cf-deployment-develop/cf-deployment.yml')"

- name: unit-test-ops-files
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: unit-test-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-develop
      run:
        dir: cf-deployment-develop
        path: scripts/test

- name: unit-test-transition-tools
  serial: false
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-transition
    trigger: true
  - task: unit-test-suite
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-and-spiff
      inputs:
      - name: cf-deployment-transition
      run:
        path: cf-deployment-transition/test/test-suite.sh

- name: unit-test-update-releases-coverage
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
  - get: runtime-ci
  - task: unit-test-update-releases-coverage
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-develop
      - name: runtime-ci
      run:
        dir: runtime-ci
        path: scripts/tests/update-releases-coverage-test

- name: internal-services-acquire-pool
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-release-candidate
        trigger: true
      - get: legacy-cf-release
        trigger: true
      - get: legacy-diego-release
        trigger: true
      - put: internal-services-pool
        params: {claim: dumbledore}

- name: transition-acquire-pool
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-release-candidate
        trigger: true
      - get: legacy-cf-release
        trigger: true
      - get: legacy-diego-release
        trigger: true
      - put: transition-pool
        params: {claim: minerva}

- name: ensure-internal-services-env-is-clean
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - get: internal-services-pool
      passed: [ internal-services-acquire-pool ]
      trigger: true
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: dumbledore-env-director-state
      - get: runtime-ci
    - aggregate:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          env-repo: dumbledore-env-director-state
      - task: guarantee-no-existing-diego-deployment
        input_mapping:
          env-repo: dumbledore-env-director-state
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        params:
          DEPLOYMENT_NAME: cf-diego
    - task: ensure-no-loggregator-releases
      file: runtime-ci/tasks/bosh-delete-loggregator-release/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state

- name: ensure-transition-env-is-clean
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      passed: [ transition-acquire-pool ]
      trigger: true
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-director-state
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks-docker-latest
    - aggregate:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
      - task: guarantee-no-existing-diego-deployment
        input_mapping:
          env-repo: minerva-env-director-state
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        params:
          DEPLOYMENT_NAME: cf-diego
    - task: ensure-no-loggregator-releases
      file: runtime-ci/tasks/bosh-delete-loggregator-release/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
    - aggregate:
      - task: recreate-uaadb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_uaadb_host}}
          DB_USER: {{minerva_uaadb_user}}
          DB_PASSWORD: {{minerva_uaadb_password}}
          DB_NAME: {{minerva_uaadb_db_name}}
      - task: recreate-ccdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_ccdb_host}}
          DB_USER: {{minerva_ccdb_user}}
          DB_PASSWORD: {{minerva_ccdb_password}}
          DB_NAME: {{minerva_ccdb_db_name}}
      - task: recreate-bbsdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_bbsdb_host}}
          DB_USER: {{minerva_bbsdb_user}}
          DB_PASSWORD: {{minerva_bbsdb_password}}
          DB_NAME: {{minerva_bbsdb_db_name}}
      - task: recreate-locketdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_locketdb_host}}
          DB_USER: {{minerva_locketdb_user}}
          DB_PASSWORD: {{minerva_locketdb_password}}
          DB_NAME: {{minerva_locketdb_db_name}}
      - task: recreate-npsdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_npsdb_host}}
          DB_USER: {{minerva_npsdb_user}}
          DB_PASSWORD: {{minerva_npsdb_password}}
          DB_NAME: {{minerva_npsdb_db_name}}
      - task: recreate-silkdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_silkdb_host}}
          DB_USER: {{minerva_silkdb_user}}
          DB_PASSWORD: {{minerva_silkdb_password}}
          DB_NAME: {{minerva_silkdb_db_name}}
      - task: recreate-routingdb
        file: runtime-ci/tasks/recreate-database/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
        params:
          DB_HOST: {{minerva_routingdb_host}}
          DB_USER: {{minerva_routingdb_user}}
          DB_PASSWORD: {{minerva_routingdb_password}}
          DB_NAME: {{minerva_routingdb_db_name}}
      - task: restore-cloud-config
        file: runtime-ci/tasks/update-cloud-config-from-bbl/task.yml
        image: cf-deployment-concourse-tasks-docker-latest
        input_mapping:
          env-repo: minerva-env-director-state

- name: legacy-deploy
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      passed: [ ensure-transition-env-is-clean ]
      trigger: true
    - aggregate:
      - get: runtime-ci
      - get: minerva-env-stubs-and-vars
      - get: minerva-env-director-state
      - get: cf-release-master
        params:
          depth: 1
          submodules: none
      - get: github-diego-release
      - get: legacy-garden-runc-release
      - get: legacy-diego-release
      - get: legacy-cflinuxfs2-release
      - get: legacy-cf-release
      - get: aws-stemcell
      - get: cf-deployment-transition
    - task: generate-release-manifest-cf
      file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
      input_mapping:
        release-repo: cf-release-master
        stubs-repo: minerva-env-stubs-and-vars
      params:
        INFRASTRUCTURE: aws
        STUBS_PATH: transition/stubs/cf/cf-stub.yml
      output_mapping:
        manifest: cf-manifest
    - task: create-diego-manifest
      file: runtime-ci/scripts/ci/create-diego-manifest/task.yml
      input_mapping:
        diego-release: github-diego-release
        iaas-settings: minerva-env-stubs-and-vars
        property-overrides: minerva-env-stubs-and-vars
        instance-count-overrides: minerva-env-stubs-and-vars
        release-versions: minerva-env-stubs-and-vars
      output_mapping:
        generated-diego-manifest: diego-manifest
      params:
        IAAS_SETTINGS_PATH: transition/stubs/diego/iaas-settings.yml
        INSTANCE_COUNT_OVERRIDES_PATH: transition/stubs/diego/instance-count-overrides.yml
        DIEGO_SQL_RESOURCE_PATH: property-overrides/transition/stubs/diego/rds-overrides.yml
        PROPERTY_OVERRIDES_PATH: transition/stubs/diego/property-overrides.yml
        RELEASE_VERSIONS_PATH: transition/stubs/diego/release-versions.yml
    - task: generate-dynamic-bosh-source
      file: runtime-ci/tasks/generate-dynamic-bosh-source/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
    - put: legacy-cf-bosh-deployment
      params:
        manifest: cf-manifest/deployment.yml
        releases:
        - legacy-cf-release/release.tgz
        source_file: dynamic-bosh-source/source_file.json
    - put: legacy-diego-bosh-deployment
      params:
        manifest: diego-manifest/diego-deployment.yml
        releases:
        - legacy-diego-release/release.tgz
        - legacy-garden-runc-release/release.tgz
        - legacy-cflinuxfs2-release/release.tgz
        source_file: dynamic-bosh-source/source_file.json
    - task: bosh-run-errand-smoke-tests
      file: runtime-ci/tasks/run-errand/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
      params:
        ERRAND_NAME: smoke_tests

- name: internal-services-legacy-deploy
  public: true
  serial: true
  build_logs_to_retain: 10
  plan:
  - timeout: 4h
    do:
    - get: internal-services-pool
      passed: [ ensure-internal-services-env-is-clean ]
      trigger: true
    - aggregate:
      - get: runtime-ci
      - get: dumbledore-env-stubs-and-vars
      - get: dumbledore-env-director-state
      - get: cf-release-master
        params:
          depth: 1
          submodules: none
      - get: github-diego-release
      - get: legacy-garden-runc-release
      - get: legacy-diego-release
      - get: legacy-cflinuxfs2-release
      - get: legacy-cf-release
      - get: aws-stemcell
      - get: cf-deployment-transition
      - get: cf-deployment-concourse-tasks
    - task: generate-release-manifest-cf
      file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
      input_mapping:
        release-repo: cf-release-master
        stubs-repo: dumbledore-env-stubs-and-vars
      params:
        INFRASTRUCTURE: aws
        STUBS_PATH: transition/stubs/cf/cf-stub.yml
      output_mapping:
        manifest: cf-manifest
    - task: create-diego-manifest
      file: runtime-ci/scripts/ci/create-diego-manifest/task.yml
      input_mapping:
        diego-release: github-diego-release
        iaas-settings: dumbledore-env-stubs-and-vars
        property-overrides: dumbledore-env-stubs-and-vars
        instance-count-overrides: dumbledore-env-stubs-and-vars
        release-versions: dumbledore-env-stubs-and-vars
      output_mapping:
        generated-diego-manifest: diego-manifest
      params:
        IAAS_SETTINGS_PATH: transition/stubs/diego/iaas-settings.yml
        INSTANCE_COUNT_OVERRIDES_PATH: transition/stubs/diego/instance-count-overrides.yml
        DIEGO_SQL_RESOURCE_PATH: property-overrides/transition/stubs/diego/postgres-overrides.yml
        PROPERTY_OVERRIDES_PATH: transition/stubs/diego/property-overrides.yml
        RELEASE_VERSIONS_PATH: transition/stubs/diego/release-versions.yml
    - task: generate-dynamic-bosh-source
      file: runtime-ci/tasks/generate-dynamic-bosh-source/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
    - task: bosh-upload-stemcell
      file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
      input_mapping:
        stemcell: aws-stemcell
        env-repo: dumbledore-env-director-state
      params:
        STEMCELL_NAME: '*.tgz'
    - put: legacy-cf-bosh-deployment
      params:
        manifest: cf-manifest/deployment.yml
        releases:
        - legacy-cf-release/release.tgz
        source_file: dynamic-bosh-source/source_file.json
    - put: legacy-diego-bosh-deployment
      params:
        manifest: diego-manifest/diego-deployment.yml
        releases:
        - legacy-diego-release/release.tgz
        - legacy-garden-runc-release/release.tgz
        - legacy-cflinuxfs2-release/release.tgz
        source_file: dynamic-bosh-source/source_file.json
    - task: bosh-run-errand-smoke-tests
      file: runtime-ci/tasks/run-errand/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
      params:
        ERRAND_NAME: smoke_tests

- name: internal-services-transition-deploy
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: internal-services-pool
      passed: [ internal-services-legacy-deploy ]
      trigger: true
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: dumbledore-env-stubs-and-vars
      - get: dumbledore-env-integration-configs
      - get: dumbledore-env-director-state
      - get: cf-deployment-release-candidate
        passed: [ bless-manifest ]
      - get: legacy-cf-release
        passed: [ internal-services-legacy-deploy ]
      - get: legacy-diego-release
        passed: [ internal-services-legacy-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ internal-services-legacy-deploy ]
      - get: legacy-garden-runc-release
        passed: [ internal-services-legacy-deploy ]
      - get: cf-deployment-transition
    - task: extract-vars-store
      file: runtime-ci/tasks/r2d2/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
        vars-store: dumbledore-env-stubs-and-vars
    - task: bosh-upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-release-candidate
        env-repo: dumbledore-env-director-state
      params:
        INFRASTRUCTURE: aws
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment-release-candidate
        new-ops-files: cf-deployment-transition
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: |
          cfr-to-cfd.yml
          keep-etcd-for-transition.yml
          migrate-webdav.yml
    - task: remove-static-ips-from-cloud-config
      file: runtime-ci/tasks/bosh-extend-cloud-config/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
        ops-file: dumbledore-env-stubs-and-vars
      params:
        OPS_FILE_PATH: add-static-ips-to-dynamic-range.yml
    - task: bosh-deploy-cf
      file: runtime-ci/tasks/transition-deploy/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: extracted-vars-store
        vars-files: dumbledore-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: dumbledore.cf-app.com
        UPTIMER_APP_DOMAIN: dumbledore.cf-app.com
        UPTIMER_TCP_DOMAIN: placeholder.this.is.dumb.com
        OPS_FILES: |
          operations/use-compiled-releases.yml
          operations/aws.yml
          operations/set-bbs-active-key.yml
          operations/cfr-to-cfd.yml
          keep-etcd-for-transition.yml
          operations/migrate-webdav.yml
        VARS_FILES: |
          static_ips.yml
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        FAIL_ON_DOWNTIME: true
      on_failure:
        put: dumbledore-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-deploy-cf-without-etcd
      file: runtime-ci/tasks/transition-deploy/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: updated-vars-store
        vars-files: dumbledore-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: dumbledore.cf-app.com
        UPTIMER_APP_DOMAIN: dumbledore.cf-app.com
        UPTIMER_TCP_DOMAIN: placeholder.this.is.dumb.com
        OPS_FILES: |
          operations/use-compiled-releases.yml
          operations/aws.yml
          operations/set-bbs-active-key.yml
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        FAIL_ON_DOWNTIME: true
      ensure:
        put: dumbledore-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: dumbledore-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: dumbledore-env-stubs-and-vars
        integration-configs: dumbledore-env-integration-configs
      ensure:
        put: dumbledore-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true

- name: transition-deploy
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      passed: [ legacy-deploy ]
      trigger: true
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-stubs-and-vars
      - get: minerva-env-integration-configs
      - get: minerva-env-director-state
      - get: cf-deployment-release-candidate
        passed: [ bless-manifest ]
      - get: legacy-cf-release
        passed: [ legacy-deploy ]
      - get: legacy-diego-release
        passed: [ legacy-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ legacy-deploy ]
      - get: legacy-garden-runc-release
        passed: [ legacy-deploy ]
      - get: cf-deployment-transition
    - task: extract-vars-store
      file: runtime-ci/tasks/r2d2/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
        vars-store: minerva-env-stubs-and-vars
    - task: bosh-upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-release-candidate
        env-repo: minerva-env-director-state
      params:
        INFRASTRUCTURE: aws
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment-release-candidate
        new-ops-files: cf-deployment-transition
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: |
          cfr-to-cfd.yml
          enable-doppler-announce.yml
          keep-etcd-for-transition.yml
          remove-routing-components-for-transition.yml
          remove-cf-networking-for-transition.yml
    - task: remove-static-ips-from-cloud-config
      file: runtime-ci/tasks/bosh-extend-cloud-config/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
        ops-file: minerva-env-stubs-and-vars
      params:
        OPS_FILE_PATH: add-static-ips-to-dynamic-range.yml
    - task: bosh-deploy-cf
      file: runtime-ci/tasks/transition-deploy/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: extracted-vars-store
        vars-files: minerva-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: minerva.cf-app.com
        UPTIMER_APP_DOMAIN: minerva.cf-app.com
        UPTIMER_TCP_DOMAIN: placeholder.this.is.dumb.com
        OPS_FILES: |
          operations/use-compiled-releases.yml
          operations/aws.yml
          operations/keep-etcd-for-transition.yml
          operations/enable-doppler-announce.yml
          operations/use-external-dbs.yml
          operations/use-s3-blobstore.yml
          operations/set-bbs-active-key.yml
          operations/cfr-to-cfd.yml
          operations/remove-routing-components-for-transition.yml
          operations/remove-cf-networking-for-transition.yml
          operations/set-router-static-ips.yml
        VARS_FILES: |
          rds-vars.yml
          s3-vars.yml
          static_ips.yml
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        FAIL_ON_DOWNTIME: true
      on_failure:
        put: minerva-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-deploy-cf-without-etcd
      file: runtime-ci/tasks/transition-deploy/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: updated-vars-store
        vars-files: minerva-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: minerva.cf-app.com
        UPTIMER_APP_DOMAIN: minerva.cf-app.com
        UPTIMER_TCP_DOMAIN: placeholder.this.is.dumb.com
        OPS_FILES: |
          operations/use-compiled-releases.yml
          operations/aws.yml
          operations/use-external-dbs.yml
          operations/use-s3-blobstore.yml
          operations/set-bbs-active-key.yml
          operations/remove-routing-components-for-transition.yml
          operations/remove-cf-networking-for-transition.yml
        VARS_FILES: |
          rds-vars.yml
          s3-vars.yml
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        FAIL_ON_DOWNTIME: true
      ensure:
        put: minerva-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-deploy-cf-with-networking-and-routing
      file: runtime-ci/tasks/transition-deploy/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
        cf-deployment: cf-deployment-release-candidate
        ops-files: collected-ops-files
        vars-store: updated-vars-store
        vars-files: minerva-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: minerva.cf-app.com
        UPTIMER_APP_DOMAIN: minerva.cf-app.com
        UPTIMER_TCP_DOMAIN: placeholder.this.is.dumb.com
        OPS_FILES: |
          operations/use-compiled-releases.yml
          operations/aws.yml
          operations/use-external-dbs.yml
          operations/use-s3-blobstore.yml
          operations/set-bbs-active-key.yml
        VARS_FILES: |
          rds-vars.yml
          s3-vars.yml
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        FAIL_ON_DOWNTIME: true
      ensure:
        put: minerva-env-stubs-and-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: minerva-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: minerva-env-stubs-and-vars
        integration-configs: minerva-env-integration-configs
      ensure:
        put: minerva-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true

- name: fresh-deploy
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: fresh-pool
    trigger: true
    passed: [ fresh-acquire-pool ]
  - aggregate:
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: luna-env-vars-store
    - get: luna-env-integration-configs
    - get: luna-env-director-state
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      env-repo: luna-env-director-state
    params:
      DEPLOYMENT_NAME: luna-cf
  - task: bosh-upload-stemcell-fresh
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      env-repo: luna-env-director-state
    params:
      INFRASTRUCTURE: google
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      env-repo: luna-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-store: luna-env-vars-store
      vars-files: luna-env-vars-store
    params:
      SYSTEM_DOMAIN: luna.cf-app.com
      OPS_FILES: |
        operations/use-compiled-releases.yml
        operations/rename-network.yml
        operations/rename-deployment.yml
        operations/set-bbs-active-key.yml
        operations/test/add-persistent-isolation-segment-diego-cell.yml
        operations/test/add-persistent-isolation-segment-router.yml
        operations/addons/enable-component-syslog.yml
        operations/use-gcs-blobstore.yml
        operations/workaround/use-4-azs-for-router.yml
        operations/scale-database-cluster.yml
      VARS_FILES: |
        deployment-name.yml
        network-name.yml
        bbs-key-label.yml
        syslog-vars.yml
        gcs-vars.yml
      REGENERATE_VARS_STORE: true
    ensure:
      put: luna-env-vars-store
      params:
        repository: updated-vars-store
        rebase: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      env-repo: luna-env-director-state
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration_config.json
    input_mapping:
      vars-store: luna-env-vars-store
      integration-configs: luna-env-integration-configs
    ensure:
      put: luna-env-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true
  - task: ensure-gcloud-backend-service-healthy
    file: runtime-ci/tasks/ensure-gcloud-backend-service-healthy/task.yml
    input_mapping:
      google-creds-dir: luna-env-director-state
    params:
      GCP_PROJECT_ID: {{luna_gcp_project}}
      GCP_BACKEND_SERVICE: {{luna_router_backend_service}}
      GOOGLE_ACCOUNT_CREDS_PATH: google_account_creds.json
  - task: ensure-api-healthy
    file: runtime-ci/tasks/ensure-api-healthy/task.yml
    params:
      SYSTEM_DOMAIN: luna.cf-app.com

- name: ops-test
  serial_groups: [trelawney]
  public: true
  build_logs_to_retain: 100
  plan:
  - ensure:
      put: ops-pool
      params: {release: ops-pool}
    do:
    - get: ops-pool
      trigger: true
      passed: [ ops-acquire-pool ]
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
      - get: trelawney-env-director-state
    - task: bosh-upload-stemcell-ops
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: trelawney-env-director-state
      params:
        INFRASTRUCTURE: google
    - task: bosh-dry-run-with-ops-cf-internal-mysql
      file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
      input_mapping:
        env-repo: trelawney-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: trelawney.cf-app.com
        OPS_FILES: "operations/scale-to-one-az.yml operations/experimental/skip-consul-locks.yml operations/experimental/use-grootfs.yml operations/experimental/use-bosh-dns.yml operations/experimental/use-bosh-dns-for-containers.yml"
        DEPLOYMENT_NAME_SUFFIX: internal-mysql
    - task: bosh-dry-run-with-ops-cf-internal-postgres
      file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
      input_mapping:
        env-repo: trelawney-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: trelawney.cf-app.com
        OPS_FILES: "operations/use-postgres.yml operations/experimental/enable-prefer-declarative-healthchecks.yml"
        DEPLOYMENT_NAME_SUFFIX: internal-postgres
    - task: bosh-dry-run-with-ops-cf-external-persistence
      file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
      input_mapping:
        env-repo: trelawney-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: cf-deployment-develop
        vars-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: trelawney.cf-app.com
        OPS_FILES: "operations/scale-to-one-az.yml operations/experimental/skip-consul-locks.yml operations/experimental/use-grootfs.yml operations/use-s3-blobstore.yml operations/use-external-dbs.yml operations/experimental/enable-iptables-logger.yml"
        VARS_FILES: "operations/example-vars-files/vars-use-s3-blobstore.yml operations/example-vars-files/vars-use-external-dbs.yml"
        DEPLOYMENT_NAME_SUFFIX: external-persistence

- name: upgrade-acquire-pool
  public: true
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
      passed: [unit-test-ops-files, unit-test-update-releases-coverage]
    - put: upgrade-pool
      params: {acquire: true}

- name: upgrade-release-pool
  public: true
  plan:
  - get: upgrade-pool
    passed: [ upgrade-rats, upgrade-cats, upgrade-wats, upgrade-smoke-tests ]
    trigger: true
  - put: upgrade-pool
    params: {release: upgrade-pool}

- name: stable-acquire-pool
  public: true
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-master
      trigger: true
    - put: stable-pool
      params: {acquire: true}

- name: lite-release-pool
  public: true
  plan:
  - get: lite-pool
    passed: [ lite-cats, lite-rats ]
    trigger: true
  - put: lite-pool
    params: {release: lite-pool}

- name: fresh-release-pool-manual
  public: true
  plan:
  - get: fresh-pool
  ensure:
    try:
      put: fresh-pool
      params: {release: fresh-pool}

- name: lite-release-pool-manual
  public: true
  plan:
  - get: lite-pool
  ensure:
    try:
      put: lite-pool
      params: {release: lite-pool}

- name: internal-services-release-pool-manual
  public: true
  plan:
  - get: internal-services-pool
  ensure:
    try:
      put: internal-services-pool
      params: {release: internal-services-pool}

- name: transition-release-pool-manual
  public: true
  plan:
  - get: transition-pool
  ensure:
    try:
      put: transition-pool
      params: {release: transition-pool}

- name: stable-release-pool-manual
  public: true
  plan:
  - get: stable-pool
  ensure:
    try:
      put: stable-pool
      params: {release: stable-pool}

- name: upgrade-release-pool-manual
  public: true
  plan:
  - get: upgrade-pool
  ensure:
    try:
      put: upgrade-pool
      params: {release: upgrade-pool}

- name: upgrade-deploy
  serial_groups: [ hermione-wats, hermione-cats, hermione-smokes, hermione-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - do:
    - get: upgrade-pool
      trigger: true
      passed: [ upgrade-acquire-pool ]
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
      - get: hermione-env-vars-store
      - get: hermione-env-turbulence-manifest
      - get: hermione-env-turbulence-vars
      - get: hermione-env-director-state
      - get: hermione-env-integration-configs
      - get: windows-stemcell-bosh-release
    - task: bosh-upload-stemcell-upgrade
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: hermione-env-director-state
      params:
        INFRASTRUCTURE: aws
    - task: bosh-upload-windows-stemcell
      file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
      input_mapping:
        stemcell: windows-stemcell-bosh-release
        env-repo: hermione-env-director-state
      params:
        STEMCELL_NAME: '*.tgz'
    - task: bosh-update-runtime-config
      file: runtime-ci/tasks/bosh-update-runtime-config/task.yml
      input_mapping:
        env-repo: hermione-env-director-state
        runtime-configs: hermione-env-vars-store
        vars-files: hermione-env-vars-store
      params:
        RUNTIME_CONFIG_FILE: runtime-config.yml
    - task: deploy-turbulence-api-upgrade
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: hermione-env-turbulence-manifest
        vars-store: hermione-env-turbulence-vars
        env-repo: hermione-env-director-state
        ops-files: runtime-ci
        vars-files: hermione-env-turbulence-vars
      params:
        MANIFEST_FILE: turbulence.yml
        SYSTEM_DOMAIN: cf-app.com # not used, this is a required by the task
        VARS_STORE_FILE: turbulence-deployment-vars.yml
        OPS_FILES: "experiments/operations/add-turbulence-bosh-io-release.yml experiments/operations/add-bosh-dns-bosh-io-release.yml"
      ensure:
        put: hermione-env-turbulence-vars
        params:
          repository: updated-vars-store
          rebase: true
    - task: add-tcp-domain
      file: runtime-ci/tasks/add-tcp-domain/task.yml
      input_mapping:
        vars-store: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment-develop
        new-ops-files: hermione-env-vars-store
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: "scale-windows-cells.yml"
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        env-repo: hermione-env-director-state
        cf-deployment: cf-deployment-develop
        ops-files: collected-ops-files
        vars-store: hermione-env-vars-store
        vars-files: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
        DEPLOY_WITH_UPTIME_MEASUREMENTS: true
        MEASURE_SYSLOG_AVAILABILITY: true
        TCP_DOMAIN: tcp.hermione.cf-app.com
        AVAILABLE_PORT: 1100
        OPS_FILES: |
          operations/aws.yml
          operations/windows-cell.yml
          operations/scale-windows-cells.yml
          operations/test/add-datadog-firehose-nozzle.yml
          operations/use-s3-blobstore.yml
          operations/experimental/enable-instance-identity-credentials.yml
          operations/experimental/secure-service-credentials.yml
          operations/use-external-dbs.yml
          operations/experimental/secure-service-credentials-external-db.yml
          operations/enable-privileged-container-support.yml
          operations/experimental/use-bosh-dns.yml
          operations/experimental/use-bosh-dns-for-containers.yml
          operations/stop-skipping-tls-validation.yml
          operations/experimental/skip-consul-locks.yml
          operations/experimental/skip-consul-cell-registrations.yml
          operations/experimental/disable-consul.yml
          operations/experimental/disable-consul-windows.yml
          operations/experimental/use-grootfs.yml
        VARS_FILES: "datadog-deployment-vars.yml rds-vars.yml"
        APP_PUSHABILITY_THRESHOLD: 3
        HTTP_AVAILABILITY_THRESHOLD: 0
        RECENT_LOGS_THRESHOLD: 7
        STREAMING_LOGS_THRESHOLD: 2
        APP_SYSLOG_AVAILABILITY_THRESHOLD: 19
        FAIL_ON_DOWNTIME: true
      ensure:
        put: hermione-env-vars-store
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: hermione-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: hermione-env-vars-store
        integration-configs: hermione-env-integration-configs
      ensure:
        put: hermione-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true

- name: stable-deploy
  serial_groups: [ bellatrix-smokes ]
  public: true
  build_logs_to_retain: 100
  plan:
  - on_failure:
      put: stable-pool
      params: {release: stable-pool}
    do:
    - get: stable-pool
      trigger: true
      passed: [ stable-acquire-pool ]
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-master
      - get: bellatrix-env-vars-store
      - get: bellatrix-env-director-state
      - get: bellatrix-env-integration-configs
      - get: windows-google-stemcell
    - task: bosh-upload-stemcell-stable
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-master
        env-repo: bellatrix-env-director-state
      params:
        INFRASTRUCTURE: google
    - task: bosh-upload-windows-stemcell
      file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
      input_mapping:
        stemcell: windows-google-stemcell
        env-repo: bellatrix-env-director-state
      params:
        STEMCELL_NAME: '*.tgz'
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        env-repo: bellatrix-env-director-state
        cf-deployment: cf-deployment-master
        ops-files: cf-deployment-master
        vars-store: bellatrix-env-vars-store
        vars-files: bellatrix-env-vars-store
      params:
        SYSTEM_DOMAIN: bellatrix.cf-app.com
        OPS_FILES: "operations/scale-database-cluster.yml"
      ensure:
        put: bellatrix-env-vars-store
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: bellatrix-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: bellatrix-env-vars-store
        integration-configs: bellatrix-env-integration-configs
      ensure:
        put: bellatrix-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true

- name: lite-deploy
  public: true
  serial_groups: [ snitch-cats, snitch-rats ]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed: [ lite-acquire-pool ]
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
      - get: bosh-deployment
      - get: snitch-env-director-state
      - get: snitch-env-vars-store
      - get: snitch-env-integration-configs
    - task: guarantee-no-existing-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        env-repo: snitch-env-director-state
    - task: bosh-upload-stemcell-lite
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        env-repo: snitch-env-director-state
      params:
        INFRASTRUCTURE: bosh-lite
    - task: bosh-deploy-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        env-repo: snitch-env-director-state
        cf-deployment: cf-deployment-develop
        vars-store: snitch-env-vars-store
        ops-files: cf-deployment-develop
        vars-files: snitch-env-vars-store
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
        OPS_FILES: "operations/use-compiled-releases.yml operations/bosh-lite.yml operations/use-postgres.yml"
      ensure:
        put: snitch-env-vars-store
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: snitch-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: snitch-env-vars-store
        integration-configs: snitch-env-integration-configs
      ensure:
        put: snitch-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true
    - task: ensure-api-healthy
      file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
      params:
        ENDPOINT: api.snitch.cf-app.com
        DD_API_KEY: {{datadog_api_key}}
        METRIC_NAME: time-to-healthy-router
        ENV_NAME: snitch

- name: transition-enable-docker-and-tasks
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      passed: [ transition-deploy ]
      trigger: true
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-stubs-and-vars
      - get: cf-deployment-release-candidate
        passed: [ transition-deploy ]
      - get: legacy-cf-release
        passed: [ transition-deploy ]
      - get: legacy-diego-release
        passed: [ transition-deploy ]
      - get: legacy-cflinuxfs2-release
        passed: [ transition-deploy ]
      - get: legacy-garden-runc-release
        passed: [ transition-deploy ]
      - get: cf-deployment-transition
        passed: [ transition-deploy ]
        trigger: true
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: minerva-env-stubs-and-vars
      params:
        SYSTEM_DOMAIN: minerva.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation

- name: transition-cats
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      passed: [ transition-enable-docker-and-tasks ]
      trigger: true
    - aggregate:
      - get: cf-acceptance-tests
      - get: minerva-env-integration-configs
      - get: cf-deployment-release-candidate
        passed: [ transition-enable-docker-and-tasks ]
      - get: cats-concourse-task
      - get: legacy-cf-release
        passed: [ transition-enable-docker-and-tasks ]
      - get: legacy-diego-release
        passed: [ transition-enable-docker-and-tasks ]
      - get: legacy-cflinuxfs2-release
        passed: [ transition-enable-docker-and-tasks ]
      - get: legacy-garden-runc-release
        passed: [ transition-enable-docker-and-tasks ]
      - get: cf-deployment-transition
        passed: [ transition-enable-docker-and-tasks ]
        trigger: true
    - task: run-cats
      input_mapping:
        integration-config: minerva-env-integration-configs
      params:
        NODES: 9
      file: cats-concourse-task/task.yml

- name: transition-record-compatible-versions
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: legacy-cf-release
        passed: [ transition-cats ]
        params:
          tarball: false
      - get: legacy-diego-release
        passed: [ transition-cats ]
        trigger: true
        params:
          tarball: false
      - get: legacy-cflinuxfs2-release
        passed: [ transition-cats ]
        trigger: true
        params:
          tarball: false
      - get: legacy-garden-runc-release
        passed: [ transition-cats ]
        trigger: true
        params:
          tarball: false
      - get: cf-deployment-release-candidate
        passed: [ transition-cats ]
        trigger: true
      - get: cf-deployment-transition
        passed: [ transition-cats ]
        trigger: true
      - get: cf-deployment-transition-compatibility
    - task: record-compatible-versions
      file: runtime-ci/tasks/record-r2d2-compatible-versions/task.yml
      input_mapping:
        cf-release: legacy-cf-release
        diego-release: legacy-diego-release
        cflinuxfs2-release: legacy-cflinuxfs2-release
        garden-runc-release: legacy-garden-runc-release
        cf-deployment: cf-deployment-release-candidate
    - put: cf-deployment-transition-compatibility
      params:
        repository: updated-r2d2-compatibility
        rebase: true

- name: transition-delete-deployment
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      passed: [ transition-cats, transition-rats ]
      trigger: true
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: minerva-env-director-state
      - get: runtime-ci
  - task: delete-deployment-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      env-repo: minerva-env-director-state
  - task: ensure-no-loggregator-releases
    file: runtime-ci/tasks/bosh-delete-loggregator-release/task.yml
    input_mapping:
      env-repo: minerva-env-director-state
  - put: transition-pool
    params: {release: transition-pool}

- name: upgrade-cats
  serial_groups: [ hermione-cats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [ upgrade-set-feature-flags ]
    - aggregate:
      - get: cf-acceptance-tests
      - get: hermione-env-integration-configs
      - get: hermione-env-vars-store
        passed: [ upgrade-set-feature-flags ]
      - get: cf-deployment-develop
        passed: [ upgrade-set-feature-flags ]
      - get: cats-concourse-task
    - task: run-cats
      input_mapping:
        integration-config: hermione-env-integration-configs
      file: cats-concourse-task/task.yml

- name: upgrade-wats
  public: true
  serial_groups: [ hermione-wats ]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [ upgrade-set-feature-flags ]
    - aggregate:
      - get: runtime-ci
      - get: windows-acceptance-tests
      - get: hermione-env-integration-configs
      - get: hermione-env-vars-store
        passed: [ upgrade-set-feature-flags ]
      - get: cf-deployment-develop
        passed: [ upgrade-set-feature-flags ]
    - task: run-wats
      input_mapping:
        integration-config: hermione-env-integration-configs
      file: runtime-ci/tasks/run-wats/task.yml

- name: upgrade-smoke-tests
  serial_groups: [hermione-smokes]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 1h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [ upgrade-set-feature-flags ]
    - aggregate:
      - get: runtime-ci
      - get: hermione-env-director-state
      - get: cf-deployment-develop
        passed: [ upgrade-set-feature-flags ]
  - task: bosh-run-errand-smoke-tests
    file: runtime-ci/tasks/run-errand/task.yml
    input_mapping:
      env-repo: hermione-env-director-state
    params:
      ERRAND_NAME: smoke-tests

- name: stable-smoke-tests
  serial_groups: [bellatrix-smokes]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 1h
    ensure:
      put: stable-pool
      params: {release: stable-pool}
    do:
    - get: stable-pool
      trigger: true
      passed: [stable-deploy]
    - aggregate:
      - get: runtime-ci
      - get: bellatrix-env-director-state
        passed: [stable-deploy]
      - get: cf-deployment-master
        passed: [stable-deploy]
  - task: bosh-run-errand-smoke-tests
    file: runtime-ci/tasks/run-errand/task.yml
    input_mapping:
      env-repo: bellatrix-env-director-state
    params:
      ERRAND_NAME: smoke-tests

- name: stable-semihourly-pool-acquisition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: half-hourly
      trigger: true
    - put: stable-pool
      params: {claim: bellatrix}

- name: stable-periodic-cats
  serial: true
  public: true
  build_logs_to_retain: 2000
  plan:
  - timeout: 4h
    on_failure:
      put: stable-pool
      params: {release: stable-pool}
    do:
    - get: stable-pool
      trigger: true
      passed: [ stable-semihourly-pool-acquisition ]
    - aggregate:
      - get: cats-concourse-task
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: bellatrix-env-vars-store
      - get: bellatrix-env-integration-configs
      - get: cf-deployment-master
        passed: [ stable-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: bellatrix-env-vars-store
      params:
        SYSTEM_DOMAIN: bellatrix.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation
    - task: run-cats
      input_mapping:
        integration-config: bellatrix-env-integration-configs
      file: cats-concourse-task/task.yml

- name: stable-update-cats-cfd-branch
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    ensure:
      put: stable-pool
      params: {release: stable-pool}
    do:
    - get: stable-pool
      trigger: true
      passed: [ stable-periodic-cats ]
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-master
        passed: [ stable-periodic-cats ]
      - get: cf-acceptance-tests
        passed: [ stable-periodic-cats ]
    - task: update-branch
      file: runtime-ci/tasks/update-cats-branch-with-cf-deployment-version/task.yml
      input_mapping:
        cf-deployment: cf-deployment-master
      params:
        DEPLOY_KEY: {{cf_acceptance_tests_private_key}}

- name: fresh-enable-docker-and-tasks
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: fresh-pool
      trigger: true
      passed: [ fresh-deploy ]
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: luna-env-vars-store
      - get: cf-deployment-develop
        passed: [ fresh-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: luna-env-vars-store
      params:
        SYSTEM_DOMAIN: luna.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation

- name: lite-enable-docker-and-tasks
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed: [ lite-deploy ]
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: snitch-env-vars-store
      - get: cf-deployment-develop
        passed: [ lite-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: snitch-env-vars-store
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation

- name: upgrade-set-feature-flags
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [ upgrade-deploy ]
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: hermione-env-vars-store
      - get: cf-deployment-develop
        passed: [ upgrade-deploy ]
    - task: set-feature-flags
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation
          service_instance_sharing

- name: fresh-cats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: fresh-pool
      trigger: true
      passed: [ fresh-enable-docker-and-tasks ]
    - aggregate:
      - get: cats-concourse-task
      - get: cf-acceptance-tests
      - get: luna-env-vars-store
      - get: luna-env-integration-configs
      - get: cf-deployment-develop
        passed: [ fresh-enable-docker-and-tasks ]
    - task: run-cats
      file: cats-concourse-task/task.yml
      input_mapping:
        integration-config: luna-env-integration-configs
      params:
        CAPTURE_LOGS: true

- name: lite-cats
  serial_groups: [ snitch-cats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed: [ lite-enable-docker-and-tasks ]
    - aggregate:
      - get: cf-acceptance-tests
      - get: cf-deployment-develop
        passed: [ lite-enable-docker-and-tasks ]
      - get: snitch-env-vars-store
        passed: [ lite-enable-docker-and-tasks ]
      - get: snitch-env-integration-configs
      - get: cats-concourse-task
    - task: run-cats
      file: cats-concourse-task/task.yml
      input_mapping:
        integration-config: snitch-env-integration-configs
      params:
        NODES: 4

- name: fresh-rats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: fresh-pool
      trigger: true
      passed: [ fresh-enable-docker-and-tasks ]
    - aggregate:
      - get: runtime-ci
      - get: github-routing-release-master
      - get: luna-env-vars-store
      - get: luna-env-integration-configs
      - get: cf-deployment-develop
        passed: [ fresh-enable-docker-and-tasks ]
    - task: run-rats
      file: runtime-ci/scripts/ci/run-rats/task.yml
      input_mapping:
        routing-release: github-routing-release-master
        integration-config: luna-env-integration-configs

- name: transition-rats
  serial_groups: [ minerva-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: transition-pool
      trigger: true
      passed: [ transition-enable-docker-and-tasks ]
    - aggregate:
      - get: runtime-ci
      - get: github-routing-release-master
      - get: minerva-env-integration-configs
      - get: cf-deployment-transition
        passed: [ transition-enable-docker-and-tasks ]
    - task: run-rats
      file: runtime-ci/scripts/ci/run-rats/task.yml
      input_mapping:
        routing-release: github-routing-release-master
        integration-config: minerva-env-integration-configs

- name: lite-rats
  serial_groups: [ snitch-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed: [ lite-enable-docker-and-tasks ]
    - aggregate:
      - get: runtime-ci
      - get: github-routing-release-master
      - get: snitch-env-integration-configs
      - get: snitch-env-vars-store
        passed: [ lite-enable-docker-and-tasks ]
      - get: cf-deployment-develop
        passed: [ lite-enable-docker-and-tasks ]
    - task: run-rats
      file: runtime-ci/scripts/ci/run-rats/task.yml
      input_mapping:
        routing-release: github-routing-release-master
        integration-config: snitch-env-integration-configs

- name: upgrade-rats
  serial_groups: [ hermione-rats ]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [ upgrade-set-feature-flags ]
    - aggregate:
      - get: runtime-ci
      - get: github-routing-release-master
      - get: hermione-env-integration-configs
      - get: hermione-env-vars-store
        passed: [ upgrade-set-feature-flags ]
      - get: cf-deployment-develop
        passed: [ upgrade-set-feature-flags ]
    - task: run-rats
      input_mapping:
        routing-release: github-routing-release-master
        integration-config: hermione-env-integration-configs
      file: runtime-ci/scripts/ci/run-rats/task.yml

- name: fresh-delete-deployment
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: fresh-pool
      trigger: true
      passed:
      - fresh-cats
      - fresh-rats
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: luna-env-director-state
    - task: delete-deployment-cf
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        env-repo: luna-env-director-state
      params:
        DEPLOYMENT_NAME: luna-cf
    - put: fresh-pool
      params: {release: fresh-pool}

- name: bless-manifest
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
    passed:
    - fresh-cats
    - lite-cats
    - upgrade-cats
    - lite-rats
    - upgrade-rats
    - fresh-rats
    - upgrade-smoke-tests
    - ops-test
  - put: cf-deployment-release-candidate
    params:
      repository: cf-deployment-develop
  - put: deliver-tracker-story
    params:
      repos:
        - cf-deployment-develop

- name: release-notes-template
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-master
    - get: cf-deployment-release-candidate
      passed:
      - bless-manifest
      trigger: true
  - task: generate-cf-deployment-release-notes-template
    file: runtime-ci/tasks/cf-deployment-release-notes-template/task.yml

- name: ship-it-patch
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - get: runtime-ci
      - get: cf-deployment-version
        params: {bump: patch}
      - get: cf-deployment-develop
      - get: cf-deployment-release-candidate
        passed: [transition-record-compatible-versions]
      - get: cf-deployment-transition-compatibility
      - task: update-cf-deployment-manifest-version
        file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
      - put: cf-deployment-master
        params:
          repository: cf-deployment-rc-with-updated-version
          tag: cf-deployment-version/version
          tag_prefix: v
      - put: cf-deployment-develop
        params:
          repository: cf-deployment-rc-with-updated-version
          merge: true
      - put: cf-deployment-version
        params: {bump: patch}
      - task: record-transition-version
        file: runtime-ci/tasks/record-transition-version/task.yml
      - put: cf-deployment-transition-compatibility
        params:
          repository: updated-cf-deployment-transition-compatibility
          rebase: true

- name: ship-it-patch-expedited
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - get: runtime-ci
      - get: cf-deployment-version
        params: {bump: patch}
      - get: cf-deployment-develop
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - get: cf-deployment-transition-compatibility
      - task: update-cf-deployment-manifest-version
        file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
      - put: cf-deployment-master
        params:
          repository: cf-deployment-rc-with-updated-version
          tag: cf-deployment-version/version
          tag_prefix: v
      - put: cf-deployment-develop
        params:
          repository: cf-deployment-rc-with-updated-version
          merge: true
      - put: cf-deployment-version
        params: {bump: patch}

- name: ship-it-minor
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - get: runtime-ci
      - get: cf-deployment-version
        params: {bump: minor}
      - get: cf-deployment-develop
      - get: cf-deployment-release-candidate
        passed: [transition-record-compatible-versions]
      - get: cf-deployment-transition-compatibility
      - task: update-cf-deployment-manifest-version
        file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
      - put: cf-deployment-master
        params:
          repository: cf-deployment-rc-with-updated-version
          tag: cf-deployment-version/version
          tag_prefix: v
      - put: cf-deployment-develop
        params:
          repository: cf-deployment-rc-with-updated-version
          merge: true
      - put: cf-deployment-version
        params: {bump: minor}
      - task: record-transition-version
        file: runtime-ci/tasks/record-transition-version/task.yml
      - put: cf-deployment-transition-compatibility
        params:
          repository: updated-cf-deployment-transition-compatibility
          rebase: true

- name: ship-it-minor-expedited
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - get: runtime-ci
      - get: cf-deployment-version
        params: {bump: minor}
      - get: cf-deployment-develop
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - get: cf-deployment-transition-compatibility
      - task: update-cf-deployment-manifest-version
        file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
      - put: cf-deployment-master
        params:
          repository: cf-deployment-rc-with-updated-version
          tag: cf-deployment-version/version
          tag_prefix: v
      - put: cf-deployment-develop
        params:
          repository: cf-deployment-rc-with-updated-version
          merge: true
      - put: cf-deployment-version
        params: {bump: minor}

- name: ship-it-major
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - get: runtime-ci
      - get: cf-deployment-version
        params: {bump: major}
      - get: cf-deployment-develop
      - get: cf-deployment-release-candidate
        passed: [transition-record-compatible-versions]
      - get: cf-deployment-transition-compatibility
      - task: update-cf-deployment-manifest-version
        file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
      - put: cf-deployment-master
        params:
          repository: cf-deployment-rc-with-updated-version
          tag: cf-deployment-version/version
          tag_prefix: v
      - put: cf-deployment-develop
        params:
          repository: cf-deployment-rc-with-updated-version
          merge: true
      - put: cf-deployment-version
        params: {bump: major}
      - task: record-transition-version
        file: runtime-ci/tasks/record-transition-version/task.yml
      - put: cf-deployment-transition-compatibility
        params:
          repository: updated-cf-deployment-transition-compatibility
          rebase: true

- name: ship-it-major-expedited
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - get: runtime-ci
      - get: cf-deployment-version
        params: {bump: major}
      - get: cf-deployment-develop
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - get: cf-deployment-transition-compatibility
      - task: update-cf-deployment-manifest-version
        file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
      - put: cf-deployment-master
        params:
          repository: cf-deployment-rc-with-updated-version
          tag: cf-deployment-version/version
          tag_prefix: v
      - put: cf-deployment-develop
        params:
          repository: cf-deployment-rc-with-updated-version
          merge: true
      - put: cf-deployment-version
        params: {bump: major}
