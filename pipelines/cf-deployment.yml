---
groups:
- name: cf-deployment
  jobs:
  - unit-test-transition-tools
  - update-releases
  - update-release-mysql
  - acquire-fresh-pool
  - deploy-legacy-cf
  - deploy-releases-fresh
  - deploy-releases-lite
  - deploy-releases-upgrade
  - deploy-releases-ops
  - acceptance-tests-fresh
  - acceptance-tests-lite
  - acceptance-tests-upgrade
  - windows-acceptance-tests-upgrade
  - smoke-tests-upgrade
  - routing-acceptance-tests-fresh
  - post-delete-deployment-fresh
  - bless-manifest
- name: infrastructure
  jobs:
  - add-claimed-lock-fresh
  - setup-infrastructure-fresh
  - add-claimed-lock-migration
  - setup-infrastructure-migration
  - setup-infrastructure-lite
  - setup-infrastructure-ops
  - setup-infrastructure-upgrade
  - destroy-infrastructure-fresh
  - destroy-infrastructure-migration
  - destroy-infrastructure-lite
  - destroy-infrastructure-ops
  - destroy-infrastructure-upgrade
  - remove-claimed-lock-fresh
  - remove-claimed-lock-migration
  - verify-nameserver-has-record
  - run-bosh-cleanup-upgrade
  - run-bosh-cleanup-lite
# For simpler visibility
- name: pm-view
  jobs:
  - deploy-releases-fresh
  - deploy-releases-lite
  - deploy-releases-upgrade
  - acceptance-tests-fresh
  - acceptance-tests-lite
  - acceptance-tests-upgrade
  - windows-acceptance-tests-upgrade
  - smoke-tests-upgrade
  - routing-acceptance-tests-fresh
  - bless-manifest
  - ship-it-patch
  - ship-it-minor

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

- name: legacy-cf-bosh-deployment
  type: bosh-deployment
  source:
    target: https://bosh.minerva.cf-app.com:25555
    username: {{minerva_bosh_username}}
    password: {{minerva_bosh_password}}
    deployment: cf
    ignore_ssl: true

- name: legacy-diego-bosh-deployment
  type: bosh-deployment
  source:
    target: https://bosh.minerva.cf-app.com:25555
    username: {{minerva_bosh_username}}
    password: {{minerva_bosh_password}}
    deployment: cf-diego
    ignore_ssl: true

- name: legacy-cf-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release
    version: "v255"
- name: legacy-diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
    version: "v1.11.0"
- name: legacy-garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
    version: "v1.4.0"
- name: legacy-cflinuxfs2-rootfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release
    version: "v1.60.0"

- name: fresh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: migration-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/migration
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: ops-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/ops
    private_key: {{relint_ci_pools_readwrite_deploy_key}}
- name: minerva-env
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: luna-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: luna-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: luna-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: {{luna_env_readwrite_deploy_key}}
    paths:
    - deployment-vars.yml
- name: minerva-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: {{minerva_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: greengrass-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/greengrass-env.git
    private_key: {{greengrass_env_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: trelawney-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: {{trelawney_env_readwrite_deploy_key}}
    paths:
    - bbl-state.json
    - google_account_creds.json
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 168h
- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: hermione-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - bbl-state.json
- name: hermione-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - integration_config.json
    - wats_integration_config.json
    - rats_integration_config.json
- name: hermione-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths:
    - deployment-vars.yml
- name: windows-stemcell
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-windows2012R2-go_agent.tgz
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
    ignore_paths:
    - transition/*
- name: cf-deployment-transition
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
    paths:
    - transition/*
- name: cf-deployment-release-candidate
  type: git
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: github-routing-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release
- name: windows-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/wats
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: cf-deployment-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{cf_deployment_private_key}}
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: capi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/capi-release
- name: nats-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nats-release
- name: routing-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release
- name: etcd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release
- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: loggregator-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator
- name: cf-mysql-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release
- name: uaa-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release
- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: binary-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/binary-buildpack-release
- name: dotnet-core-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/dotnet-core-buildpack-release
- name: go-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/go-buildpack-release
- name: java-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-buildpack-release
- name: nodejs-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nodejs-buildpack-release
- name: php-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/php-buildpack-release
- name: python-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/python-buildpack-release
- name: ruby-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/ruby-buildpack-release
- name: staticfile-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/staticfile-buildpack-release
- name: statsd-injector-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/statsd-injector-release
- name: cflinuxfs2-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release
- name: cf-smoke-tests-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-smoke-tests-release
- name: snitch-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - deployment-vars.yml
- name: snitch-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - integration_config.json
    - rats_integration_config.json
- name: snitch-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: {{snitch_env_private_key}}
    paths:
    - google_account_creds.json
    - bbl-state.json
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git
- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: mysql-release-gcs-bucket
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: {{concourse_gcp_service_account_json}}
    regexp: cf-mysql-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz

- name: cf-deployment-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-relint-ci-semver.git
    branch: master
    private_key: {{cf_relint_ci_semver_private_key}}
    git_user: "CF MEGA BOT <cf-mega@pivotal.io>"
    file: cf-deployment-version

jobs:
- name: setup-infrastructure-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: hermione-env-director-state
    - get: runtime-ci
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{hermione_lbs_ssl_cert}}
      BBL_LB_KEY: {{hermione_lbs_ssl_signing_key}}
      BBL_ENV_NAME: hermione-upgrade
    input_mapping:
      bbl-state: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-bbl-state
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com

- name: add-claimed-lock-migration
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: minerva
    output_mapping:
      pool-resource: migration-pool
  - put: migration-pool
    params: {add_claimed: migration-pool}

- name: setup-infrastructure-migration
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: minerva-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: migration-pool
      trigger: true
      passed: [ add-claimed-lock-migration ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: {{minerva_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{minerva_aws_secret_access_key}}
      BBL_LB_CERT: {{minerva_lbs_ssl_cert}}
      BBL_LB_KEY: {{minerva_lbs_ssl_signing_key}}
      BBL_ENV_NAME: minerva-upgrade
    input_mapping:
      bbl-state: minerva-env-director-state
    ensure:
      put: minerva-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: migration-pool
    params: {release: migration-pool}

- name: add-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {add_claimed: fresh-pool}

- name: setup-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: luna-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: fresh-pool
      trigger: true
      passed: [ add-claimed-lock-fresh ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{luna_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      BBL_LB_CERT: {{luna_cf_ssl_cert}}
      BBL_LB_KEY: {{luna_cf_ssl_cert_private_key}}
      LB_DOMAIN: luna.cf-app.com
      BBL_ENV_NAME: luna-fresh
    input_mapping:
      bbl-state: luna-env-director-state
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: fresh-pool
    params: {release: fresh-pool}

- name: setup-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: bosh-deployment
    - get: snitch-env-director-state
    - get: cf-deployment-develop
  - task: setup-infrastructure
    file: runtime-ci/tasks/prototype/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{snitch_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      LB_DOMAIN: snitch.cf-app.com
      BBL_ENV_NAME: snitch-lite
      OPS_FILES: "bosh-lite.yml bosh-lite-runc.yml jumpbox-user.yml gcp/bosh-lite-vm-type.yml"
      IS_BOSH_LITE: true
    input_mapping:
      bbl-state: snitch-env-director-state
      ops-files: bosh-deployment
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: bosh-update-cloud-config
    file: runtime-ci/scripts/ci/bosh-update-cloud-config/task.yml
    input_mapping:
      bbl-state: snitch-env-director-state
      cloud-config: cf-deployment-develop
    params:
      CLOUD_CONFIG_FILE: "bosh-lite/cloud-config.yml"

- name: setup-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: trelawney-env-director-state
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: prepared-ops-pool
  - put: ops-pool
    params: {add_claimed: prepared-ops-pool}
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{trelawney_gcp_project}}
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-a
      BBL_LB_CERT: {{trelawney_cf_ssl_cert}}
      BBL_LB_KEY: {{trelawney_cf_ssl_cert_private_key}}
      LB_DOMAIN: trelawney.cf-app.com
      BBL_ENV_NAME: trelawney-fresh
    input_mapping:
      bbl-state: trelawney-env-director-state
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: ops-pool
    params: {release: ops-pool}

- name: acquire-fresh-pool
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-develop
      trigger: true
    - put: fresh-pool
      params: {acquire: true}

- name: unit-test-transition-tools
  serial: false
  public: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-transition
    trigger: true
  - task: unit-test-var-store-templates
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/create-diego-manifest
      inputs:
      - name: cf-deployment-transition
      run:
        path: cf-deployment-transition/transition/test.sh
  - task: test-ops-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-transition
      run:
        path: cf-deployment-transition/transition/test-transition-ops.sh

- name: deploy-legacy-cf
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: minerva-env
    - get: legacy-garden-runc-release
    - get: legacy-diego-release
    - get: legacy-cflinuxfs2-rootfs-release
    - get: legacy-cf-release
    - get: aws-stemcell
  - put: legacy-cf-bosh-deployment
    params:
      manifest: minerva-env/migration/cf-manifest.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
      - legacy-cf-release/release.tgz
  - put: legacy-diego-bosh-deployment
    params:
      manifest: minerva-env/migration/diego-manifest.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
      - legacy-diego-release/release.tgz
      - legacy-garden-runc-release/release.tgz
      - legacy-cflinuxfs2-rootfs-release/release.tgz
  - task: bosh-run-errand-smoke-tests
    file: runtime-ci/tasks/run-errand/task.yml
    input_mapping:
      bbl-state: minerva-env
    params:
      ERRAND_NAME: smoke-tests

- name: deploy-releases-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: fresh-pool
      trigger: true
      passed: [ acquire-fresh-pool ]
    - get: cf-deployment-develop
      passed: [ acquire-fresh-pool ]
    - get: cf-deployment-concourse-tasks
    - get: luna-env-vars-store
    - get: luna-env-integration-configs
    - get: luna-env-director-state
      passed: [ setup-infrastructure-fresh ]
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: luna-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: bosh-upload-stemcell-fresh
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: luna-env-director-state
    params:
      INFRASTRUCTURE: google
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-store: luna-env-vars-store
    params:
      SYSTEM_DOMAIN: luna.cf-app.com
      OPS_FILES: "operations/tcp-routing-gcp.yml operations/test/add-persistent-isolation-segment-diego-cell.yml operations/use-postgres.yml operations/use-postgres-tcp-routing.yml"
      REGENERATE_VARS_STORE: true
    ensure:
      put: luna-env-vars-store
      params:
        repository: updated-vars-store
        rebase: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration_config.json
    input_mapping:
      vars-store: luna-env-vars-store
      integration-configs: luna-env-integration-configs
    ensure:
      put: luna-env-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true

- name: deploy-releases-ops
  serial_groups: [trelawney]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-develop
      trigger: true
    - get: trelawney-env-director-state
      passed: [ setup-infrastructure-ops ]
  - task: bosh-upload-stemcell-ops
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: trelawney-env-director-state
    params:
      INFRASTRUCTURE: google
  - task: bosh-dry-run-with-ops-cf
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: trelawney-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
    params:
      SYSTEM_DOMAIN: trelawney.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml"

- name: deploy-releases-upgrade
  serial_groups: [hermione, hermione-smokes]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-develop
      trigger: true
    - get: hermione-env-vars-store
    - get: hermione-env-director-state
      passed: [ setup-infrastructure-upgrade ]
    - get: hermione-env-integration-configs
    - get: windows-stemcell
  - task: bosh-upload-stemcell-upgrade
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: hermione-env-director-state
    params:
      INFRASTRUCTURE: aws
  - task: bosh-upload-windows-stemcell
    file: runtime-ci/scripts/ci/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: windows-stemcell
      bbl-state: hermione-env-director-state
    params:
      STEMCELL_NAME: '*.tgz'
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-store: hermione-env-vars-store
    params:
      SYSTEM_DOMAIN: hermione.cf-app.com
      OPS_FILES: "operations/aws.yml operations/use-only-local-route-emitters.yml operations/windows-cell.yml operations/enable-local-route-emitters-windows-cell.yml operations/use-compiled-releases.yml"
    ensure:
      put: hermione-env-vars-store
      params:
        repository: updated-vars-store
        rebase: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration_config.json
    input_mapping:
      vars-store: hermione-env-vars-store
      integration-configs: hermione-env-integration-configs
    ensure:
      put: hermione-env-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true

- name: deploy-releases-lite
  public: true
  serial_groups: [snitch]
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
        trigger: true
      - get: bosh-deployment
      - get: snitch-env-director-state
        passed: [ setup-infrastructure-lite ]
      - get: snitch-env-vars-store
      - get: snitch-env-integration-configs
    - task: guarantee-no-existing-cf-deployment
      input_mapping:
        bbl-state: snitch-env-director-state
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    - task: bosh-upload-stemcell-lite
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        cf-deployment: cf-deployment-develop
        bbl-state: snitch-env-director-state
      params:
        INFRASTRUCTURE: bosh-lite
    - task: bosh-deploy-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state
        cf-deployment: cf-deployment-develop
        vars-store: snitch-env-vars-store
        ops-files: cf-deployment-develop
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
        OPS_FILES: "operations/bosh-lite.yml"
      ensure:
        put: snitch-env-vars-store
        params:
          repository: updated-vars-store
          rebase: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        CATS_INTEGRATION_CONFIG_FILE: integration_config.json
      input_mapping:
        vars-store: snitch-env-vars-store
        integration-configs: snitch-env-integration-configs
      ensure:
        put: snitch-env-integration-configs
        params:
          repository: updated-integration-configs
          rebase: true
    - task: ensure-api-healthy
      file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
      params:
        ENDPOINT: api.snitch.cf-app.com

- name: acceptance-tests-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: hermione-env-director-state
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: hermione-env-integration-configs
        trigger: true
      - get: hermione-env-vars-store
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: cf-deployment-develop
        trigger: true
        passed: [ deploy-releases-upgrade ]
      - get: cats-concourse-task
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: hermione-env-vars-store
      params:
        SYSTEM_DOMAIN: hermione.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: hermione-env-integration-configs
      file: cats-concourse-task/task.yml

- name: windows-acceptance-tests-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: windows-acceptance-tests
      - get: hermione-env-integration-configs
        trigger: true
      - get: hermione-env-director-state
        trigger: true
        passed: [ acceptance-tests-upgrade ]
      - get: hermione-env-vars-store
        trigger: true
        passed: [ acceptance-tests-upgrade ]
      - get: cf-deployment-develop
        trigger: true
        passed: [ acceptance-tests-upgrade ]
    - task: run-wats
      input_mapping:
      - integration-config: hermione-env-integration-configs
      file: runtime-ci/tasks/run-wats/task.yml

- name: smoke-tests-upgrade
  serial_groups: [hermione-smokes]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 1h
    do:
    - aggregate:
      - get: runtime-ci
      - get: hermione-env-director-state
        trigger: true
        passed: [deploy-releases-upgrade]
      - get: cf-deployment-develop
        trigger: true
        passed: [deploy-releases-upgrade]
  - task: bosh-run-errand-smoke-tests
    file: runtime-ci/tasks/run-errand/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
    params:
      ERRAND_NAME: smoke-tests

- name: acceptance-tests-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cats-concourse-task
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: luna-env-vars-store
      - get: luna-env-integration-configs
      - get: fresh-pool
        trigger: true
        passed: [ deploy-releases-fresh ]
      - get: cf-deployment-develop
        passed: [ deploy-releases-fresh ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: luna-env-vars-store
      params:
        SYSTEM_DOMAIN: luna.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: luna-env-integration-configs
      params:
        NODES: 6
      file: cats-concourse-task/task.yml

- name: acceptance-tests-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
      - get: cf-deployment-develop
        trigger: true
        passed: [ deploy-releases-lite ]
      - get: snitch-env-director-state
        trigger: true
        passed: [ deploy-releases-lite ]
      - get: snitch-env-vars-store
        trigger: true
        passed: [ deploy-releases-lite ]
      - get: snitch-env-integration-configs
        trigger: true
      - get: cats-concourse-task
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: snitch-env-vars-store
      params:
        SYSTEM_DOMAIN: snitch.cf-app.com
    - task: run-cats
      input_mapping:
      - integration-config: snitch-env-integration-configs
      params:
        NODES: 4
      file: cats-concourse-task/task.yml

- name: routing-acceptance-tests-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: github-routing-release-master
      - get: luna-env-vars-store
      - get: luna-env-integration-configs
      - get: cf-deployment-develop
        passed: [ deploy-releases-fresh ]
      - get: fresh-pool
        trigger: true
        passed: [ deploy-releases-fresh ]
    - task: ensure-tcp-router-healthy
      file: runtime-ci/scripts/ci/wait-for-endpoint/task.yml
      params:
        ENDPOINT: tcp.luna.cf-app.com:8080/health
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        vars-store: luna-env-vars-store
      params:
        SYSTEM_DOMAIN: luna.cf-app.com
    - task: run-rats
      input_mapping:
      - routing-release: github-routing-release-master
      - integration-config: luna-env-integration-configs
      file: runtime-ci/scripts/ci/run-rats/task.yml

- name: post-delete-deployment-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: luna-env-director-state
      - get: fresh-pool
        trigger: true
        passed:
        - acceptance-tests-fresh
        - routing-acceptance-tests-fresh
    - task: delete-deployment-cf
      input_mapping:
        bbl-state: luna-env-director-state
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    - put: fresh-pool
      params: {release: fresh-pool}

- name: destroy-infrastructure-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: hermione-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: hermione-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: unbind-elb-from-r53
    file: runtime-ci/scripts/ci/unbind-elb-from-r53/task.yml
    input_mapping:
      env-repo: hermione-env-director-state
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-migration
  serial_groups: [minerva]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: migration-pool
      params: {claim: minerva}
    - get: minerva-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: minerva-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: minerva-env-director-state
    ensure:
      put: minerva-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: fresh-pool
      params: {claim: luna}
    - get: luna-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: luna-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: luna-env-director-state
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: remove-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: fresh-pool
    passed: [ destroy-infrastructure-fresh ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {remove: fresh-pool}

- name: remove-claimed-lock-migration
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: migration-pool
    passed: [ destroy-infrastructure-migration ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: minerva
    output_mapping:
      pool-resource: migration-pool
  - put: migration-pool
    params: {remove: migration-pool}

- name: destroy-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: snitch-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: snitch-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: snitch-env-director-state
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: destroy-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: ops-pool
      params: {claim: trelawney}
    - get: trelawney-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    input_mapping:
      bbl-state: trelawney-env-director-state
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: trelawney-env-director-state
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: prepared-ops-pool
  - put: ops-pool
    params: {remove: prepared-ops-pool}

- name: bless-manifest
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - get: cf-deployment-develop
    trigger: true
    passed:
    - acceptance-tests-fresh
    - acceptance-tests-lite
    - acceptance-tests-upgrade
    - routing-acceptance-tests-fresh
    - smoke-tests-upgrade
    - deploy-releases-ops
  - put: cf-deployment-release-candidate
    params:
      repository: cf-deployment-develop

- name: update-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: hermione-env-director-state
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: stemcell
      trigger: true
      params:
        tarball: false
    - get: capi-release
      trigger: true
      params:
        tarball: false
    - get: nats-release
      trigger: true
      params:
        tarball: false
    - get: routing-release
      trigger: true
      params:
        tarball: false
    - get: consul-release
      trigger: true
      params:
        tarball: false
    - get: etcd-release
      trigger: true
      params:
        tarball: false
    - get: diego-release
      trigger: true
      params:
        tarball: false
    - get: loggregator-release
      trigger: true
      params:
        tarball: false
    # - get: cf-mysql-release
    #   trigger: true
    #   params:
    #     tarball: false
    - get: uaa-release
      trigger: true
      params:
        tarball: false
    - get: garden-runc-release
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-release
      trigger: true
      params:
        tarball: false
    - get: binary-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: dotnet-core-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: go-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: java-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: nodejs-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: php-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: python-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: ruby-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: staticfile-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: statsd-injector-release
      trigger: true
      params:
        tarball: false
    - get: cf-smoke-tests-release
      trigger: true
      params:
        tarball: false
  - task: create-binaries-manifest-section
    file: runtime-ci/scripts/ci/create-binaries-manifest-section/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: deployment-manifest
      ops-files: cf-deployment-develop
  - task: commit-generated-manifest
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      compiled-releases-ops-file: cf-deployment-develop
      manifest: deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMPILED_RELEASES_OPS_FILE_NAME: operations/use-compiled-releases.yml
      COMPILED_RELEASES_OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-release-mysql
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: stemcell
      trigger: true
      params:
        tarball: false
      passed: [ update-releases ]
    - get: cf-mysql-release
      trigger: true
      params:
        tarball: false
  - task: update-release-mysql
    file: runtime-ci/tasks/update-release-mysql/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: deployment-manifest
      ops-files: cf-deployment-develop
  - task: bosh-upload-stemcell-compilation
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: greengrass-env-director-state
    params:
      INFRASTRUCTURE: google
  - task: deploy-for-compilation
    file: runtime-ci/tasks/deploy-for-compilation/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: deployment-manifest
  - task: export-mysql-release
    file: runtime-ci/tasks/bosh-export-release/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: greengrass-env-director-state
    params:
      BOSH_RELEASE: cf-mysql
  - put: mysql-release-gcs-bucket
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      compiled-release-tarball: exported-release
      ops-files: cf-deployment-develop
      bosh-io-release: cf-mysql-release
    params:
      RELEASE_NAME: cf-mysql
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/scripts/ci/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      compiled-releases-ops-file: updated-compiled-releases-ops-file
      manifest: deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      COMPILED_RELEASES_OPS_FILE_NAME: use-compiled-releases.yml
      COMPILED_RELEASES_OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: verify-nameserver-has-record
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - get: runtime-ci
    - get: weekly
      trigger: true
    - task: verify-nameserver-has-record
      file: runtime-ci/scripts/ci/verify-nameserver-has-record/task.yml
      params:
        AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
        DOMAIN: hermione.cf-app.com

- name: run-bosh-cleanup-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: hermione-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: hermione-env-director-state

- name: run-bosh-cleanup-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: snitch-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: snitch-env-director-state

- name: ship-it-patch
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - put: cf-deployment-version
        params: { bump: patch }
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - put: cf-deployment-master
        params:
          repository: cf-deployment-release-candidate
          tag: cf-deployment-version/version
          tag_prefix: v

- name: ship-it-minor
  public: true
  build_logs_to_retain: 100
  plan:
    - do:
      - put: cf-deployment-version
        params: { bump: minor }
      - get: cf-deployment-release-candidate
        passed: [bless-manifest]
      - put: cf-deployment-master
        params:
          repository: cf-deployment-release-candidate
          tag: cf-deployment-version/version
          tag_prefix: v
