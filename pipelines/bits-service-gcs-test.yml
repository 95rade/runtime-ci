---
resources:
- name: hagrid-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hagrid-env.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))
- name: hagrid-env-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hagrid-env.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))
- name: cf-deployment-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci

jobs:
- name: deploy
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-master
    - get: cf-deployment-concourse-tasks
    - get: hagrid-env-integration-configs
    - get: hagrid-env-director-state
    - get: runtime-ci
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
    input_mapping:
      cf-deployment: cf-deployment-master
      bbl-state: hagrid-env-director-state
      ops-files: cf-deployment-master
    params:
      INFRASTRUCTURE: google
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: hagrid-env-director-state
      cf-deployment: cf-deployment-master
      ops-files: cf-deployment-master
      vars-files: hagrid-env-director-state
    params:
      SYSTEM_DOMAIN: hagrid.relint.rocks
      OPS_FILES: |
        operations/use-compiled-releases.yml
        operations/use-external-blobstore.yml
        operations/use-gcs-blobstore-service-account.yml
        operations/bits-service/use-bits-service.yml
        operations/bits-service/configure-bits-service-gcs-service-account.yml
      VARS_FILES: |
        gcs-vars.yml
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: hagrid-env-director-state
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration_config.json
    input_mapping:
      bbl-state: hagrid-env-director-state
      integration-configs: hagrid-env-integration-configs
    ensure:
      put: hagrid-env-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true
  - task: open-asgs-for-credhub
    file: runtime-ci/tasks/open-asgs-for-bosh-instance-group/task.yml
    input_mapping:
      bbl-state: hagrid-env-director-state
    params:
      INSTANCE_GROUP_NAME: credhub
      SYSTEM_DOMAIN: hagrid.relint.rocks
      SECURITY_GROUP_NAME: credhub
  - task: open-asgs-for-uaa
    file: runtime-ci/tasks/open-asgs-for-bosh-instance-group/task.yml
    input_mapping:
      bbl-state: hagrid-env-director-state
    params:
      INSTANCE_GROUP_NAME: uaa
      SYSTEM_DOMAIN: hagrid.relint.rocks
      SECURITY_GROUP_NAME: uaa

- name: run-cats
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: cf-acceptance-tests
    - get: hagrid-env-integration-configs
    - get: hagrid-env-director-state
    - get: cf-deployment-master
      passed: [deploy]
  - task: enable-docker-and-tasks
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    input_mapping:
      bbl-state: hagrid-env-director-state
    params:
      SYSTEM_DOMAIN: hagrid.relint.rocks
      ENABLED_FEATURE_FLAGS: |
        diego_docker
        task_creation
        service_instance_sharing
  - task: run-cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: hagrid-env-integration-configs
