groups:
- name: cf-release
  jobs:
  - cf-release-unit-tests
  - cf-release-branch-freshness
  - create-release
  - deploy-and-test-tabasco
  - deploy-and-test-openstack
  - bosh-lite-provision
  - bosh-lite-cf-deploy
  - bosh-lite-smoke-tests
  - bosh-lite-acceptance-tests
  - deploy-and-test-minimal
  - a1-cf-deploy
  - a1-smoke-tests
  - a1-diego-deploy
  - a1-diego-cats
  - vsphere-cf-deploy
  - vsphere-smoke-tests
  - vsphere-cf-cats
  - rc
- name: bosh
  jobs:
  - clean-all-the-boshes
- name: smokes
  jobs:
  - tabasco-runtime-smokes
  - tabasco-loggregator-smokes
  - a1-runtime-smokes
  - a1-loggregator-smokes
- name: rubbish-bin
  jobs:
  - deploy-and-test-a1
  - a1-diego-deploy-and-test
  - deploy-and-test-vsphere

resources:
- name: periodically
  type: time
  source:
    interval: 10m

- name: daily
  type: time
  source:
    start: 23:00 -0700
    stop: 23:30 -0700
    interval: 24h

- name: every-two-hours
  type: time
  source:
    interval: 2h

- name: cf-release-tarball
  type: s3
  source:
    bucket: cf-runtime-releases
    regexp: cf-(\d+)-.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-a1-manifest
  type: s3
  source:
    bucket: cf-a1-manifest
    versioned_file: deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-vsphere-manifest
  type: s3
  source:
    bucket: cf-vsphere-manifest
    versioned_file: deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-a1-diego-manifest
  type: s3
  source:
    bucket: cf-a1-diego-manifest
    versioned_file: diego-deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: bosh-lite-ip
  type: s3
  source:
    bucket: bosh-lite-ip
    versioned_file: bosh-lite-ip
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: tabasco-acceptance-tests-logs
  type: s3
  source:
    bucket: tabasco-acceptance-tests-logs
    regexp: acceptance_tests.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: openstack-acceptance-tests-logs
  type: s3
  source:
    bucket: openstack-acceptance-tests-logs
    regexp: acceptance_tests.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: vsphere-acceptance-tests-logs
  type: s3
  source:
    bucket: vsphere-acceptance-tests-logs
    regexp: acceptance_tests.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: bosh-lite-acceptance-tests-logs
  type: s3
  source:
    bucket: bosh-lite-acceptance-tests-logs
    regexp: acceptance_tests.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: a1-acceptance-tests-logs
  type: s3
  source:
    bucket: a1-acceptance-tests-logs
    regexp: acceptance_tests.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: a1-diego-cats-acceptance-tests-logs
  type: s3
  source:
    bucket: a1-acceptance-tests-logs
    regexp: a1-cats/diego-cats.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: a1-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_a1_env}}
    uri: git@github.com:cloudfoundry/a1-env.git

- name: cat-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_cat_env}}
    uri: git@github.com:cloudfoundry/cat-env.git

- name: dumbledore-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_dumbledore_env}}
    uri: git@github.com:cloudfoundry/dumbledore-env.git

- name: minimal-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_minimal_env}}
    uri: git@github.com:cloudfoundry/minimal-env.git

- name: tabasco-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_tabasco_env}}
    uri: git@github.com:cloudfoundry/tabasco-env.git

- name: smoke-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-smoke-tests.git

- name: cf-release-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-release.git

- name: cf-release-all-branches
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-release.git

- name: cf-release-runtime-deployed
  type: git
  source:
    branch: runtime-deployed
    private_key: {{cf_release_private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-runtime-passed
  type: git
  source:
    branch: runtime-passed
    private_key: {{cf_release_private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-release-candidate
  type: git
  source:
    branch: release-candidate
    private_key: {{cf_release_private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-acceptance-deployed
  type: git
  source:
    branch: acceptance-deployed
    private_key: {{cf_release_private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-release

- name: diego-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/diego-release

- name: diego-cf-compatibility
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/diego-cf-compatibility
    private_key: {{diego_cf_compatibility_private_key}}

- name: diego-final-releases
  type: s3
  source:
    bucket: diego-final-releases
    regexp: diego-(.*).tgz
    access_key_id: {{diego_final_release_bucket_access_key_id}}
    secret_access_key: {{diego_final_release_bucket_secret_access_key}}

- name: garden-linux-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-linux-release

- name: etcd-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release

- name: cflinuxfs2-rootfs-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release

- name: deployments-runtime
  type: git
  source:
    branch: master
    private_key: {{cf_release_private_key}}
    uri: git@github.com:cloudfoundry/deployments-runtime.git

- name: bosh-lite
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-lite.git

- name: bosh-lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: openstack-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-openstack-kvm-ubuntu-trusty-go_agent

- name: vsphere-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-vsphere-esxi-ubuntu-trusty-go_agent

- name: openstack-deployment
  type: bosh-deployment
  source:
    target: https://bosh.runtime-bb-1.cf-app.com:25555
    username: {{openstack_bosh_username}}
    password: {{openstack_bosh_password}}
    deployment: cf-runtime-bb-1
    ignore_ssl: true

- name: vsphere-deployment
  type: bosh-deployment
  source:
    target: https://bosh.cat.wild.cf-app.com:25555
    username: {{vsphere_bosh_username}}
    password: {{vsphere_bosh_password}}
    deployment: cf-cat
    ignore_ssl: true

- name: tabasco-deployment
  type: bosh-deployment
  source:
    target: https://bosh.tabasco.cf-app.com:25555
    username: {{tabasco_bosh_username}}
    password: {{tabasco_bosh_password}}
    deployment: cf-tabasco
    ignore_ssl: true

- name: a1-deployment
  type: bosh-deployment
  source:
    target: https://bosh.a1.cf-app.com:25555
    username: {{a1_bosh_username}}
    password: {{a1_bosh_password}}
    deployment: cf-a1
    ignore_ssl: true

- name: bosh-lite-deployment
  type: bosh-deployment
  source:
    username: admin
    password: admin
    deployment: cf-warden
    ignore_ssl: true

- name: bosh-lite-deployment-diego
  type: bosh-deployment
  source:
    username: admin
    password: admin
    deployment: cf-warden-diego
    ignore_ssl: true

- name: a1-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.a1.cf-app.com:25555
    username: {{a1_bosh_username}}
    password: {{a1_bosh_password}}
    deployment: cf-a1-diego
    ignore_ssl: true

- name: a1-diego-cats-deployment
  type: bosh-deployment
  source:
    target: https://bosh.a1.cf-app.com:25555
    username: {{a1_bosh_username}}
    password: {{a1_bosh_password}}
    deployment: a1-diego-cats
    ignore_ssl: true

- name: minimal-deployment
  type: bosh-deployment
  source:
    target: https://54.165.111.247:25555
    username: {{minimal_bosh_username}}
    password: {{minimal_bosh_password}}
    deployment: cf
    ignore_ssl: true

- name: runtime-ci-env
  type: git
  source:
    branch: master
    private_key: {{runtime-ci-env-deploy-key}}
    uri: git@github.com:cloudfoundry/runtime-ci-env.git

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

jobs:
- name: cf-release-unit-tests
  public: true
  plan:
  - timeout: &timeout 4h
    do:
    - aggregate:
      - get: cf-release-develop
        trigger: true
        on_failure:
          task: cannot-bump
          file: runtime-ci/scripts/ci/cannot-bump/task.yml
          params:
            URL: &canibump-url canibump.cfapps.io
            TOKEN: {{canibump_token}}
            REASON: "could not clone cf-release"
      - get: runtime-ci
    - aggregate:
      - task: run-cf-release-unit-tests
        privileged: true
        file: runtime-ci/scripts/ci/run-cf-release-unit-tests/task.yml
        params:
          CF_RELEASE_DIR: 'cf-release-develop'
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "cf-release unit tests failed"

- name: cf-release-branch-freshness
  public: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: repo
        resource: cf-release-all-branches
        trigger: true
        params:
          submodules: none
      - get: runtime-ci
    - task: validate-branches
      privileged: true
      file: runtime-ci/scripts/ci/validate-branch-freshness/task.yml

- name: create-release
  public: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: release-repo
        passed: [cf-release-unit-tests]
        trigger: true
        resource: cf-release-develop
      - get: runtime-ci
    - task: create-release-tarball
      privileged: true
      file: runtime-ci/scripts/ci/create-release/task.yml
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "Could not create release tarball"
    - put: cf-release-tarball
      params:
        file: release-out/cf-*.tgz

- name: clean-all-the-boshes
  public: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: runtime-ci
      - get: daily
        trigger: true
    - aggregate:
      - task: cleanup-runtime-ci
        privileged: true
        file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
        params:
          BOSH_DIRECTOR: https://bosh.runtime.ci.cf-app.com:25555
          BOSH_USER: {{runtime_ci_username}}
          BOSH_PASSWORD: {{runtime_ci_password}}
      - task: cleanup-tabasco
        privileged: true
        file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
        params: &bosh-target-tabasco
          BOSH_DIRECTOR: https://bosh.tabasco.cf-app.com:25555
          BOSH_USER: {{tabasco_bosh_username}}
          BOSH_PASSWORD: {{tabasco_bosh_password}}
      - task: cleanup-vsphere
        privileged: true
        file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
        tags: [vsphere]
        params: &bosh-target-cat
          BOSH_DIRECTOR: https://bosh.cat.wild.cf-app.com
          BOSH_USER: {{vsphere_bosh_username}}
          BOSH_PASSWORD: {{vsphere_bosh_password}}
      - task: cleanup-minimal
        privileged: true
        file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
        params:
          BOSH_DIRECTOR: https://54.165.111.247:25555
          BOSH_USER: {{minimal_bosh_username}}
          BOSH_PASSWORD: {{minimal_bosh_password}}
      - task: cleanup-a1
        privileged: true
        file: runtime-ci/scripts/ci/run-bosh-cleanup/task.yml
        params: &bosh-target-a1
          BOSH_DIRECTOR: https://bosh.a1.cf-app.com:25555
          BOSH_USER: {{a1_bosh_username}}
          BOSH_PASSWORD: {{a1_bosh_password}}

- name: deploy-and-test-tabasco
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [create-release]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [create-release]
      - get: runtime-ci
      - get: deployments
        resource: tabasco-env
      - get: aws-stemcell
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      params:
        INFRASTRUCTURE: aws
        ENVIRONMENT: tabasco
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "Could not create cf-release manifest"
    - task: emit-datadog-deploy-start
      privileged: true
      file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
      params:
        STATE: started
        EVENT_TAG_DEPLOYMENT: cf-tabasco
        DATADOG_API_KEY: {{tabasco_datadog_api_key}}
    - put: tabasco-deployment
      params:
        manifest: manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "Could not deploy cf-release"
      ensure:
        do:
        - task: emit-datadog-deploy-end
          privileged: true
          file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
          params:
            STATE: finished
            EVENT_TAG_DEPLOYMENT: cf-tabasco
            DATADOG_API_KEY: {{tabasco_datadog_api_key}}
    - put: cf-release-runtime-deployed
      params:
        repository: cf-release
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "Could not push to cf-release"
    - task: smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        <<: *bosh-target-tabasco
        DEPLOYMENT_NAME: cf-tabasco
        ERRAND_NAME: smoke_tests
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "smoke tests failed"
    - task: acceptance-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        <<: *bosh-target-tabasco
        DEPLOYMENT_NAME: cf-tabasco
        ERRAND_NAME: acceptance_tests
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "acceptance tests failed"
      ensure:
        put: tabasco-acceptance-tests-logs
        params:
          file: logs-dir/acceptance_tests.*.tgz
    - put: cf-release-runtime-passed
      params:
        repository: cf-release
    - task: can-bump
      file: runtime-ci/scripts/ci/can-bump/task.yml
      params:
        URL: canibump.cfapps.io
        TOKEN: {{canibump_token}}

- name: deploy-and-test-openstack
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
      - get: runtime-ci
      - get: deployments
        resource: dumbledore-env
      - get: openstack-stemcell
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      params:
        INFRASTRUCTURE: openstack
        ENVIRONMENT: runtime-bb-1
    - put: openstack-deployment
      params:
        manifest: manifest/deployment.yml
        stemcells: [openstack-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - task: smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params: &bosh-target-runtime-bb-1
        BOSH_DIRECTOR: https://bosh.runtime-bb-1.cf-app.com:25555
        BOSH_USER: {{openstack_bosh_username}}
        BOSH_PASSWORD: {{openstack_bosh_password}}
        DEPLOYMENT_NAME: cf-runtime-bb-1
        ERRAND_NAME: smoke_tests
    - task: acceptance-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        <<: *bosh-target-runtime-bb-1
        DEPLOYMENT_NAME: cf-runtime-bb-1
        ERRAND_NAME: acceptance_tests
      ensure:
        put: openstack-acceptance-tests-logs
        params:
          file: logs-dir/acceptance_tests.*.tgz

- name: bosh-lite-provision
  public: true
  serial_groups:
  - bosh-lite
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
        params:
          submodules: none
      - get: bosh-lite
      - get: runtime-ci
      - get: bosh-lite-stemcell
        trigger: true
    - task: deprovision-bosh-lite
      privileged: true
      file: runtime-ci/scripts/ci/deprovision-bosh-lite/task.yml
      params:
        AWS_DEFAULT_REGION: {{bosh_lite_aws_default_region}}
        AWS_ACCESS_KEY_ID: {{bosh_lite_vagrant_user_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{bosh_lite_vagrant_user_secret_access_key}}
    - task: bosh-lite-provision
      privileged: true
      file: runtime-ci/scripts/ci/provision-bosh-lite/task.yml
      params:
        AWS_ACCESS_KEY_ID: {{bosh_lite_vagrant_user_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{bosh_lite_vagrant_user_secret_access_key}}
        AWS_DEFAULT_REGION: {{bosh_lite_aws_default_region}}
        BOSH_LITE_SECURITY_GROUP: {{bosh_lite_security_group}}
        BOSH_LITE_PRIVATE_IP: {{bosh_lite_private_ip}}
        BOSH_LITE_KEYPAIR: {{bosh_lite_keypair_name}}
        SSH_KEY: {{bosh_lite_private_key}}
  - aggregate:
    - put: bosh-lite-ip
      params:
        file: bosh-lite-ip/bosh-lite-ip
- name: bosh-lite-cf-deploy
  public: true
  serial_groups:
  - bosh-lite
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [bosh-lite-provision]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [bosh-lite-provision]
        params:
          submodules: none
      - get: runtime-ci
      - get: bosh-lite-ip
        resource: bosh-lite-ip
        passed: [bosh-lite-provision]
        trigger: true
      - get: bosh-lite-stemcell
        passed: [bosh-lite-provision]
        trigger: true
      - get: diego-release
        resource: diego-release-master
        params: {submodules: none}
      - get: diego-final-releases
        trigger: true
      - get: garden-linux-release-tarball
        trigger: true
      - get: etcd-release-tarball
        trigger: true
      - get: cflinuxfs2-rootfs-release-tarball
        trigger: true
    - task: create-bosh-lite-stub
      file: runtime-ci/scripts/ci/create-bosh-lite-stub/task.yml
      params:
        INFRASTRUCTURE: bosh-lite
        STUBS_PATH: deployments/*.yml
    - task: create-manifest
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      params:
        INFRASTRUCTURE: bosh-lite
        STUBS_PATH: deployments/*.yml
    - put: bosh-lite-deployment
      params:
        target_file: bosh-lite-ip/bosh-lite-ip
        manifest: manifest/deployment.yml
        stemcells: [bosh-lite-stemcell/*.tgz]
        releases: [ cf-release-tarball/*.tgz]
    - task: create-diego-manifest
      file: runtime-ci/scripts/ci/create-diego-manifest/task.yml
      params:
        BOSH_PASSWORD: admin
        BOSH_TARGET: {{bosh_lite_private_ip}}
        BOSH_USER: admin
        ENVIRONMENT_NAME: warden
        DIEGO_RELEASE_DIR: diego-release
        IAAS_SETTINGS: diego-release/manifest-generation/bosh-lite-stubs/iaas-settings.yml
        PROPERTY_OVERRIDES: diego-release/manifest-generation/bosh-lite-stubs/property-overrides.yml
        INSTANCE_COUNT_OVERRIDES: diego-release/manifest-generation/bosh-lite-stubs/instance-count-overrides.yml
        RELEASE_VERSIONS: diego-release/manifest-generation/bosh-lite-stubs/release-versions.yml
    - put: bosh-lite-deployment-diego
      params:
        target_file: bosh-lite-ip/bosh-lite-ip
        manifest: generated-diego-manifest/diego-deployment.yml
        stemcells: [bosh-lite-stemcell/*.tgz]
        releases:
        - diego-final-releases/*.tgz
        - garden-linux-release-tarball/*.tgz
        - etcd-release-tarball/*.tgz
        - cflinuxfs2-rootfs-release-tarball/*.tgz

- name: bosh-lite-smoke-tests
  public: true
  serial_groups:
  - bosh-lite
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release
        resource: cf-release-develop
        passed: [bosh-lite-cf-deploy]
        params:
          submodules: none
      - get: runtime-ci
      - get: bosh-lite-stemcell
        passed: [bosh-lite-cf-deploy]
        trigger: true
      - get: cf-release-tarball
        passed: [bosh-lite-cf-deploy]
        trigger: true
      - get: bosh-director-file-dir
        resource: bosh-lite-ip
        passed: [bosh-lite-cf-deploy]
        trigger: true
    - task: create-bosh-lite-creds
      file: runtime-ci/scripts/ci/create-bosh-lite-creds/task.yml
    - task: run-smoke-tests
      file: runtime-ci/scripts/ci/run-errand-bbl/task.yml
      params:
        BOSH_DIRECTOR_FILE: bosh-director-file-dir/bosh-lite-ip
        BOSH_USER_FILE: bosh-user-file-dir/username
        BOSH_PASSWORD_FILE: bosh-password-file-dir/password
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: smoke_tests
- name: bosh-lite-acceptance-tests
  public: true
  serial_groups:
  - bosh-lite
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release
        resource: cf-release-develop
        passed: [bosh-lite-smoke-tests]
        params:
          submodules: none
      - get: runtime-ci
      - get: bosh-lite-stemcell
        passed: [bosh-lite-smoke-tests]
        trigger: true
      - get: cf-release-tarball
        passed: [bosh-lite-smoke-tests]
        trigger: true
      - get: bosh-director-file-dir
        resource: bosh-lite-ip
        passed: [bosh-lite-smoke-tests]
        trigger: true
    - task: create-bosh-lite-creds
      file: runtime-ci/scripts/ci/create-bosh-lite-creds/task.yml
    - task: run-acceptance-tests
      file: runtime-ci/scripts/ci/run-errand-bbl/task.yml
      params:
        BOSH_DIRECTOR_FILE: bosh-director-file-dir/bosh-lite-ip
        BOSH_USER_FILE: bosh-user-file-dir/username
        BOSH_PASSWORD_FILE: bosh-password-file-dir/password
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: acceptance_tests
      ensure:
        put: bosh-lite-acceptance-tests-logs
        params:
          file: logs-dir/acceptance_tests.*.tgz
- name: deploy-and-test-minimal
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: aws-stemcell
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
        params:
          submodules: ['src/github.com/cloudfoundry/cf-acceptance-tests']
      - get: runtime-ci
      - get: deployments
        resource: minimal-env
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-minimal-cf-release-manifest/task.yml
    - put: minimal-deployment
      params:
        manifest: manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - task: run-acceptance-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-cats/task.yml
      params:
        CF_API: api.minimal-aws.cf-app.com
        CF_ADMIN_PASSWORD: {{minimal_cf_admin_password}}
        CF_APPS_DOMAIN: minimal-aws.cf-app.com
        SKIP_SSL_VALIDATION: true
        USE_HTTP: false
        NODES: 2
        SUITES: "apps detect docker internet_dependent route_services services security_groups"
        ADDITIONAL_ARGS: "-skip=NO_DEA_SUPPORT -slowSpecThreshold=240 -keepGoing -failOnPending"

- name: vsphere-cf-deploy
  public: true
  serial_groups:
  - vsphere-deploy
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
        trigger: true
        tags: [vsphere]
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
        tags: [vsphere]
      - get: runtime-ci
        tags: [vsphere]
      - get: deployments
        resource: cat-env
        tags: [vsphere]
      - get: vsphere-stemcell
        tags: [vsphere]
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      tags: [vsphere]
      params:
        INFRASTRUCTURE: vsphere
        ENVIRONMENT: cat
    - task: delete-vsphere-deployment
      privileged: true
      file: runtime-ci/scripts/ci/delete-deployment/task.yml
      tags: [vsphere]
      params:
        <<: *bosh-target-cat
        DEPLOYMENT_NAME: cf-cat
    - put: vsphere-deployment
      tags: [vsphere]
      params:
        manifest: manifest/deployment.yml
        stemcells: [vsphere-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - put: cf-vsphere-manifest
      params:
        file: manifest/deployment.yml

- name: vsphere-smoke-tests
  public: true
  serial_groups:
  - vsphere-deploy
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: runtime-ci
      - get: manifest
        resource: cf-vsphere-manifest
        trigger: true
        passed:
        - vsphere-cf-deploy
      - get: cf-release
        resource: cf-release-develop
        passed: [vsphere-cf-deploy]
        trigger: true
        tags: [vsphere]
    - task: smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      tags: [vsphere]
      params:
        <<: *bosh-target-cat
        DEPLOYMENT_NAME: cf-cat
        ERRAND_NAME: smoke_tests

- name: vsphere-cf-cats
  public: true
  serial_groups:
  - vsphere-deploy
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: runtime-ci
      - get: manifest
        resource: cf-vsphere-manifest
        trigger: true
        passed:
        - vsphere-smoke-tests
      - get: cf-release
        resource: cf-release-develop
        passed: [vsphere-smoke-tests]
        trigger: true
        tags: [vsphere]
    - task: acceptance-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      tags: [vsphere]
      params:
        <<: *bosh-target-cat
        DEPLOYMENT_NAME: cf-cat
        ERRAND_NAME: acceptance_tests
      ensure:
        put: vsphere-acceptance-tests-logs
        tags: [vsphere]
        params:
          file: logs-dir/acceptance_tests.*.tgz

- name: a1-cf-deploy
  public: true
  serial: true
  serial_groups:
  - cf-a1-bosh-deployment-lock
  - cf-deploy-and-diego-cats-lock
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
      - get: runtime-ci
      - get: deployments
        resource: a1-env
      - get: aws-stemcell
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      params:
        INFRASTRUCTURE: aws
        ENVIRONMENT: a1
    - put: cf-a1-manifest
      params:
        file: manifest/deployment.yml
    - task: emit-datadog-deploy-start
      privileged: true
      file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
      params:
        STATE: started
        EVENT_TAG_DEPLOYMENT: cf-a1
        DATADOG_API_KEY: {{a1_datadog_api_key}}
    - put: a1-deployment
      params:
        manifest: manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - task: emit-datadog-deploy-end
      privileged: true
      file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
      params:
        STATE: finished
        EVENT_TAG_DEPLOYMENT: cf-a1
        DATADOG_API_KEY: {{a1_datadog_api_key}}
    - put: cf-release-acceptance-deployed
      params:
        repository: cf-release

- name: a1-smoke-tests
  public: true
  serial: true
  serial_groups:
  - cf-a1-bosh-deployment-lock
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: manifest
        resource: cf-a1-manifest
        passed: [ a1-cf-deploy ]
        trigger: true
      - get: cf-a1-diego-manifest
        passed: [a1-diego-deploy]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [a1-cf-deploy, a1-diego-deploy]
      - get: cf-release-tarball
        passed: [a1-cf-deploy, a1-diego-deploy]
        trigger: true
      - get: runtime-ci
      - get: aws-stemcell
        passed: [ a1-cf-deploy, a1-diego-deploy ]
        params:
          tarball: false
        trigger: true
      - get: diego-final-releases
        passed: [ a1-diego-deploy ]
        trigger: true
      - get: diego-release-master
        resource: diego-release-master
        trigger: true
        passed: [ a1-diego-deploy ]
        params:
          submodules: none
      - get: garden-linux-release-tarball
        trigger: true
        passed: [ a1-diego-deploy ]
        params:
          tarball: false
      - get: etcd-release-tarball
        trigger: true
        passed: [ a1-diego-deploy ]
        params:
          tarball: false
      - get: cflinuxfs2-rootfs-release-tarball
        trigger: true
        passed: [ a1-diego-deploy ]
        params:
          tarball: false
    - task: smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        <<: *bosh-target-a1
        DEPLOYMENT_NAME: cf-a1
        ERRAND_NAME: smoke_tests

- name: a1-diego-deploy
  public: true
  serial_groups:
  - diego-deploy-and-diego-cats-lock
  plan:
  - aggregate:
    - get: runtime-ci
    - get: diego-release
      resource: diego-release-master
      params: {submodules: none}
    - get: diego-final-releases
      trigger: true
    - get: garden-linux-release-tarball
      trigger: true
    - get: etcd-release-tarball
      trigger: true
    - get: cflinuxfs2-rootfs-release-tarball
      trigger: true
    - get: deployments
      resource: a1-env
    - get: bosh-stemcell
      resource: aws-stemcell
    - get: cf-release
      resource: cf-release-develop
      passed: [deploy-and-test-tabasco]
    - get: cf-release-tarball
      passed: [deploy-and-test-tabasco]
      trigger: true
  - task: generate-deployment-manifests
    file: runtime-ci/scripts/ci/generate-diego-manifest/task.yml
    params:
      BOSH_TARGET: bosh.a1.cf-app.com
      ENVIRONMENT_NAME: a1
      DEPLOYMENTS_DIR: deployments
      BOSH_USER: {{a1_bosh_username}}
      BOSH_PASSWORD: {{a1_bosh_password}}
      INFRASTRUCTURE: aws
  - put: cf-a1-diego-manifest
    params:
      file: generated-diego-manifest/diego-deployment.yml
  - task: emit-diego-datadog-started
    file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
    params:
      STATE: started
      EVENT_TAG_DEPLOYMENT: cf-a1-diego
      DATADOG_API_KEY: {{a1_datadog_api_key}}
  - put: a1-diego-deployment
    params:
      manifest: generated-diego-manifest/diego-deployment.yml
      releases: [diego-final-releases/*.tgz, garden-linux-release-tarball/*.tgz, etcd-release-tarball/*.tgz, cflinuxfs2-rootfs-release-tarball/*.tgz ]
      stemcells: [bosh-stemcell/*.tgz]
  - task: emit-datadog-finished
    file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
    params:
      STATE: finished
      EVENT_TAG_DEPLOYMENT: cf-a1-diego
      DATADOG_API_KEY: {{a1_datadog_api_key}}

- name: a1-diego-cats
  public: true
  serial_groups:
  - diego-deploy-and-diego-cats-lock
  - cf-deploy-and-diego-cats-lock
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: manifest
        resource: cf-a1-manifest
        trigger: true
        passed: [ a1-smoke-tests ]
      - get: cf-release
        resource: cf-release-develop
        passed: [a1-smoke-tests]
      - get: cf-release-tarball
        passed: [a1-smoke-tests]
        trigger: true
      - get: runtime-ci
      - get: deployments
        resource: a1-env
      - get: aws-stemcell
        passed: [ a1-smoke-tests ]
        params:
          tarball: false
        trigger: true
      - get: diego-final-releases
        passed: [ a1-smoke-tests ]
        trigger: true
      - get: diego-release-master
        resource: diego-release-master
        trigger: true
        passed: [ a1-smoke-tests ]
        params:
          submodules: none
      - get: garden-linux-release-tarball
        trigger: true
        passed: [ a1-smoke-tests ]
        params:
          tarball: false
      - get: etcd-release-tarball
        trigger: true
        passed: [ a1-smoke-tests ]
        params:
          tarball: false
      - get: cflinuxfs2-rootfs-release-tarball
        trigger: true
        passed: [ a1-smoke-tests ]
        params:
          tarball: false
      - get: cf-a1-diego-manifest
        passed: [a1-smoke-tests]
        trigger: true
  - task: enable-docker
    file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
    params:
      CF_TARGET: api.a1.cf-app.com
      CF_USER: {{a1_admin_username}}
      CF_PASSWORD: {{a1_admin_password}}
  - put: a1-diego-cats-deployment
    params:
      manifest: deployments/deployments/a1-diego-cats.yml
      releases: []
      stemcells: []
  - task: cf-acceptance-tests
    file: runtime-ci/scripts/ci/run-errand/task.yml
    params:
      <<: *bosh-target-a1
      DEPLOYMENT_NAME: a1-diego-cats
      ERRAND_NAME: diego-cats
    ensure:
      put: a1-diego-cats-acceptance-tests-logs
      params:
        file: logs-dir/diego-cats.*.tgz

- name: rc
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: runtime-ci
      - get: diego-cf-compatibility
      - get: cf-release
        resource: cf-release-develop
        passed: [vsphere-cf-cats, bosh-lite-acceptance-tests, a1-diego-cats]
        trigger: true
        params:
          submodules: none
      - get: stemcell
        resource: aws-stemcell
        passed: [ a1-diego-cats]
        trigger: true
      - get: diego-final-releases
        passed: [ a1-diego-cats ]
        trigger: true
      - get: diego-release-master
        passed: [ a1-diego-cats ]
        trigger: true
      - get: garden-linux-release-tarball
        passed: [ a1-diego-cats ]
        trigger: true
      - get: etcd-release-tarball
        passed: [ a1-diego-cats ]
        trigger: true
      - get: cflinuxfs2-rootfs-release-tarball
        passed: [ a1-diego-cats ]
        trigger: true
    - aggregate:
      - put: cf-release-release-candidate
        params:
          repository: cf-release
      - do:
        - task: update-compatibility
          file: runtime-ci/scripts/ci/record-compatible-versions/task.yml
          params:
            BOSH_TARGET: https://bosh.a1.cf-app.com
            BOSH_USER: {{a1_bosh_username}}
            BOSH_PASSWORD: {{a1_bosh_password}}
        - put: diego-cf-compatibility
          params:
            repository: updated-diego-cf-compatibility

- name: tabasco-runtime-smokes
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: periodically
        trigger: true
      - get: smoke-tests
      - get: runtime-ci
    - aggregate:
      - task: run1
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params: &tabasco-smoke-params
          SUITE_NAME: RUNTIME-SMOKE
          API: https://api.tabasco.cf-app.com
          APPS_DOMAIN: tabasco-app.cf-app.com
          SKIP_SSL_VALIDATION: true
          CF_USER: {{tabasco_runtime_smokes_username}}
          CF_PASSWORD: {{tabasco_runtime_smokes_password}}
          ORG: runtime-smoke-tests
          SPACE: concourse-runtime-smoke-tests-1
          USE_EXISTING_ORG: true
          ARGS: '--focus=Runtime:'
      - task: run2
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *tabasco-smoke-params
          SPACE: concourse-runtime-smoke-tests-2
      - task: run3
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *tabasco-smoke-params
          SPACE: concourse-runtime-smoke-tests-3
      - task: run4
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *tabasco-smoke-params
          SPACE: concourse-runtime-smoke-tests-4
      on_success:
        task: emit_datadog_success
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params: &tabasco-smoke-datadog-params
          METRIC: smoke.status
          TAGS: '"deployment:cf-tabasco","loggregator_enabled:0"'
          DATADOG_API_KEY: {{tabasco_datadog_api_key}}
          VALUE: 1
      on_failure:
        task: emit_datadog_failure
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params:
          <<: *tabasco-smoke-datadog-params
          VALUE: 0

- name: tabasco-loggregator-smokes
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: periodically
        trigger: true
      - get: smoke-tests
      - get: runtime-ci
    - task: run1
      file: runtime-ci/scripts/ci/run-smoketests/task.yml
      params:
        SUITE_NAME: RUNTIME-SMOKE
        API: https://api.tabasco.cf-app.com
        APPS_DOMAIN: tabasco-app.cf-app.com
        SKIP_SSL_VALIDATION: true
        CF_USER: {{tabasco_runtime_smokes_username}}
        CF_PASSWORD: {{tabasco_runtime_smokes_password}}
        ORG: runtime-smoke-tests
        SPACE: concourse-loggregator-smoke-tests
        USE_EXISTING_ORG: true
        ARGS: '--focus=Loggregator:'
      on_success:
        task: emit_datadog_success
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params: &tabasco-smoke-datadog-params
          METRIC: smoke.status
          TAGS: '"deployment:cf-tabasco","loggregator_enabled:1"'
          DATADOG_API_KEY: {{tabasco_datadog_api_key}}
          VALUE: 1
      on_failure:
        task: emit_datadog_failure
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params:
          <<: *tabasco-smoke-datadog-params
          VALUE: 0

- name: a1-runtime-smokes
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: periodically
        trigger: true
      - get: smoke-tests
      - get: runtime-ci
    - aggregate:
      - task: run1
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params: &a1-smoke-params
          SUITE_NAME: RUNTIME-SMOKE
          API: https://api.a1.cf-app.com
          APPS_DOMAIN: a1-app.cf-app.com
          SKIP_SSL_VALIDATION: true
          CF_USER: {{tabasco_runtime_smokes_username}}
          CF_PASSWORD: {{tabasco_runtime_smokes_password}}
          ORG: runtime-smoke-tests
          SPACE: concourse-runtime-smoke-tests-1
          USE_EXISTING_ORG: true
          ARGS: '--focus=Runtime:'
      - task: run2
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-2
      - task: run3
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-3
      - task: run4
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-4
      - task: run5
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-5
      - task: run6
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-6
      - task: run7
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-7
      - task: run8
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-8
      - task: run9
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-9
      - task: run10
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-10
      - task: run11
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests11
      - task: run12
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-12
      - task: run13
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-13
      - task: run14
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-14
      - task: run15
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *a1-smoke-params
          SPACE: concourse-runtime-smoke-tests-15
      on_success:
        task: emit_datadog_success
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params: &a1-smoke-datadog-params
          METRIC: smoke.status
          TAGS: '"deployment:cf-a1","loggregator_enabled:0"'
          DATADOG_API_KEY: {{a1_datadog_api_key}}
          VALUE: 1
      on_failure:
        task: emit_datadog_failure
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params:
          <<: *a1-smoke-datadog-params
          VALUE: 0


- name: a1-loggregator-smokes
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: periodically
        trigger: true
      - get: smoke-tests
      - get: runtime-ci
    - task: run1
      file: runtime-ci/scripts/ci/run-smoketests/task.yml
      params:
        SUITE_NAME: RUNTIME-SMOKE
        API: https://api.a1.cf-app.com
        APPS_DOMAIN: a1-app.cf-app.com
        SKIP_SSL_VALIDATION: true
        CF_USER: {{tabasco_runtime_smokes_username}}
        CF_PASSWORD: {{tabasco_runtime_smokes_password}}
        ORG: runtime-smoke-tests
        SPACE: concourse-loggregator-smoke-tests
        USE_EXISTING_ORG: true
        ARGS: '--focus=Loggregator:'
      on_success:
        task: emit_datadog_success
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params: &a1-smoke-datadog-params
          METRIC: smoke.status
          TAGS: '"deployment:cf-a1","loggregator_enabled:1"'
          DATADOG_API_KEY: {{a1_datadog_api_key}}
          VALUE: 1
      on_failure:
        task: emit_datadog_failure
        file: runtime-ci/scripts/ci/emit-datadog-metric/task.yml
        params:
          <<: *a1-smoke-datadog-params
          VALUE: 0

- name: deploy-and-test-vsphere
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
        tags: [vsphere]
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
        tags: [vsphere]
      - get: runtime-ci
        tags: [vsphere]
      - get: deployments
        resource: cat-env
        tags: [vsphere]
      - get: vsphere-stemcell
        tags: [vsphere]
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      tags: [vsphere]
      params:
        INFRASTRUCTURE: vsphere
        ENVIRONMENT: cat
    - task: delete-vsphere-deployment
      privileged: true
      file: runtime-ci/scripts/ci/delete-deployment/task.yml
      tags: [vsphere]
      params:
        <<: *bosh-target-cat
        DEPLOYMENT_NAME: cf-cat
    - put: vsphere-deployment
      tags: [vsphere]
      params:
        manifest: manifest/deployment.yml
        stemcells: [vsphere-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - task: smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      tags: [vsphere]
      params:
        <<: *bosh-target-cat
        DEPLOYMENT_NAME: cf-cat
        ERRAND_NAME: smoke_tests
    - task: acceptance-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      tags: [vsphere]
      params:
        <<: *bosh-target-cat
        DEPLOYMENT_NAME: cf-cat
        ERRAND_NAME: acceptance_tests
      ensure:
        put: vsphere-acceptance-tests-logs
        tags: [vsphere]
        params:
          file: logs-dir/acceptance_tests.*.tgz

- name: deploy-and-test-a1
  public: true
  serial: true
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [deploy-and-test-tabasco]
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-and-test-tabasco]
      - get: runtime-ci
      - get: deployments
        resource: a1-env
      - get: aws-stemcell
    - task: create-manifest
      privileged: true
      file: runtime-ci/scripts/ci/create-cf-release-manifest/task.yml
      params:
        INFRASTRUCTURE: aws
        ENVIRONMENT: a1
    - task: emit-datadog-deploy-start
      privileged: true
      file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
      params:
        STATE: started
        EVENT_TAG_DEPLOYMENT: cf-a1
        DATADOG_API_KEY: {{a1_datadog_api_key}}
    - put: a1-deployment
      params:
        manifest: manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - task: emit-datadog-deploy-end
      privileged: true
      file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
      params:
        STATE: finished
        EVENT_TAG_DEPLOYMENT: cf-a1
        DATADOG_API_KEY: {{a1_datadog_api_key}}
    - put: cf-release-acceptance-deployed
      params:
        repository: cf-release
    - task: smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        <<: *bosh-target-a1
        DEPLOYMENT_NAME: cf-a1
        ERRAND_NAME: smoke_tests
    - task: acceptance-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        <<: *bosh-target-a1
        DEPLOYMENT_YML: cf-a1
        ERRAND_NAME: acceptance_tests
      ensure:
        put: a1-acceptance-tests-logs
        params:
          file: logs-dir/acceptance_tests.*.tgz

- name: a1-diego-deploy-and-test
  public: true
  serial: true
  plan:
  - aggregate:
    - get: runtime-ci
    - get: diego-release
      resource: diego-release-master
      params: {submodules: none}
    - get: diego-final-releases
    - get: garden-linux-release-tarball
    - get: etcd-release-tarball
    - get: cflinuxfs2-rootfs-release-tarball
    - get: deployments
      resource: a1-env
    - get: bosh-stemcell
      resource: aws-stemcell
    - get: cf-release
      resource: cf-release-develop
      passed: [deploy-and-test-tabasco]
  - task: generate-deployment-manifests
    file: runtime-ci/scripts/ci/generate-diego-manifest/task.yml
    params:
      BOSH_TARGET: bosh.a1.cf-app.com
      ENVIRONMENT_NAME: a1
      DEPLOYMENTS_DIR: deployments
      BOSH_USER: {{a1_bosh_username}}
      BOSH_PASSWORD: {{a1_bosh_password}}
      INFRASTRUCTURE: aws
  - task: emit-diego-datadog-started
    file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
    params:
      STATE: started
      EVENT_TAG_DEPLOYMENT: cf-a1-diego
      DATADOG_API_KEY: {{a1_datadog_api_key}}
  - put: a1-diego-deployment
    params:
      manifest: generated-diego-manifest/diego-deployment.yml
      releases: [diego-final-releases/*.tgz, garden-linux-release-tarball/*.tgz, etcd-release-tarball/*.tgz, cflinuxfs2-rootfs-release-tarball/*.tgz]
      stemcells: [bosh-stemcell/*.tgz]
  - task: emit-datadog-finished
    file: runtime-ci/scripts/ci/emit-datadog-event/task.yml
    params:
      STATE: finished
      EVENT_TAG_DEPLOYMENT: cf-a1-diego
      DATADOG_API_KEY: {{a1_datadog_api_key}}
  - task: enable-docker
    file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
    params:
      CF_TARGET: api.a1.cf-app.com
      CF_USER: {{a1_admin_username}}
      CF_PASSWORD: {{a1_admin_password}}
  - put: a1-diego-cats-deployment
    params:
      manifest: deployments/deployments/a1-diego-cats.yml
      releases: []
      stemcells: []
  - task: cf-acceptance-tests
    file: runtime-ci/scripts/ci/run-errand/task.yml
    params:
      BOSH_DIRECTOR: bosh.a1.cf-app.com
      BOSH_USER: {{a1_bosh_username}}
      BOSH_PASSWORD: {{a1_bosh_password}}
      DEPLOYMENT_YML: a1-diego-cats
      ERRAND_NAME: acceptance_tests
    ensure:
      put: a1-diego-cats-acceptance-tests-logs
      params:
        file: logs-dir/diego-cats.*.tgz

