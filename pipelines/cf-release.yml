groups:
- name: cf-release
  jobs:
  - unit-tests
  - branch-freshness
  - create-release
  - deploy-bosh-lite
  - bosh-lite-smoke-tests
  - bosh-lite-acceptance-tests
  - generate-aws-manifests
  - generate-bosh-lite-manifests
  - generate-vsphere-manifests
  - deploy-aws
  - aws-smoke-tests
  - aws-acceptance-tests
  - deploy-vsphere
  - vsphere-smoke-tests
  - vsphere-acceptance-tests
  - rc
- name: bosh
  jobs:
  - clean-all-the-boshes
- name: smokes
  jobs:
  - a1-runtime-smokes
  - a1-loggregator-smokes


resource_types:
- name: build-metadata-resource
  type: docker-image
  source:
    repository: relintdockerhubpushbot/build-metadata-resource
    tag: latest

resources:
- name: periodically
  type: time
  source:
    interval: 10m

- name: daily
  type: time
  source:
    start: 23:00 -0700
    stop: 23:30 -0700
    interval: 24h

- name: cf-release-tarball
  type: s3
  source:
    bucket: cf-runtime-releases
    regexp: cf-(\d+)-.*.tgz
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-a1-manifest
  type: s3
  source:
    bucket: cf-a1-manifest
    versioned_file: deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-vsphere-manifest
  type: s3
  source:
    bucket: cf-vsphere-manifest
    versioned_file: deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-vsphere-diego-manifest
  type: s3
  source:
    bucket: cf-vsphere-diego-manifest
    versioned_file: diego-deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-bosh-lite-manifest
  type: s3
  source:
    bucket: cf-bosh-lite-manifest
    versioned_file: deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-a1-diego-manifest
  type: s3
  source:
    bucket: cf-a1-diego-manifest
    versioned_file: diego-deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: cf-bosh-lite-diego-manifest
  type: s3
  source:
    bucket: cf-bosh-lite-diego-manifest
    versioned_file: diego-deployment.yml
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: a1-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_a1_env}}
    uri: git@github.com:cloudfoundry/a1-env.git

- name: cat-env
  type: git
  source:
    branch: master
    private_key: {{cf_release_cat_env}}
    uri: git@github.com:cloudfoundry/cat-env.git

- name: smoke-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-smoke-tests.git

- name: cf-release-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-release.git

- name: cf-release-release-candidate
  type: git
  source:
    branch: release-candidate
    private_key: {{cf_release_private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: diego-release-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: diego-release
    access_token: {{release_integration_download_bot_access_token}}

- name: diego-cf-compatibility
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/diego-cf-compatibility
    private_key: {{diego_cf_compatibility_private_key}}

- name: diego-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release

- name: aws-build-url
  type: s3
  source:
    bucket: aws-build-url
    versioned_file: build_url
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: bosh-lite-build-url
  type: s3
  source:
    bucket: bosh-lite-build-url
    versioned_file: build_url
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: vsphere-build-url
  type: s3
  source:
    bucket: vsphere-build-url
    versioned_file: build_url
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: aws-director-version
  type: s3
  source:
    bucket: aws-director-version
    versioned_file: director_version
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: bosh-lite-director-version
  type: s3
  source:
    bucket: bosh-lite-director-version
    versioned_file: director_version
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: vsphere-director-version
  type: s3
  source:
    bucket: vsphere-director-version
    versioned_file: director_version
    access_key_id: {{s3_bucket_access_key_id}}
    secret_access_key: {{s3_bucket_secret_key}}

- name: garden-runc-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: cf-networking-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-networking-release

- name: grootfs-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/grootfs-release

- name: cflinuxfs2-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release

- name: bosh-lite
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-lite.git

- name: bosh-lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: vsphere-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-vsphere-esxi-ubuntu-trusty-go_agent

- name: vsphere-deployment
  type: bosh-deployment
  source:
    target: https://bosh.cat.wild.cf-app.com:25555
    username: {{vsphere_bosh_username}}
    password: {{vsphere_bosh_password}}
    deployment: cf-cat
    ignore_ssl: true

- name: vsphere-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.cat.wild.cf-app.com:25555
    username: {{vsphere_bosh_username}}
    password: {{vsphere_bosh_password}}
    deployment: cf-cat-diego
    ignore_ssl: true

- name: a1-deployment
  type: bosh-deployment
  source:
    target: https://bosh.a1.cf-app.com:25555
    username: {{a1_bosh_username}}
    password: {{a1_bosh_password}}
    deployment: cf-a1
    ignore_ssl: true

- name: bosh-lite-deployment
  type: bosh-deployment
  source:
    username: admin
    password: admin
    deployment: cf-warden
    ignore_ssl: true

- name: bosh-lite-deployment-diego
  type: bosh-deployment
  source:
    username: admin
    password: admin
    deployment: cf-warden-diego
    ignore_ssl: true

- name: a1-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.a1.cf-app.com:25555
    username: {{a1_bosh_username}}
    password: {{a1_bosh_password}}
    deployment: cf-a1-diego
    ignore_ssl: true

- name: acceptance-test-metadata
  type: build-metadata-resource

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: deliver-tracker-story
  type: tracker
  source:
    token: {{cf_mega_api_token}}
    project_id: "1382120"
    tracker_url: https://www.pivotaltracker.com

jobs:
- name: unit-tests
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - timeout: &timeout 4h
    do:
    - aggregate:
      - get: cf-release-develop
        trigger: true
        on_failure:
          task: cannot-bump
          file: runtime-ci/scripts/ci/cannot-bump/task.yml
          params:
            URL: &canibump-url canibump.cfapps.io
            TOKEN: {{canibump_token}}
            REASON: "could not clone cf-release, possibly due to unpushed submodule"
      - get: runtime-ci
    - task: run-cf-release-unit-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-cf-release-unit-tests/task.yml
      params:
        CF_RELEASE_DIR: 'cf-release-develop'
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "cf-release unit tests failed"

- name: branch-freshness
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: repo
        resource: cf-release-develop
        trigger: true
        params:
          submodules: none
      - get: runtime-ci
    - task: validate-branch-freshness
      privileged: true
      file: runtime-ci/scripts/ci/validate-branch-freshness/task.yml

- name: create-release
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: release-repo
        passed: [unit-tests]
        trigger: true
        resource: cf-release-develop
      - get: runtime-ci
    - task: create-release
      privileged: true
      file: runtime-ci/scripts/ci/create-release/task.yml
      on_failure:
        task: cannot-bump
        file: runtime-ci/scripts/ci/cannot-bump/task.yml
        params:
          URL: *canibump-url
          TOKEN: {{canibump_token}}
          REASON: "Could not create release tarball"
    - put: cf-release-tarball
      params:
        file: release-tarball/cf-*.tgz
    - task: can-bump
      file: runtime-ci/scripts/ci/can-bump/task.yml
      params:
        URL: canibump.cfapps.io
        TOKEN: {{canibump_token}}

- name: clean-all-the-boshes
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: runtime-ci
      - get: daily
        trigger: true
    - aggregate:
      - do:
        - aggregate:
          - task: write-target-file-runtime-ci
            file: runtime-ci/scripts/ci/write-target-file/task.yml
            params:
              TARGET: https://52.7.171.48:25555
            output_mapping:
              target-file-dir: runtime-ci-target-file
          - task: write-creds-runtime-ci
            file: runtime-ci/scripts/ci/write-creds/task.yml
            params:
              USERNAME: {{runtime_ci_username}}
              PASSWORD: {{runtime_ci_password}}
            output_mapping:
              username: runtime-ci-username
              password: runtime-ci-password
        - task: run-bosh-cleanup-runtime-ci
          privileged: true
          file: runtime-ci/scripts/ci/run-bosh-cleanup-1.0/task.yml
          input_mapping:
            target: runtime-ci-target-file
            username: runtime-ci-username
            password: runtime-ci-password
      - do:
        - aggregate:
          - task: write-target-file-vsphere
            file: runtime-ci/scripts/ci/write-target-file/task.yml
            tags: [vsphere]
            params:
              TARGET: https://bosh.cat.wild.cf-app.com
            output_mapping:
              target-file-dir: vsphere-target-file
          - task: write-creds-vsphere
            file: runtime-ci/scripts/ci/write-creds/task.yml
            tags: [vsphere]
            params:
              USERNAME: {{vsphere_bosh_username}}
              PASSWORD: {{vsphere_bosh_password}}
            output_mapping:
              username: vsphere-username
              password: vsphere-password
        - task: run-bosh-cleanup-vsphere
          privileged: true
          file: runtime-ci/scripts/ci/run-bosh-cleanup-1.0/task.yml
          tags: [vsphere]
          input_mapping:
            target: vsphere-target-file
            username: vsphere-username
            password: vsphere-password
      - do:
        - aggregate:
          - task: write-target-file-a1
            file: runtime-ci/scripts/ci/write-target-file/task.yml
            params:
              TARGET: https://bosh.a1.cf-app.com:25555
            output_mapping:
              target-file-dir: a1-target-file
          - task: write-creds-a1
            file: runtime-ci/scripts/ci/write-creds/task.yml
            params:
              USERNAME: {{a1_bosh_username}}
              PASSWORD: {{a1_bosh_password}}
            output_mapping:
              username: a1-username
              password: a1-password
        - task: run-bosh-cleanup-a1
          privileged: true
          file: runtime-ci/scripts/ci/run-bosh-cleanup-1.0/task.yml
          input_mapping:
            target: a1-target-file
            username: a1-username
            password: a1-password

- name: deploy-bosh-lite
  public: true
  serial_groups:
  - bosh-lite
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: bosh-lite
        tags: [ bosh-lite-aws ]
      - get: runtime-ci
        tags: [ bosh-lite-aws ]
      - get: cf-release-tarball
        passed: [generate-bosh-lite-manifests]
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: diego-release-tarball
        trigger: true
        passed: [ generate-bosh-lite-manifests ]
        tags: [ bosh-lite-aws ]
      - get: garden-runc-release-tarball
        trigger: true
        passed: [ generate-bosh-lite-manifests ]
        tags: [ bosh-lite-aws ]
      - get: cflinuxfs2-release-tarball
        trigger: true
        passed: [ generate-bosh-lite-manifests ]
        tags: [ bosh-lite-aws ]
      - get: cf-bosh-lite-manifest
        trigger: true
        passed: [ generate-bosh-lite-manifests ]
        tags: [ bosh-lite-aws ]
      - get: cf-bosh-lite-diego-manifest
        trigger: true
        passed: [ generate-bosh-lite-manifests ]
        tags: [ bosh-lite-aws ]
      - get: bosh-lite-stemcell
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: cf-release
        resource: cf-release-develop
        passed: [generate-bosh-lite-manifests]
        params:
          submodules: none
        tags: [ bosh-lite-aws ]
    - task: deprovision-bosh-lite
      tags: [ bosh-lite-aws ]
      privileged: true
      file: runtime-ci/scripts/ci/deprovision-bosh-lite/task.yml
      params:
        AWS_DEFAULT_REGION: {{bosh_lite_aws_default_region}}
        AWS_ACCESS_KEY_ID: {{bosh_lite_vagrant_user_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{bosh_lite_vagrant_user_secret_access_key}}
    - task: provision-bosh-lite
      tags: [ bosh-lite-aws ]
      privileged: true
      file: runtime-ci/scripts/ci/provision-bosh-lite/task.yml
      params:
        BOSH_AWS_ACCESS_KEY_ID: {{bosh_lite_vagrant_user_access_key_id}}
        BOSH_AWS_SECRET_ACCESS_KEY: {{bosh_lite_vagrant_user_secret_access_key}}
        BOSH_LITE_REGION: {{bosh_lite_aws_default_region}}
        BOSH_LITE_SECURITY_GROUP: {{bosh_lite_security_group}}
        BOSH_LITE_ELASTIC_IP: {{bosh_lite_elastic_ip}}
        BOSH_LITE_KEYPAIR: {{bosh_lite_keypair_name}}
        SSH_KEY: {{bosh_lite_private_key}}
    - task: write-target-file
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: {{bosh_lite_elastic_ip}}
    - put: bosh-lite-deployment
      tags: [ bosh-lite-aws ]
      params:
        target_file: target-file-dir/target
        manifest: cf-bosh-lite-manifest/deployment.yml
        stemcells: [bosh-lite-stemcell/*.tgz]
        releases: [ cf-release-tarball/*.tgz]
    - task: write-target-file
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: {{bosh_lite_elastic_ip}}
      output_mapping:
        target-file-dir: target-file-dir-diego
    - put: bosh-lite-deployment-diego
      tags: [ bosh-lite-aws ]
      params:
        target_file: target-file-dir-diego/target
        manifest: cf-bosh-lite-diego-manifest/diego-deployment.yml
        stemcells: [bosh-lite-stemcell/*.tgz]
        releases:
        - diego-release-tarball/*.tgz
        - garden-runc-release-tarball/*.tgz
        - cflinuxfs2-release-tarball/*.tgz
    - task: create-bosh-lite-creds
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/create-bosh-lite-creds/task.yml
      output_mapping:
        bosh-user-file-dir: bosh-username
        bosh-password-file-dir: bosh-password
    - task: write-target-file
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: {{bosh_lite_elastic_ip}}
      output_mapping:
        target-file-dir: bosh-target
    - task: write-director-version
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-director-version/task.yml
      output_mapping:
        director-version: bosh-lite
      params:
        BOSH_TARGET_FILE: target
        BOSH_USER_FILE: username
        BOSH_PASSWORD_FILE: password
    - put: bosh-lite-director-version
      tags: [ bosh-lite-aws ]
      params:
        file: bosh-lite/director_version
- name: bosh-lite-smoke-tests
  public: true
  serial_groups:
  - bosh-lite
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: bosh-lite-director-version
        passed: [ deploy-bosh-lite ]
        tags: [ bosh-lite-aws ]
      - get: bosh-lite-stemcell
        passed: [deploy-bosh-lite]
        params:
          tarball: false
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-bosh-lite]
        params:
          submodules: none
        tags: [ bosh-lite-aws ]
      - get: bosh-lite
        passed:
        - deploy-bosh-lite
        tags: [ bosh-lite-aws ]
      - get: runtime-ci
        tags: [ bosh-lite-aws ]
      - get: cf-release-tarball
        passed: [deploy-bosh-lite]
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: diego-release-tarball
        passed: [ deploy-bosh-lite ]
        trigger: true
        params:
          tarball: false
        tags: [ bosh-lite-aws ]
      - get: garden-runc-release-tarball
        passed: [ deploy-bosh-lite ]
        trigger: true
        params:
          tarball: false
        tags: [ bosh-lite-aws ]
      - get: cflinuxfs2-release-tarball
        passed: [ deploy-bosh-lite ]
        trigger: true
        params:
          tarball: false
        tags: [ bosh-lite-aws ]
      - get: cf-bosh-lite-manifest
        passed: [ deploy-bosh-lite ]
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: cf-bosh-lite-diego-manifest
        trigger: true
        passed: [ deploy-bosh-lite ]
        tags: [ bosh-lite-aws ]
    - task: create-bosh-lite-creds
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/create-bosh-lite-creds/task.yml
    - task: write-target-file
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: {{bosh_lite_elastic_ip}}
    - task: run-errand-bbl-smoke-test
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/run-errand-bbl/task.yml
      params:
        BOSH_USER_FILE: bosh-user-file-dir/username
        BOSH_PASSWORD_FILE: bosh-password-file-dir/password
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: smoke_tests
- name: bosh-lite-acceptance-tests
  public: true
  serial_groups:
  - bosh-lite
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: bosh-lite-director-version
        passed: [ bosh-lite-smoke-tests ]
        tags: [ bosh-lite-aws ]
      - get: bosh-lite-stemcell
        passed: [bosh-lite-smoke-tests]
        params:
          tarball: false
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: cf-release
        resource: cf-release-develop
        passed: [bosh-lite-smoke-tests]
        params:
          submodules: none
        tags: [ bosh-lite-aws ]
      - get: runtime-ci
        tags: [ bosh-lite-aws ]
      - get: bosh-lite
        passed:
        - bosh-lite-smoke-tests
        tags: [ bosh-lite-aws ]
      - get: cf-release-tarball
        passed: [bosh-lite-smoke-tests]
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: diego-release-tarball
        passed: [ bosh-lite-smoke-tests ]
        trigger: true
        params:
          tarball: false
        tags: [ bosh-lite-aws ]
      - get: garden-runc-release-tarball
        passed: [ bosh-lite-smoke-tests ]
        trigger: true
        params:
          tarball: false
        tags: [ bosh-lite-aws ]
      - get: cflinuxfs2-release-tarball
        passed: [ bosh-lite-smoke-tests ]
        trigger: true
        params:
          tarball: false
        tags: [ bosh-lite-aws ]
      - get: cf-bosh-lite-manifest
        passed: [ bosh-lite-smoke-tests ]
        trigger: true
        tags: [ bosh-lite-aws ]
      - get: cf-bosh-lite-diego-manifest
        trigger: true
        passed: [ bosh-lite-smoke-tests ]
        tags: [ bosh-lite-aws ]
    - task: write-target-file-api
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.bosh-lite.runtime-ci.cf-app.com
      output_mapping:
        target-file-dir: bosh-lite-api-target-file
    - task: enable-docker-diego-and-task-creation
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/enable-docker-diego-1-0/task.yml
      input_mapping:
        cf-target: bosh-lite-api-target-file
      params:
        CF_USER: {{bosh_lite_cf_user}}
        CF_PASSWORD: {{bosh_lite_cf_password}}
    - task: create-bosh-lite-creds
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/create-bosh-lite-creds/task.yml
    - task: write-target-file
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: {{bosh_lite_elastic_ip}}
    - task: run-errand-acceptance-tests
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/run-errand-bbl/task.yml
      params:
        BOSH_TARGET_FILE: target
        BOSH_USER_FILE: bosh-user-file-dir/username
        BOSH_PASSWORD_FILE: bosh-password-file-dir/password
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: acceptance_tests
    - put: acceptance-test-metadata
      tags: [ bosh-lite-aws ]
    - task: write-build-url
      tags: [ bosh-lite-aws ]
      file: runtime-ci/scripts/ci/write-build-url/task.yml
      output_mapping:
        build_url: bosh-lite
    - put: bosh-lite-build-url
      tags: [ bosh-lite-aws ]
      params:
        file: bosh-lite/build_url

- name: deploy-vsphere
  public: true
  serial_groups:
  - vsphere-deploy
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [generate-vsphere-manifests]
        trigger: true
        tags: [vsphere]
      - get: cf-release
        resource: cf-release-develop
        passed: [generate-vsphere-manifests]
        tags: [vsphere]
        params:
          submodules: none
      - get: runtime-ci
        tags: [vsphere]
      - get: vsphere-stemcell
        tags: [vsphere]
        trigger: true
      - get: cf-vsphere-manifest
        passed: [ generate-vsphere-manifests ]
        trigger: true
        tags: [vsphere]
      - get: cf-vsphere-diego-manifest
        passed: [ generate-vsphere-manifests ]
        trigger: true
        tags: [vsphere]
      - get: diego-release-tarball
        tags: [vsphere]
        trigger: true
        passed: [generate-vsphere-manifests]
      - get: garden-runc-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [ generate-vsphere-manifests ]
      - get: cflinuxfs2-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [ generate-vsphere-manifests ]
    - aggregate:
      - task: write-target-file-bosh-director
        file: runtime-ci/scripts/ci/write-target-file/task.yml
        output_mapping:
          target-file-dir: target
        params:
          TARGET: https://bosh.cat.wild.cf-app.com
      - task: write-creds-bosh
        file: runtime-ci/scripts/ci/write-creds/task.yml
        params:
          USERNAME: {{vsphere_bosh_username}}
          PASSWORD: {{vsphere_bosh_password}}
    - aggregate:
      - task: delete-deployment-cf
        privileged: true
        file: runtime-ci/scripts/ci/delete-deployment/task.yml
        tags: [vsphere]
        params:
          DEPLOYMENT_NAME: cf-cat
      - task: delete-deployment-diego
        privileged: true
        file: runtime-ci/scripts/ci/delete-deployment/task.yml
        tags: [vsphere]
        params:
          DEPLOYMENT_NAME: cf-cat-diego
    - put: vsphere-deployment
      tags: [vsphere]
      params:
        manifest: cf-vsphere-manifest/deployment.yml
        stemcells: [vsphere-stemcell/*.tgz]
        releases:
          - cf-release-tarball/*.tgz
    - put: vsphere-diego-deployment
      tags: [vsphere]
      params:
        manifest: cf-vsphere-diego-manifest/diego-deployment.yml
        stemcells: [vsphere-stemcell/*.tgz]
        releases:
        - diego-release-tarball/*.tgz
        - garden-runc-release-tarball/*.tgz
        - cflinuxfs2-release-tarball/*.tgz
    - task: write-director-version
      file: runtime-ci/scripts/ci/write-director-version/task.yml
      tags: [vsphere]
      input_mapping:
        bosh-target: target
        bosh-username: username
        bosh-password: password
      output_mapping:
        director-version: vsphere
      params:
        BOSH_TARGET_FILE: target
        BOSH_USER_FILE: username
        BOSH_PASSWORD_FILE: password
    - put: vsphere-director-version
      tags: [vsphere]
      params:
        file: vsphere/director_version

- name: vsphere-smoke-tests
  public: true
  serial_groups:
  - vsphere-deploy
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: vsphere-director-version
        passed: [ deploy-vsphere ]
      - get: runtime-ci
      - get: manifest
        resource: cf-vsphere-manifest
        trigger: true
        passed:
        - deploy-vsphere
      - get: cf-vsphere-diego-manifest
        passed: [ deploy-vsphere ]
        trigger: true
        tags: [vsphere]
      - get: cf-release
        resource: cf-release-develop
        params:
          submodules: none
        passed: [deploy-vsphere]
        trigger: true
        tags: [vsphere]
      - get: cf-release-tarball
        trigger: true
        params:
          tarball: false
        tags: [vsphere]
        passed: [deploy-vsphere]
      - get: vsphere-stemcell
        tags: [vsphere]
        params:
          tarball: false
        passed: [deploy-vsphere]
        trigger: true
      - get: diego-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [deploy-vsphere]
        params:
          tarball: false
      - get: garden-runc-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [deploy-vsphere]
        params:
          tarball: false
      - get: cflinuxfs2-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [deploy-vsphere]
        params:
          tarball: false
    - task: run-errand-smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      tags: [vsphere]
      params:
        BOSH_DIRECTOR: https://bosh.cat.wild.cf-app.com:25555
        BOSH_USER: {{vsphere_bosh_username}}
        BOSH_PASSWORD: {{vsphere_bosh_password}}
        DEPLOYMENT_NAME: cf-cat
        ERRAND_NAME: smoke_tests

- name: vsphere-acceptance-tests
  public: true
  serial_groups:
  - vsphere-deploy
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: vsphere-director-version
        passed: [ vsphere-smoke-tests ]
      - get: cf-vsphere-manifest
        passed: [ vsphere-smoke-tests ]
        trigger: true
        tags: [vsphere]
      - get: cf-vsphere-diego-manifest
        passed: [ vsphere-smoke-tests ]
        trigger: true
        tags: [vsphere]
      - get: runtime-ci
        tags: [ vsphere ]
      - get: cf-release
        resource: cf-release-develop
        passed: [vsphere-smoke-tests]
        trigger: true
        tags: [vsphere]
        params:
          submodules: [ 'src/github.com/cloudfoundry/cf-acceptance-tests' ]
      - get: cf-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [vsphere-smoke-tests]
      - get: vsphere-stemcell
        tags: [vsphere]
        params:
          tarball: false
        passed: [vsphere-smoke-tests]
        trigger: true
      - get: diego-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [vsphere-smoke-tests]
        params:
          tarball: false
      - get: garden-runc-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [vsphere-smoke-tests]
        params:
          tarball: false
      - get: cflinuxfs2-release-tarball
        trigger: true
        tags: [vsphere]
        passed: [vsphere-smoke-tests]
        params:
          tarball: false
      - get: cat-env
      - get: cats-concourse-task
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.cat.wild.cf-app.com
    - task: enable-docker-diego-and-task-creation
      tags: [ vsphere ]
      file: runtime-ci/scripts/ci/enable-docker-diego-1-0/task.yml
      input_mapping:
        cf-target: target-file-dir
      params:
        CF_USER: {{vsphere_cf_username}}
        CF_PASSWORD: {{vsphere_cf_password}}
    - task: cats-from-cf-release
      file: cats-concourse-task/cats-from-cf-release/task.yml
    - task: run-cats
      input_mapping:
        integration-config: cat-env
      file: cats-concourse-task/task.yml
      tags: [ vsphere ]
    - aggregate:
      - put: acceptance-test-metadata
      - task: write-target-file-bosh-director
        file: runtime-ci/scripts/ci/write-target-file/task.yml
        output_mapping:
          target-file-dir: bosh-target
        params:
          TARGET: https://bosh.cat.wild.cf-app.com
      - task: write-creds-bosh
        file: runtime-ci/scripts/ci/write-creds/task.yml
        params:
          USERNAME: {{vsphere_bosh_username}}
          PASSWORD: {{vsphere_bosh_password}}
        output_mapping:
          username: bosh-username
          password: bosh-password
    - task: write-build-url
      file: runtime-ci/scripts/ci/write-build-url/task.yml
      output_mapping:
        build_url: vsphere
    - put: vsphere-build-url
      params:
        file: vsphere/build_url

- name: deploy-aws
  public: true
  serial: true
  serial_groups:
  - cf-a1-bosh-deployment-lock
  - cf-deploy-and-diego-cats-lock
  - diego-deploy-and-diego-cats-lock
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: cf-release-tarball
        passed: [generate-aws-manifests]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [generate-aws-manifests]
        params:
          submodules: none
      - get: runtime-ci
      - get: aws-stemcell
        trigger: true
      - get: cf-a1-manifest
        trigger: true
        passed: [ generate-aws-manifests ]
      - get: cf-a1-diego-manifest
        passed: [ generate-aws-manifests ]
        trigger: true
      - get: diego-release-tarball
        trigger: true
        passed: [ generate-aws-manifests ]
      - get: garden-runc-release-tarball
        trigger: true
        passed: [ generate-aws-manifests ]
      - get: cf-networking-release-tarball
        trigger: true
        passed: [ generate-aws-manifests ]
      - get: cflinuxfs2-release-tarball
        trigger: true
        passed: [ generate-aws-manifests ]
      - get: grootfs-release-tarball
        passed: [ generate-aws-manifests ]
        trigger: true
    - put: a1-deployment
      params:
        manifest: cf-a1-manifest/deployment.yml
        stemcells: [aws-stemcell/*.tgz]
        releases:
        - cf-release-tarball/*.tgz
    - put: a1-diego-deployment
      params:
        manifest: cf-a1-diego-manifest/diego-deployment.yml
        releases:
        - diego-release-tarball/*.tgz
        - garden-runc-release-tarball/*.tgz
        - cflinuxfs2-release-tarball/*.tgz
        - cf-networking-release-tarball/*.tgz
        - grootfs-release-tarball/*.tgz
        stemcells: [aws-stemcell/*.tgz]
    - aggregate:
      - task: write-target-file-bosh-director
        file: runtime-ci/scripts/ci/write-target-file/task.yml
        output_mapping:
          target-file-dir: target
        params:
          TARGET: https://bosh.a1.cf-app.com
      - task: write-creds-bosh
        file: runtime-ci/scripts/ci/write-creds/task.yml
        params:
          USERNAME: {{a1_bosh_username}}
          PASSWORD: {{a1_bosh_password}}
    - task: write-director-version
      file: runtime-ci/scripts/ci/write-director-version/task.yml
      input_mapping:
        bosh-target: target
        bosh-username: username
        bosh-password: password
      output_mapping:
        director-version: aws
      params:
        BOSH_TARGET_FILE: target
        BOSH_USER_FILE: username
        BOSH_PASSWORD_FILE: password
    - put: aws-director-version
      params:
        file: aws/director_version

- name: aws-smoke-tests
  public: true
  serial: true
  serial_groups:
  - cf-a1-bosh-deployment-lock
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: aws-director-version
        passed: [ deploy-aws ]
      - get: manifest
        resource: cf-a1-manifest
        passed: [ deploy-aws ]
        trigger: true
      - get: cf-a1-diego-manifest
        passed: [deploy-aws]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [deploy-aws]
        params:
          submodules: none
      - get: cf-release-tarball
        passed: [deploy-aws]
        trigger: true
      - get: runtime-ci
      - get: aws-stemcell
        passed: [ deploy-aws]
        params:
          tarball: false
        trigger: true
      - get: diego-release-tarball
        passed: [ deploy-aws ]
        trigger: true
        params:
          tarball: false
      - get: garden-runc-release-tarball
        trigger: true
        passed: [ deploy-aws ]
        params:
          tarball: false
      - get: cflinuxfs2-release-tarball
        trigger: true
        passed: [ deploy-aws ]
        params:
          tarball: false
      - get: cf-networking-release-tarball
        trigger: true
        passed: [ deploy-aws ]
        params:
          tarball: false
      - get: grootfs-release-tarball
        trigger: true
        passed: [ deploy-aws ]
        params:
          tarball: false
    - task: run-errand-smoke-tests
      privileged: true
      file: runtime-ci/scripts/ci/run-errand/task.yml
      params:
        BOSH_DIRECTOR: https://bosh.a1.cf-app.com:25555
        BOSH_USER: {{a1_bosh_username}}
        BOSH_PASSWORD: {{a1_bosh_password}}
        DEPLOYMENT_NAME: cf-a1
        ERRAND_NAME: smoke_tests

- name: generate-aws-manifests
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: a1-env
      trigger: true
    - get: diego-release-github-release
      params:
        globs: [ none ]
        include_source_tarball: true
    - get: runtime-ci
    - get: cf-release-develop
      trigger: true
      passed: [ create-release ]
      params:
        submodules: none
    - get: cf-release-tarball
      trigger: true
      passed: [ create-release ]
    - get: diego-release-tarball
      trigger: true
      params:
        tarball: false
    - get: garden-runc-release-tarball
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-release-tarball
      trigger: true
      params:
        tarball: false
    - get: cf-networking-release-tarball
      trigger: true
      params:
        tarball: false
    - get: grootfs-release-tarball
      trigger: true
      params:
        tarball: false
  - task: generate-release-manifest-cf
    file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
    input_mapping:
      release-repo: cf-release-develop
      stubs-repo: a1-env
    params:
      INFRASTRUCTURE: aws
      STUBS_PATH: stubs/cf/*.yml
  - task: untar-diego-release
    file: runtime-ci/scripts/ci/untar-release/task.yml
    input_mapping:
      release-tarball: diego-release-github-release
    output_mapping:
      untarred-release: diego-release
    params:
      RELEASE_TARBALL_PATH: source.tar.gz
  - task: create-diego-iaas-settings
    file: runtime-ci/scripts/ci/create-diego-iaas-settings/task.yml
    input_mapping:
      deployments: a1-env
      diego-release: diego-release
    params:
      INFRASTRUCTURE: aws
  - task: create-diego-manifest
    file: runtime-ci/scripts/ci/create-diego-manifest-with-config/task.yml
    input_mapping:
      diego-release: diego-release
      cf-manifest: manifest
      config: a1-env
    params:
      PROPERTY_OVERRIDES_PATH: stubs/diego/property-overrides.yml
      INSTANCE_COUNT_OVERRIDES_PATH: stubs/diego/instance-count-overrides.yml
      RELEASE_VERSIONS_PATH: stubs/diego/release-versions.yml
      CF_NETWORKING_OVERRIDES_PATH: stubs/diego/cf-networking.yml
      USE_ETCD: false
      USE_MYSQL: true
      DIEGO_MYSQL_OVERRIDES_PATH: deployments/a1-mysql-standalone-stubs/diego-property-overrides.yml
      USE_GROOTFS: true
  - aggregate:
    - put: cf-a1-manifest
      params:
        file: manifest/deployment.yml
    - put: cf-a1-diego-manifest
      params:
        file: generated-diego-manifest/diego-deployment.yml

- name: generate-bosh-lite-manifests
  public: true
  serial_groups:
  - bosh-lite
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: diego-release-github-release
      params:
        globs: [ none ]
        include_source_tarball: true
    - get: runtime-ci
    - get: cf-release-develop
      trigger: true
      passed: [ create-release ]
      params:
        submodules: none
    - get: cf-release-tarball
      trigger: true
      passed: [ create-release ]
    - get: diego-release-tarball
      trigger: true
      params:
        tarball: false
    - get: garden-runc-release-tarball
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-release-tarball
      trigger: true
      params:
        tarball: false
  - task: create-bosh-lite-stub
    file: runtime-ci/scripts/ci/create-bosh-lite-stub/task.yml
    params:
      BOSH_LITE_IP: {{bosh_lite_elastic_ip}}
      SAML_SERVICE_PROVIDER_KEY: {{saml_service_provider_key}}
      SAML_SERVICE_PROVIDER_CERTIFICATE: {{saml_service_provider_certificate}}
  - task: generate-release-manifest-cf
    file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
    input_mapping:
      release-repo: cf-release-develop
      stubs-repo: bosh-lite-stub
    params:
      INFRASTRUCTURE: bosh-lite
      STUBS_PATH: stub.yml
  - task: untar-diego-release
    file: runtime-ci/scripts/ci/untar-release/task.yml
    input_mapping:
      release-tarball: diego-release-github-release
    output_mapping:
      untarred-release: diego-release
    params:
      RELEASE_TARBALL_PATH: source.tar.gz
  - task: extend-bosh-lite-diego-stub
    file: runtime-ci/scripts/ci/extend-bosh-lite-diego-stub/task.yml
    input_mapping:
      bosh-lite-stub: diego-release
    params:
      BOSH_LITE_STUB_PATH: manifest-generation/bosh-lite-stubs/property-overrides.yml
      EXTENDED_BOSH_LITE_STUB_PATH: property-overrides.yml
  - task: create-diego-manifest
    file: runtime-ci/scripts/ci/create-diego-manifest/task.yml
    input_mapping:
      diego-release: diego-release
      cf-manifest: manifest
      property-overrides: extended-bosh-lite-stub
      instance-count-overrides: diego-release
      release-versions: diego-release
      iaas-settings: diego-release
    params:
      PROPERTY_OVERRIDES_PATH: property-overrides.yml
      INSTANCE_COUNT_OVERRIDES_PATH: manifest-generation/bosh-lite-stubs/instance-count-overrides.yml
      RELEASE_VERSIONS_PATH: manifest-generation/bosh-lite-stubs/release-versions.yml
      IAAS_SETTINGS_PATH: manifest-generation/bosh-lite-stubs/iaas-settings.yml
  - aggregate:
    - put: cf-bosh-lite-manifest
      params:
        file: manifest/deployment.yml
    - put: cf-bosh-lite-diego-manifest
      params:
        file: generated-diego-manifest/diego-deployment.yml

- name: generate-vsphere-manifests
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cat-env
      tags: [vsphere]
      trigger: true
    - get: diego-release-github-release
      tags: [vsphere]
      params:
        globs: [ none ]
        include_source_tarball: true
    - get: runtime-ci
      tags: [vsphere]
    - get: cf-release-develop
      tags: [vsphere]
      trigger: true
      passed: [ create-release ]
      params:
        submodules: none
    - get: cf-release-tarball
      tags: [vsphere]
      trigger: true
      passed: [ create-release ]
    - get: diego-release-tarball
      tags: [vsphere]
      trigger: true
      params:
        tarball: false
    - get: garden-runc-release-tarball
      tags: [vsphere]
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-release-tarball
      tags: [vsphere]
      trigger: true
      params:
        tarball: false
  - task: generate-release-manifest-cf
    tags: [vsphere]
    file: runtime-ci/scripts/ci/generate-release-manifest/task.yml
    input_mapping:
      release-repo: cf-release-develop
      stubs-repo: cat-env
    params:
      INFRASTRUCTURE: vsphere
      STUBS_PATH: stubs/cf/*.yml
  - task: untar-diego-release
    tags: [vsphere]
    file: runtime-ci/scripts/ci/untar-release/task.yml
    input_mapping:
      release-tarball: diego-release-github-release
    output_mapping:
      untarred-release: diego-release
    params:
      RELEASE_TARBALL_PATH: source.tar.gz
  - task: create-diego-manifest
    tags: [vsphere]
    file: runtime-ci/scripts/ci/create-diego-manifest/task.yml
    input_mapping:
      diego-release: diego-release
      cf-manifest: manifest
      iaas-settings: cat-env
      property-overrides: cat-env
      instance-count-overrides: cat-env
      release-versions: cat-env
    params:
      PROPERTY_OVERRIDES_PATH: stubs/diego/property-overrides.yml
      INSTANCE_COUNT_OVERRIDES_PATH: stubs/diego/instance-count-overrides.yml
      RELEASE_VERSIONS_PATH: stubs/diego/release-versions.yml
      IAAS_SETTINGS_PATH: stubs/diego/iaas-settings.yml
      DIEGO_SQL_RESOURCE_PATH: property-overrides/stubs/diego/postgres-overrides.yml
  - aggregate:
    - put: cf-vsphere-manifest
      tags: [vsphere]
      params:
        file: manifest/deployment.yml
    - put: cf-vsphere-diego-manifest
      tags: [vsphere]
      params:
        file: generated-diego-manifest/diego-deployment.yml

- name: aws-acceptance-tests
  public: true
  serial_groups:
  - diego-deploy-and-diego-cats-lock
  - cf-deploy-and-diego-cats-lock
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: aws-director-version
        passed: [ aws-smoke-tests ]
      - get: cf-a1-manifest
        trigger: true
        passed: [ aws-smoke-tests ]
      - get: cf-a1-diego-manifest
        passed: [ aws-smoke-tests ]
        trigger: true
      - get: cf-release
        resource: cf-release-develop
        passed: [aws-smoke-tests]
        params:
          submodules: [ 'src/github.com/cloudfoundry/cf-acceptance-tests' ]
      - get: cf-release-tarball
        passed: [aws-smoke-tests]
        trigger: true
      - get: runtime-ci
      - get: aws-stemcell
        passed: [ aws-smoke-tests ]
        params:
          tarball: false
        trigger: true
      - get: diego-release-tarball
        passed: [ aws-smoke-tests ]
        trigger: true
      - get: garden-runc-release-tarball
        trigger: true
        passed: [ aws-smoke-tests ]
        params:
          tarball: false
      - get: cflinuxfs2-release-tarball
        trigger: true
        passed: [ aws-smoke-tests ]
        params:
          tarball: false
      - get: cf-networking-release-tarball
        trigger: true
        passed: [ aws-smoke-tests ]
        params:
          tarball: false
      - get: grootfs-release-tarball
        trigger: true
        passed: [ aws-smoke-tests ]
        params:
          tarball: false
      - get: a1-env
      - get: cats-concourse-task
    - task: write-target-file-api
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.a1.cf-app.com
    - task: enable-docker-diego-and-task-creation
      file: runtime-ci/scripts/ci/enable-docker-diego-1-0/task.yml
      input_mapping:
        cf-target: target-file-dir
      params:
        CF_USER: {{a1_admin_username}}
        CF_PASSWORD: {{a1_admin_password}}
    - task: cats-from-cf-release
      file: cats-concourse-task/cats-from-cf-release/task.yml
    - task: run-cats
      input_mapping:
        integration-config: a1-env
      file: cats-concourse-task/task.yml
      params:
        NODES: 25
    - aggregate:
      - put: acceptance-test-metadata
      - task: write-target-file-bosh-director
        file: runtime-ci/scripts/ci/write-target-file/task.yml
        output_mapping:
          target-file-dir: bosh-target
        params:
          TARGET: https://bosh.a1.cf-app.com/
      - task: write-creds-bosh
        file: runtime-ci/scripts/ci/write-creds/task.yml
        params:
          USERNAME: {{a1_bosh_username}}
          PASSWORD: {{a1_bosh_password}}
        output_mapping:
          username: bosh-username
          password: bosh-password
    - task: write-build-url
      file: runtime-ci/scripts/ci/write-build-url/task.yml
      output_mapping:
        build_url: aws
    - put: aws-build-url
      params:
        file: aws/build_url

- name: rc
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: runtime-ci
      - get: diego-cf-compatibility
      - get: cf-release
        resource: cf-release-develop
        passed:
        - bosh-lite-acceptance-tests
        - aws-acceptance-tests
        - vsphere-acceptance-tests
        trigger: true
        params:
          submodules: none
      - get: bosh-lite
        passed:
        - bosh-lite-acceptance-tests
      - get: bosh-lite-stemcell
        passed:
        - bosh-lite-acceptance-tests
        trigger: true
      - get: vsphere-stemcell
        passed:
        - vsphere-acceptance-tests
        trigger: true
      - get: aws-stemcell
        passed:
        - aws-acceptance-tests
        trigger: true
      - get: diego-release-tarball
        passed:
        - aws-acceptance-tests
        - bosh-lite-acceptance-tests
        - vsphere-acceptance-tests
        trigger: true
        params:
          tarball: false
      - get: garden-runc-release-tarball
        passed:
        - aws-acceptance-tests
        - bosh-lite-acceptance-tests
        - vsphere-acceptance-tests
        trigger: true
        params:
          tarball: false
      - get: cflinuxfs2-release-tarball
        trigger: true
        passed:
        - aws-acceptance-tests
        - bosh-lite-acceptance-tests
        - vsphere-acceptance-tests
        params:
          tarball: false
      - get: cf-networking-release-tarball
        trigger: true
        passed:
        - aws-acceptance-tests
        params:
          tarball: false
      - get: grootfs-release-tarball
        trigger: true
        passed:
        - aws-acceptance-tests
        params:
          tarball: false
      - get: vsphere-director-version
        passed: [ vsphere-acceptance-tests ]
      - get: aws-director-version
        passed: [ aws-acceptance-tests ]
      - get: bosh-lite-director-version
        passed: [ bosh-lite-acceptance-tests ]
      - get: vsphere-build-url
        passed: [ vsphere-acceptance-tests ]
      - get: aws-build-url
        passed: [ aws-acceptance-tests ]
      - get: bosh-lite-build-url
        passed: [ bosh-lite-acceptance-tests ]
    - aggregate:
      - put: cf-release-release-candidate
        params:
          repository: cf-release
      - do:
        - task: record-compatible-versions
          file: runtime-ci/scripts/ci/record-compatible-versions/task.yml
        - put: diego-cf-compatibility
          params:
            repository: updated-diego-cf-compatibility
            rebase: true
      - put: deliver-tracker-story
        params:
          repos:
          - cf-release

- name: a1-runtime-smokes
  public: true
  serial: true
  build_logs_to_retain: 1000
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: periodically
        trigger: true
      - get: smoke-tests
      - get: runtime-ci
    - aggregate:
      - task: run-smoketests-1
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params: &aws-smoke-params
          SUITE_NAME: RUNTIME-SMOKE
          API: https://api.a1.cf-app.com
          APPS_DOMAIN: a1-app.cf-app.com
          SKIP_SSL_VALIDATION: true
          CF_USER: {{a1_runtime_smokes_username}}
          CF_PASSWORD: {{a1_runtime_smokes_password}}
          ORG: runtime-smoke-tests
          SPACE: concourse-runtime-smoke-tests-1
          USE_EXISTING_ORG: true
          ARGS: '--focus=Runtime:'
      - task: run-smoketests-2
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-2
      - task: run-smoketests-3
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-3
      - task: run-smoketests-4
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-4
      - task: run-smoketests-5
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-5
      - task: run-smoketests-6
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-6
      - task: run-smoketests-7
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-7
      - task: run-smoketests-8
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-8
      - task: run-smoketests-9
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-9
      - task: run-smoketests-10
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-10
      - task: run-smoketests-11
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests11
      - task: run-smoketests-12
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-12
      - task: run-smoketests-13
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-13
      - task: run-smoketests-14
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-14
      - task: run-smoketests-15
        file: runtime-ci/scripts/ci/run-smoketests/task.yml
        params:
          <<: *aws-smoke-params
          SPACE: concourse-runtime-smoke-tests-15


- name: a1-loggregator-smokes
  public: true
  serial: true
  build_logs_to_retain: 1000
  plan:
  - timeout: *timeout
    do:
    - aggregate:
      - get: periodically
        trigger: true
      - get: smoke-tests
      - get: runtime-ci
    - task: run-smoketests
      file: runtime-ci/scripts/ci/run-smoketests/task.yml
      params:
        SUITE_NAME: RUNTIME-SMOKE
        API: https://api.a1.cf-app.com
        APPS_DOMAIN: a1-app.cf-app.com
        SKIP_SSL_VALIDATION: true
        CF_USER: {{a1_runtime_smokes_username}}
        CF_PASSWORD: {{a1_runtime_smokes_password}}
        ORG: runtime-smoke-tests
        SPACE: concourse-loggregator-smoke-tests
        USE_EXISTING_ORG: true
        ARGS: '--focus=Loggregator:'
