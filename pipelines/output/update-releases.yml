## ======================================================================
## GENERATED FILE. DO NOT EDIT
## ======================================================================

---
## ======================================================================
##   __ _ _ __ ___  _   _ _ __  ___
##  / _` | '__/ _ \| | | | '_ \/ __|
## | (_| | | | (_) | |_| | |_) \__ \
##  \__, |_|  \___/ \__,_| .__/|___/
##  |___/                |_|
## ======================================================================

groups:
- name: update-base-stemcells-and-releases
  jobs:
  - update-stemcell-and-recompile-releases

  - update-binary-buildpack

  - update-capi

  - update-cf-mysql

  - update-cf-networking

  - update-cf-smoke-tests

  - update-cf-syslog-drain

  - update-cflinuxfs2

  - update-consul

  - update-diego

  - update-dotnet-core-buildpack

  - update-garden-runc

  - update-go-buildpack

  - update-java-buildpack

  - update-loggregator

  - update-nats

  - update-nodejs-buildpack

  - update-php-buildpack

  - update-python-buildpack

  - update-routing

  - update-ruby-buildpack

  - update-staticfile-buildpack

  - update-statsd-injector

  - update-uaa

- name: update-ops-releases
  jobs:

  - update-backup-and-restore-sdk

  - update-bpm

  - update-broker-registrar

  - update-cf-app-sd

  - update-credhub

  - update-haproxy

  - update-mapfs

  - update-nfs-volume

  - update-postgres

  - update-silk

  - update-syslog

  - update-bosh-dns

  - update-bits-service

  - update-log-cache

  - update-pxc

  - update-windows-syslog

- name: update-windows-stemcells-and-releases
  jobs:

  - update-windows-stemcell
  - update-windows-2012-releases

  - update-windows2016-stemcell
  - update-windows-2016-releases

  - update-windows-2016-offline-releases

- name: infrastructure
  jobs:
  - setup-infrastructure-compilation
  - destroy-infrastructure-compilation
  - run-bosh-cleanup-compilation

## ======================================================================
##                                           _
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  | |_ _   _ _ __   ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \ | __| | | | '_ \ / _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/ | |_| |_| | |_) |  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___|  \__|\__, | .__/ \___||___/
##                                               |___/|_|
## ======================================================================

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

## ======================================================================
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___||___/
## ======================================================================

resources:
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_private_key))
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: greengrass-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/greengrass-env.git
    private_key: ((greengrass_env_deploy_key))
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent
- name: windows-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2012R2-go_agent
- name: windows2016-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2016-go_agent
- name: garden-windows-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-windows-bosh-release
- name: hwc-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/hwc-buildpack-release
- name: windows-utilities-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows-utilities-release
- name: winc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/winc-release
- name: windows2016fs-online-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows2016fs-online-release
- name: windows2016fs-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: windows2016fs-release
    access_token: ((release_integration_download_bot_access_token))

- name: binary-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/binary-buildpack-release
- name: capi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/capi-release
- name: cf-mysql-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release
- name: cf-networking-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-networking-release
- name: cf-smoke-tests-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-smoke-tests-release
- name: cf-syslog-drain-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-syslog-drain-release
- name: cflinuxfs2-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release
- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release
- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release
- name: dotnet-core-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/dotnet-core-buildpack-release
- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: go-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/go-buildpack-release
- name: java-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-buildpack-release
- name: loggregator-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator-release
- name: nats-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nats-release
- name: nodejs-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nodejs-buildpack-release
- name: php-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/php-buildpack-release
- name: python-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/python-buildpack-release
- name: routing-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
- name: ruby-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/ruby-buildpack-release
- name: staticfile-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/staticfile-buildpack-release
- name: statsd-injector-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/statsd-injector-release
- name: uaa-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release

- name: backup-and-restore-sdk-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/backup-and-restore-sdk-release
- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bpm-release
- name: broker-registrar-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/broker-registrar-boshrelease
- name: cf-app-sd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-app-sd-release
- name: credhub-release
  type: bosh-io-release
  source:
    repository: pivotal-cf/credhub-release
- name: haproxy-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/haproxy-boshrelease
- name: mapfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/mapfs-release
- name: nfs-volume-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nfs-volume-release
- name: postgres-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
- name: silk-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/silk-release
- name: syslog-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/syslog-release
- name: bosh-dns-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-dns-release
- name: bits-service-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bits-service-release
- name: log-cache-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/log-cache-release
- name: pxc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/pxc-release
- name: windows-syslog-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/windows-syslog-release

- name: binary-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: binary-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: capi-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: capi-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-mysql-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-mysql-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-networking-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-networking-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-smoke-tests-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-smoke-tests-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cf-syslog-drain-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cf-syslog-drain-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: cflinuxfs2-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: cflinuxfs2-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: consul-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: consul-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: diego-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: diego-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: dotnet-core-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: dotnet-core-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: garden-runc-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: garden-runc-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: go-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: go-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: java-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: java-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: loggregator-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: loggregator-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: nats-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: nats-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: nodejs-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: nodejs-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: php-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: php-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: python-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: python-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: routing-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: routing-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: ruby-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: ruby-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: staticfile-buildpack-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: staticfile-buildpack-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: statsd-injector-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: statsd-injector-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
- name: uaa-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: uaa-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz

- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h

## ======================================================================
##    _       _
##   (_) ___ | |__  ___
##   | |/ _ \| '_ \/ __|
##   | | (_) | |_) \__ \
##  _/ |\___/|_.__/|___/
## |__/
## ======================================================================

jobs:

- name: update-binary-buildpack
  serial_groups:
  - update-binary-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: binary-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-binary-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: binary-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: binary-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: binary-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: binary-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: binary-buildpack
  - put: binary-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-capi
  serial_groups:
  - update-capi
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: capi-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-capi
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: capi-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: capi

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: capi
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-capi

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: capi
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: capi-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: capi
  - put: capi-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-cf-mysql
  serial_groups:
  - update-cf-mysql
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-mysql-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-mysql
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-mysql-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-mysql

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-mysql
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-mysql

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-mysql
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: cf-mysql-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-mysql
  - put: cf-mysql-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-cf-networking
  serial_groups:
  - update-cf-networking
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-networking-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-networking
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-networking-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-networking

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-networking
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-networking

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-networking
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: cf-networking-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-networking
  - put: cf-networking-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-cf-smoke-tests
  serial_groups:
  - update-cf-smoke-tests
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-smoke-tests-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-smoke-tests
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-smoke-tests-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-smoke-tests

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-smoke-tests
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-smoke-tests

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-smoke-tests
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: cf-smoke-tests-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-smoke-tests
  - put: cf-smoke-tests-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-cf-syslog-drain
  serial_groups:
  - update-cf-syslog-drain
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-syslog-drain-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-syslog-drain
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-syslog-drain-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-syslog-drain

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cf-syslog-drain
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-syslog-drain

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cf-syslog-drain
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: cf-syslog-drain-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cf-syslog-drain
  - put: cf-syslog-drain-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-cflinuxfs2
  serial_groups:
  - update-cflinuxfs2
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cflinuxfs2-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cflinuxfs2
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cflinuxfs2-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cflinuxfs2

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: cflinuxfs2
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cflinuxfs2

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: cflinuxfs2
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: cflinuxfs2-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: cflinuxfs2
  - put: cflinuxfs2-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-consul
  serial_groups:
  - update-consul
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: consul-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-consul
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: consul-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: consul

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: consul
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-consul

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: consul
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: consul-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: consul
  - put: consul-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-diego
  serial_groups:
  - update-diego
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: diego-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-diego
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: diego-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: diego

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: diego
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-diego

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: diego
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: diego-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: diego
  - put: diego-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-dotnet-core-buildpack
  serial_groups:
  - update-dotnet-core-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: dotnet-core-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-dotnet-core-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: dotnet-core-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: dotnet-core-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: dotnet-core-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: dotnet-core-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: dotnet-core-buildpack
  - put: dotnet-core-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-garden-runc
  serial_groups:
  - update-garden-runc
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: garden-runc-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-garden-runc
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: garden-runc-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: garden-runc

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: garden-runc
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-garden-runc

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: garden-runc
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: garden-runc-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: garden-runc
  - put: garden-runc-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-go-buildpack
  serial_groups:
  - update-go-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: go-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-go-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: go-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: go-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: go-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: go-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: go-buildpack
  - put: go-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-java-buildpack
  serial_groups:
  - update-java-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: java-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-java-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: java-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: java-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: java-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: java-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: java-buildpack
  - put: java-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-loggregator
  serial_groups:
  - update-loggregator
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: loggregator-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-loggregator
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: loggregator-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: loggregator

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: loggregator
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-loggregator

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: loggregator
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: loggregator-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: loggregator
  - put: loggregator-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-nats
  serial_groups:
  - update-nats
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: nats-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-nats
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: nats-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: nats

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: nats
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-nats

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: nats
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: nats-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: nats
  - put: nats-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-nodejs-buildpack
  serial_groups:
  - update-nodejs-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: nodejs-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-nodejs-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: nodejs-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: nodejs-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: nodejs-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: nodejs-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: nodejs-buildpack
  - put: nodejs-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-php-buildpack
  serial_groups:
  - update-php-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: php-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-php-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: php-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: php-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: php-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: php-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: php-buildpack
  - put: php-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-python-buildpack
  serial_groups:
  - update-python-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: python-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-python-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: python-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: python-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: python-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: python-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: python-buildpack
  - put: python-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-routing
  serial_groups:
  - update-routing
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: routing-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-routing
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: routing-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: routing

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: routing
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-routing

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: routing
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: routing-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: routing
  - put: routing-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-ruby-buildpack
  serial_groups:
  - update-ruby-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: ruby-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-ruby-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: ruby-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: ruby-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: ruby-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: ruby-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: ruby-buildpack
  - put: ruby-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-staticfile-buildpack
  serial_groups:
  - update-staticfile-buildpack
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: staticfile-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-staticfile-buildpack
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: staticfile-buildpack-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: staticfile-buildpack

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: staticfile-buildpack
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: staticfile-buildpack-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: staticfile-buildpack
  - put: staticfile-buildpack-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-statsd-injector
  serial_groups:
  - update-statsd-injector
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: statsd-injector-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-statsd-injector
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: statsd-injector-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: statsd-injector

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: statsd-injector
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-statsd-injector

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: statsd-injector
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: statsd-injector-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: statsd-injector
  - put: statsd-injector-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-uaa
  serial_groups:
  - update-uaa
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: uaa-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-uaa
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: uaa-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: uaa

  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: uaa
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-uaa

  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: uaa
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: uaa-release
      compiled-release-tarball: exported-release
      current-commit-message: commit-message
    params:
      RELEASE_NAME: uaa
  - put: uaa-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-backup-and-restore-sdk
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: backup-and-restore-sdk-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-backup-and-restore-sdk
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: backup-and-restore-sdk-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: backup-and-restore-sdk
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/backup-and-restore/enable-backup-restore.yml
      UPDATED_OPS_FILE_PATH: enable-backup-restore.yml

  - task: bosh-dry-run-backup-and-restore-sdk
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: backup-and-restore-sdk
      OPS_FILES: |
        enable-backup-restore.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-backup-and-restore-sdk
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-backup-and-restore-sdk
  - task: commit-generated-manifest-and-ops-backup-and-restore-sdk
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-backup-restore.yml
      OPS_FILE_DESTINATION: operations/backup-and-restore/enable-backup-restore.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-bpm
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: bpm-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bpm
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bpm-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bpm
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/enable-bpm.yml
      UPDATED_OPS_FILE_PATH: enable-bpm.yml

  - task: bosh-dry-run-bpm
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: bpm
      OPS_FILES: |
        enable-bpm.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-bpm
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bpm
  - task: commit-generated-manifest-and-ops-bpm
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-bpm.yml
      OPS_FILE_DESTINATION: operations/experimental/enable-bpm.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-broker-registrar
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: broker-registrar-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-broker-registrar
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: broker-registrar-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: broker-registrar
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/enable-nfs-volume-service.yml
      UPDATED_OPS_FILE_PATH: enable-nfs-volume-service.yml

  - task: bosh-dry-run-broker-registrar
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: broker-registrar
      OPS_FILES: |
        enable-nfs-volume-service.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-broker-registrar
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-broker-registrar
  - task: commit-generated-manifest-and-ops-broker-registrar
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-nfs-volume-service.yml
      OPS_FILE_DESTINATION: operations/enable-nfs-volume-service.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-cf-app-sd
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: cf-app-sd-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-cf-app-sd
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: cf-app-sd-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: cf-app-sd
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/enable-service-discovery.yml
      UPDATED_OPS_FILE_PATH: enable-service-discovery.yml

  - task: bosh-dry-run-cf-app-sd
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: cf-app-sd
      OPS_FILES: |
        enable-service-discovery.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-cf-app-sd
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-cf-app-sd
  - task: commit-generated-manifest-and-ops-cf-app-sd
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-service-discovery.yml
      OPS_FILE_DESTINATION: operations/experimental/enable-service-discovery.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-credhub
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: credhub-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-credhub
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: credhub-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: credhub
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/secure-service-credentials.yml
      UPDATED_OPS_FILE_PATH: secure-service-credentials.yml

  - task: bosh-dry-run-credhub
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: credhub
      OPS_FILES: |
        secure-service-credentials.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-credhub
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-credhub
  - task: commit-generated-manifest-and-ops-credhub
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: secure-service-credentials.yml
      OPS_FILE_DESTINATION: operations/experimental/secure-service-credentials.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-haproxy
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: haproxy-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-haproxy
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: haproxy-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: haproxy
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/use-haproxy.yml
      UPDATED_OPS_FILE_PATH: use-haproxy.yml

  - task: bosh-dry-run-haproxy
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: haproxy
      OPS_FILES: |
        use-haproxy.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

      VARS_FILES: vars-files/haproxy-vars.yml

  - task: bosh-delete-deployment-haproxy
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-haproxy
  - task: commit-generated-manifest-and-ops-haproxy
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-haproxy.yml
      OPS_FILE_DESTINATION: operations/use-haproxy.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-mapfs
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: mapfs-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-mapfs
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: mapfs-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: mapfs
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/enable-nfs-volume-service.yml
      UPDATED_OPS_FILE_PATH: enable-nfs-volume-service.yml

  - task: bosh-dry-run-mapfs
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: mapfs
      OPS_FILES: |
        enable-nfs-volume-service.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-mapfs
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-mapfs
  - task: commit-generated-manifest-and-ops-mapfs
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-nfs-volume-service.yml
      OPS_FILE_DESTINATION: operations/enable-nfs-volume-service.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-nfs-volume
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: nfs-volume-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-nfs-volume
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: nfs-volume-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: nfs-volume
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/enable-nfs-volume-service.yml
      UPDATED_OPS_FILE_PATH: enable-nfs-volume-service.yml

  - task: bosh-dry-run-nfs-volume
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: nfs-volume
      OPS_FILES: |
        enable-nfs-volume-service.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-nfs-volume
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-nfs-volume
  - task: commit-generated-manifest-and-ops-nfs-volume
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-nfs-volume-service.yml
      OPS_FILE_DESTINATION: operations/enable-nfs-volume-service.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-postgres
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: postgres-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-postgres
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: postgres-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: postgres
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/use-postgres.yml
      UPDATED_OPS_FILE_PATH: use-postgres.yml

  - task: bosh-dry-run-postgres
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: postgres
      OPS_FILES: |
        use-postgres.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-postgres
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-postgres
  - task: commit-generated-manifest-and-ops-postgres
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-postgres.yml
      OPS_FILE_DESTINATION: operations/use-postgres.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-silk
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: silk-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-silk
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: silk-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: silk
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-silk-release.yml
      UPDATED_OPS_FILE_PATH: use-silk-release.yml

  - task: bosh-dry-run-silk
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: silk
      OPS_FILES: |
        use-silk-release.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-silk
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-silk
  - task: commit-generated-manifest-and-ops-silk
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-silk-release.yml
      OPS_FILE_DESTINATION: operations/experimental/use-silk-release.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-syslog
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: syslog-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-syslog
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: syslog-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: syslog
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/addons/enable-component-syslog.yml
      UPDATED_OPS_FILE_PATH: enable-component-syslog.yml

  - task: bosh-dry-run-syslog
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: cf-deployment-develop

    params:
      DEPLOYMENT_NAME_SUFFIX: syslog
      OPS_FILES: |
        enable-component-syslog.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

      VARS_FILES: operations/addons/example-vars-files/vars-enable-component-syslog.yml

  - task: bosh-delete-deployment-syslog
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-syslog
  - task: commit-generated-manifest-and-ops-syslog
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-component-syslog.yml
      OPS_FILE_DESTINATION: operations/addons/enable-component-syslog.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-bosh-dns
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: bosh-dns-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bosh-dns
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bosh-dns-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bosh-dns
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-bosh-dns.yml
      UPDATED_OPS_FILE_PATH: use-bosh-dns.yml

  - task: bosh-dry-run-bosh-dns
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: bosh-dns
      OPS_FILES: |
        use-bosh-dns.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-bosh-dns
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bosh-dns
  - task: commit-generated-manifest-and-ops-bosh-dns
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-bosh-dns.yml
      OPS_FILE_DESTINATION: operations/experimental/use-bosh-dns.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


  - task: update-release-bosh-dns-rename-network-and-deployment
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bosh-dns-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bosh-dns
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-bosh-dns-rename-network-and-deployment.yml
      UPDATED_OPS_FILE_PATH: use-bosh-dns-rename-network-and-deployment.yml
  - task: bosh-dry-run-bosh-dns
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: cf-deployment-develop
    params:
      DEPLOYMENT_NAME_SUFFIX: bosh-dns
      OPS_FILES: "use-bosh-dns-rename-network-and-deployment.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
      VARS_FILES: "operations/example-vars-files/vars-rename-network-and-deployment.yml"
  - task: bosh-delete-deployment-bosh-dns
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bosh-dns
  - task: commit-generated-manifest-and-ops-bosh-dns
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-bosh-dns-rename-network-and-deployment.yml
      OPS_FILE_DESTINATION: operations/experimental/use-bosh-dns-rename-network-and-deployment.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-bits-service
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: bits-service-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bits-service
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bits-service-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bits-service
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/bits-service.yml
      UPDATED_OPS_FILE_PATH: bits-service.yml

  - task: collect-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: updated-ops-file
      new-ops-files: cf-deployment-develop
    params:
      BASE_OPS_FILE_DIR: .
      NEW_OPS_FILES: operations/experimental/bits-service-webdav.yml

  - task: bosh-dry-run-bits-service
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: collected-ops-files


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: bits-service
      OPS_FILES: |
        bits-service.yml

        bits-service-webdav.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-bits-service
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bits-service
  - task: commit-generated-manifest-and-ops-bits-service
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: bits-service.yml
      OPS_FILE_DESTINATION: operations/experimental/bits-service.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-log-cache
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: log-cache-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-log-cache
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: log-cache-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: log-cache
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-log-cache.yml
      UPDATED_OPS_FILE_PATH: use-log-cache.yml

  - task: bosh-dry-run-log-cache
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: log-cache
      OPS_FILES: |
        use-log-cache.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-log-cache
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-log-cache
  - task: commit-generated-manifest-and-ops-log-cache
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-log-cache.yml
      OPS_FILE_DESTINATION: operations/experimental/use-log-cache.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-pxc
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: pxc-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-pxc
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: pxc-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: pxc
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-pxc.yml
      UPDATED_OPS_FILE_PATH: use-pxc.yml

  - task: bosh-dry-run-pxc
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: pxc
      OPS_FILES: |
        use-pxc.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-pxc
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-pxc
  - task: commit-generated-manifest-and-ops-pxc
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-pxc.yml
      OPS_FILE_DESTINATION: operations/experimental/use-pxc.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

  - task: update-release-pxc-additional-ops-file
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: pxc-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: pxc
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/migrate-cf-mysql-to-pxc.yml
      UPDATED_OPS_FILE_PATH: migrate-cf-mysql-to-pxc.yml
  - task: bosh-dry-run-pxc-additional-ops-file
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file

      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: pxc-additional-ops-file
      OPS_FILES: |
        migrate-cf-mysql-to-pxc.yml
      SYSTEM_DOMAIN: greengrass.cf-app.com

  - task: bosh-delete-deployment-pxc-additional-ops-file
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-pxc-additional-ops-file
  - task: commit-generated-manifest-and-ops-pxc-additional-ops-file
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: migrate-cf-mysql-to-pxc.yml
      OPS_FILE_DESTINATION: operations/experimental/migrate-cf-mysql-to-pxc.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-windows-syslog
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: windows-syslog-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-windows-syslog
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: windows-syslog-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: windows-syslog
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/windows-enable-component-syslog.yml
      UPDATED_OPS_FILE_PATH: windows-enable-component-syslog.yml

  - task: bosh-dry-run-windows-syslog
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop

      ops-files: updated-ops-file


      vars-files: greengrass-env-director-state

    params:
      DEPLOYMENT_NAME_SUFFIX: windows-syslog
      OPS_FILES: |
        windows-enable-component-syslog.yml

      SYSTEM_DOMAIN: greengrass.cf-app.com

      VARS_FILES: vars-files/windows-enable-component-syslog-vars.yml

  - task: bosh-delete-deployment-windows-syslog
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-windows-syslog
  - task: commit-generated-manifest-and-ops-windows-syslog
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows-enable-component-syslog.yml
      OPS_FILE_DESTINATION: operations/experimental/windows-enable-component-syslog.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo




- name: update-windows-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: windows-stemcell
      trigger: true
      params:
        tarball: false
  - task: update-windows-stemcell-ops
    file: runtime-ci/tasks/update-windows-stemcell-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop

  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-stemcell-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows-cell.yml
      OPS_FILE_DESTINATION: operations/windows-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-windows2016-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: windows2016-stemcell
      trigger: true
      params:
        tarball: false
  - task: update-windows-stemcell-ops
    file: runtime-ci/tasks/update-windows-stemcell-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop

      windows-stemcell: windows2016-stemcell
    params:
      USE_WINDOWS2016: true

  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-stemcell-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows2016-cell.yml
      OPS_FILE_DESTINATION: operations/windows2016-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-stemcell-and-recompile-releases
  public: true
  serial_groups:
  - update-binary-buildpack
  - update-capi
  - update-cf-mysql
  - update-cf-networking
  - update-cf-smoke-tests
  - update-cf-syslog-drain
  - update-cflinuxfs2
  - update-consul
  - update-diego
  - update-dotnet-core-buildpack
  - update-garden-runc
  - update-go-buildpack
  - update-java-buildpack
  - update-loggregator
  - update-nats
  - update-nodejs-buildpack
  - update-php-buildpack
  - update-python-buildpack
  - update-routing
  - update-ruby-buildpack
  - update-staticfile-buildpack
  - update-statsd-injector
  - update-uaa

  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: binary-buildpack-release
      params:
        tarball: false
    - get: capi-release
      params:
        tarball: false
    - get: cf-mysql-release
      params:
        tarball: false
    - get: cf-networking-release
      params:
        tarball: false
    - get: cf-smoke-tests-release
      params:
        tarball: false
    - get: cf-syslog-drain-release
      params:
        tarball: false
    - get: cflinuxfs2-release
      params:
        tarball: false
    - get: consul-release
      params:
        tarball: false
    - get: diego-release
      params:
        tarball: false
    - get: dotnet-core-buildpack-release
      params:
        tarball: false
    - get: garden-runc-release
      params:
        tarball: false
    - get: go-buildpack-release
      params:
        tarball: false
    - get: java-buildpack-release
      params:
        tarball: false
    - get: loggregator-release
      params:
        tarball: false
    - get: nats-release
      params:
        tarball: false
    - get: nodejs-buildpack-release
      params:
        tarball: false
    - get: php-buildpack-release
      params:
        tarball: false
    - get: python-buildpack-release
      params:
        tarball: false
    - get: routing-release
      params:
        tarball: false
    - get: ruby-buildpack-release
      params:
        tarball: false
    - get: staticfile-buildpack-release
      params:
        tarball: false
    - get: statsd-injector-release
      params:
        tarball: false
    - get: uaa-release
      params:
        tarball: false

    - get: stemcell
      trigger: true
      params:
        tarball: false
  - task: update-stemcell-manifest-section
    file: runtime-ci/tasks/update-stemcell-manifest-section/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: upload-updated-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
    params:
      INFRASTRUCTURE: google
  - aggregate:
    - task: compile-release-binary-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-binary-buildpack
      params:
        RELEASE_NAME: binary-buildpack
    - task: compile-release-capi
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-capi
      params:
        RELEASE_NAME: capi
    - task: compile-release-cf-mysql
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-mysql
      params:
        RELEASE_NAME: cf-mysql
    - task: compile-release-cf-networking
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-networking
      params:
        RELEASE_NAME: cf-networking
    - task: compile-release-cf-smoke-tests
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-smoke-tests
      params:
        RELEASE_NAME: cf-smoke-tests
    - task: compile-release-cf-syslog-drain
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-syslog-drain
      params:
        RELEASE_NAME: cf-syslog-drain
    - task: compile-release-cflinuxfs2
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cflinuxfs2
      params:
        RELEASE_NAME: cflinuxfs2
    - task: compile-release-consul
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-consul
      params:
        RELEASE_NAME: consul
    - task: compile-release-diego
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-diego
      params:
        RELEASE_NAME: diego
    - task: compile-release-dotnet-core-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-dotnet-core-buildpack
      params:
        RELEASE_NAME: dotnet-core-buildpack
    - task: compile-release-garden-runc
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-garden-runc
      params:
        RELEASE_NAME: garden-runc
    - task: compile-release-go-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-go-buildpack
      params:
        RELEASE_NAME: go-buildpack
    - task: compile-release-java-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-java-buildpack
      params:
        RELEASE_NAME: java-buildpack
    - task: compile-release-loggregator
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-loggregator
      params:
        RELEASE_NAME: loggregator
    - task: compile-release-nats
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-nats
      params:
        RELEASE_NAME: nats
    - task: compile-release-nodejs-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-nodejs-buildpack
      params:
        RELEASE_NAME: nodejs-buildpack
    - task: compile-release-php-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-php-buildpack
      params:
        RELEASE_NAME: php-buildpack
    - task: compile-release-python-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-python-buildpack
      params:
        RELEASE_NAME: python-buildpack
    - task: compile-release-routing
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-routing
      params:
        RELEASE_NAME: routing
    - task: compile-release-ruby-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-ruby-buildpack
      params:
        RELEASE_NAME: ruby-buildpack
    - task: compile-release-staticfile-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-staticfile-buildpack
      params:
        RELEASE_NAME: staticfile-buildpack
    - task: compile-release-statsd-injector
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-statsd-injector
      params:
        RELEASE_NAME: statsd-injector
    - task: compile-release-uaa
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-uaa
      params:
        RELEASE_NAME: uaa

  - task: update-compiled-releases-ops-stemcell
    file: runtime-ci/tasks/update-compiled-releases-ops-stemcell/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      binary-buildpack-release-tarball: exported-release-binary-buildpack
      capi-release-tarball: exported-release-capi
      cf-mysql-release-tarball: exported-release-cf-mysql
      cf-networking-release-tarball: exported-release-cf-networking
      cf-smoke-tests-release-tarball: exported-release-cf-smoke-tests
      cf-syslog-drain-release-tarball: exported-release-cf-syslog-drain
      cflinuxfs2-release-tarball: exported-release-cflinuxfs2
      consul-release-tarball: exported-release-consul
      diego-release-tarball: exported-release-diego
      dotnet-core-buildpack-release-tarball: exported-release-dotnet-core-buildpack
      garden-runc-release-tarball: exported-release-garden-runc
      go-buildpack-release-tarball: exported-release-go-buildpack
      java-buildpack-release-tarball: exported-release-java-buildpack
      loggregator-release-tarball: exported-release-loggregator
      nats-release-tarball: exported-release-nats
      nodejs-buildpack-release-tarball: exported-release-nodejs-buildpack
      php-buildpack-release-tarball: exported-release-php-buildpack
      python-buildpack-release-tarball: exported-release-python-buildpack
      routing-release-tarball: exported-release-routing
      ruby-buildpack-release-tarball: exported-release-ruby-buildpack
      staticfile-buildpack-release-tarball: exported-release-staticfile-buildpack
      statsd-injector-release-tarball: exported-release-statsd-injector
      uaa-release-tarball: exported-release-uaa

  - aggregate:
    - put: binary-buildpack-release-gcs
      params:
        file: exported-release-binary-buildpack/*.tgz
        predefined_acl: publicRead
    - put: capi-release-gcs
      params:
        file: exported-release-capi/*.tgz
        predefined_acl: publicRead
    - put: cf-mysql-release-gcs
      params:
        file: exported-release-cf-mysql/*.tgz
        predefined_acl: publicRead
    - put: cf-networking-release-gcs
      params:
        file: exported-release-cf-networking/*.tgz
        predefined_acl: publicRead
    - put: cf-smoke-tests-release-gcs
      params:
        file: exported-release-cf-smoke-tests/*.tgz
        predefined_acl: publicRead
    - put: cf-syslog-drain-release-gcs
      params:
        file: exported-release-cf-syslog-drain/*.tgz
        predefined_acl: publicRead
    - put: cflinuxfs2-release-gcs
      params:
        file: exported-release-cflinuxfs2/*.tgz
        predefined_acl: publicRead
    - put: consul-release-gcs
      params:
        file: exported-release-consul/*.tgz
        predefined_acl: publicRead
    - put: diego-release-gcs
      params:
        file: exported-release-diego/*.tgz
        predefined_acl: publicRead
    - put: dotnet-core-buildpack-release-gcs
      params:
        file: exported-release-dotnet-core-buildpack/*.tgz
        predefined_acl: publicRead
    - put: garden-runc-release-gcs
      params:
        file: exported-release-garden-runc/*.tgz
        predefined_acl: publicRead
    - put: go-buildpack-release-gcs
      params:
        file: exported-release-go-buildpack/*.tgz
        predefined_acl: publicRead
    - put: java-buildpack-release-gcs
      params:
        file: exported-release-java-buildpack/*.tgz
        predefined_acl: publicRead
    - put: loggregator-release-gcs
      params:
        file: exported-release-loggregator/*.tgz
        predefined_acl: publicRead
    - put: nats-release-gcs
      params:
        file: exported-release-nats/*.tgz
        predefined_acl: publicRead
    - put: nodejs-buildpack-release-gcs
      params:
        file: exported-release-nodejs-buildpack/*.tgz
        predefined_acl: publicRead
    - put: php-buildpack-release-gcs
      params:
        file: exported-release-php-buildpack/*.tgz
        predefined_acl: publicRead
    - put: python-buildpack-release-gcs
      params:
        file: exported-release-python-buildpack/*.tgz
        predefined_acl: publicRead
    - put: routing-release-gcs
      params:
        file: exported-release-routing/*.tgz
        predefined_acl: publicRead
    - put: ruby-buildpack-release-gcs
      params:
        file: exported-release-ruby-buildpack/*.tgz
        predefined_acl: publicRead
    - put: staticfile-buildpack-release-gcs
      params:
        file: exported-release-staticfile-buildpack/*.tgz
        predefined_acl: publicRead
    - put: statsd-injector-release-gcs
      params:
        file: exported-release-statsd-injector/*.tgz
        predefined_acl: publicRead
    - put: uaa-release-gcs
      params:
        file: exported-release-uaa/*.tgz
        predefined_acl: publicRead

  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-windows-2012-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    
    - get: garden-windows-bosh-release
      trigger: true
      params:
        tarball: false
    
    - get: hwc-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: windows-utilities-release
      trigger: true
      params:
        tarball: false
    - get: windows-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-windows-releases/task-2012.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
      
      garden-windows-release: garden-windows-bosh-release
      hwc-buildpack-release: hwc-buildpack-release
      windows-utilities-release: windows-utilities-release
      
  - task: bosh-upload-windows-stemcell
    file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: windows-stemcell
      bbl-state: greengrass-env-director-state
    params:
      STEMCELL_NAME: '*.tgz'
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: windows-2012-releases
      OPS_FILES: "windows-cell.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-windows-2012-releases
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows-cell.yml
      OPS_FILE_DESTINATION: operations/windows-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-windows-2016-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    
    - get: winc-release
      trigger: true
      params:
        tarball: false
    - get: windows2016fs-online-release
      trigger: true
      params:
        tarball: false
    
    - get: hwc-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: windows-utilities-release
      trigger: true
      params:
        tarball: false
    - get: windows2016-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-windows-releases/task-2016.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
      
      windows2016fs-release: windows2016fs-online-release
      
  - task: bosh-upload-windows-stemcell
    file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: windows2016-stemcell
      bbl-state: greengrass-env-director-state
    params:
      STEMCELL_NAME: '*.tgz'
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: windows-2016-releases
      OPS_FILES: "windows2016-cell.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-windows-2016-releases
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows2016-cell.yml
      OPS_FILE_DESTINATION: operations/windows2016-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo


- name: update-windows-2016-offline-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    - get: windows2016fs-release
      trigger: true
      params:
        tarball: false
    - get: windows2016-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-windows-releases/task-2016-offline.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-offline-windows2016fs.yml
      OPS_FILE_DESTINATION: operations/use-offline-windows2016fs.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: setup-infrastructure-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: greengrass-env-director-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_CONFIG_DIR: bbl-config
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      SKIP_LB_CREATION: true
      BBL_ENV_NAME: greengrass-compile
    input_mapping:
      bbl-state: greengrass-env-director-state
      bbl-config: greengrass-env-director-state
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: extend-cloud-config-for-credhub-dry-run
    file: runtime-ci/tasks/bosh-extend-cloud-config/task.yml
    input_mapping:
      ops-file: greengrass-env-director-state
      bbl-state: greengrass-env-director-state
    params:
      OPS_FILE_PATH: add-credhub-lb.yml

- name: destroy-infrastructure-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: greengrass-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: run-bosh-cleanup-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: greengrass-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
