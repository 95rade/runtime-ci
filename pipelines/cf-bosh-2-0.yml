---
resource_types:
- name: bosh-io-release-updated
  type: docker-image
  source:
    repository: concourse/bosh-io-release-resource

resources:
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: hermione-env-repo
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
- name: hermione-deployment-manifest
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths: [ cf-deployment.yml ]
- name: hermione-deployment-configuration
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
    paths: [ deployment-parts/cf-deployment-configuration.yml ]
- name: capi-release-repo-ci-passed
  type: git
  source:
    branch: ci-passed
    uri: https://github.com/cloudfoundry/capi-release.git
- name: nats-release-repo
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/nats-release.git
- name: routing-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry-incubator/routing-release
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
- name: consul-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry-incubator/consul-release
- name: etcd-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry-incubator/etcd-release
- name: diego-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/diego-release
- name: loggregator-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/loggregator
- name: cf-mysql-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/cf-mysql-release
- name: uaa-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/uaa-release
- name: garden-linux-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/garden-linux-release
- name: cflinuxfs2-rootfs-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release
- name: cf-release
  type: bosh-io-release-updated
  source:
    repository: cloudfoundry/cf-release

jobs:

- name: destroy-infrastructure
  public: true
  serial_groups: [hermione]
  plan:
  - aggregate:
    - get: env-repo
      resource: hermione-env-repo
    - get: runtime-ci
  - task: unbind-elb-from-r53
    file: runtime-ci/scripts/ci/unbind-elb-from-r53/task.yml
    input_mapping:
      env-repo: env-repo
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com
  - task: destroy-infrastructure
    file: runtime-ci/scripts/ci/destroy-infrastructure/task.yml
  - put: hermione-env-repo
    params:
      repository: updated-env-repo
- name: setup-infrastructure
  public: true
  serial_groups: [hermione]
  plan:
  - aggregate:
    - get: env-repo
      resource: hermione-env-repo
    - get: runtime-ci
  - task: setup-infrastructure
    file: runtime-ci/scripts/ci/setup-infrastructure/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{hermione_lbs_ssl_cert}}
      BBL_LB_KEY: {{hermione_lbs_ssl_signing_key}}
  - put: hermione-env-repo
    params:
      repository: updated-env-repo
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-env-repo
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      DOMAIN: hermione.cf-app.com


- name: deploy-releases
  public: true
  serial_groups: [hermione]
  plan:
  - aggregate:
    - get: runtime-ci
    - get: hermione-env-repo
    - get: hermione-deployment-configuration
      trigger: true
    - get: capi-release-repo-ci-passed
      trigger: true
    - get: nats-release-repo
      trigger: true
    - get: routing-release
      trigger: true
      params:
        tarball: false
    - get: consul-release
      trigger: true
      params:
        tarball: false
    - get: etcd-release
      trigger: true
      params:
        tarball: false
    - get: diego-release
      trigger: true
      params:
        tarball: false
    - get: loggregator-release
      trigger: true
      params:
        tarball: false
    - get: cf-mysql-release
      trigger: true
      params:
        tarball: false
    - get: uaa-release
      trigger: true
      params:
        tarball: false
    - get: garden-linux-release
      trigger: true
      params:
        tarball: false
    - get: cflinuxfs2-rootfs-release
      trigger: true
      params:
        tarball: false
    - get: cf-release
      trigger: true
      params:
        tarball: false
  - task: extract-creds
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    params:
      STATE_DIR_PATH: bbl-infrastructure
    input_mapping:
      env-repo: hermione-env-repo
  - aggregate:
    - do:
      - task: create-nats-release
        file: runtime-ci/scripts/ci/create-release/task.yml
        input_mapping:
          release-repo: nats-release-repo
        output_mapping:
          release-tarball: nats-release-tarball
        params:
          RELEASE_NAME: nats
      - task: upload-nats-release
        file: runtime-ci/scripts/ci/bosh-upload-release/task.yml
        input_mapping:
          release: nats-release-tarball
        params:
          TARGET_FILE: target
          USERNAME_FILE: username
          PASSWORD_FILE: password
          RELEASE_NAME: nats-*.tgz
    - do:
      - task: create-capi-release
        file: runtime-ci/scripts/ci/create-release/task.yml
        input_mapping:
          release-repo: capi-release-repo-ci-passed
        output_mapping:
          release-tarball: capi-release-tarball
        params:
          RELEASE_NAME: capi
      - task: upload-capi-release
        file: runtime-ci/scripts/ci/bosh-upload-release/task.yml
        input_mapping:
          release: capi-release-tarball
        params:
          TARGET_FILE: target
          USERNAME_FILE: username
          PASSWORD_FILE: password
          RELEASE_NAME: capi-*.tgz
  - task: build-releases-section
    file: runtime-ci/scripts/ci/create-releases-manifest-section/task.yml
    input_mapping:
      deployment-configuration: hermione-deployment-configuration
  - task: set-bosh-uuid
    file: runtime-ci/scripts/ci/bosh-uuid/task.yml
    input_mapping:
      manifest: deployment-manifest
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      MANIFEST_FILE: cf-deployment.yml
  - task: bosh-deploy-cf
    file: runtime-ci/scripts/ci/bosh-deploy/task.yml
    input_mapping:
      manifest: manifest-updated
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      MANIFEST_FILE: cf-deployment.yml

- name: hermione-diego-cats
  public: true
  serial_groups: [hermione]
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: hermione-deployment-configuration
        trigger: true
        passed: [ deploy-releases ]
      - get: capi-release-repo-ci-passed
        trigger: true
        passed: [ deploy-releases ]
        params:
          submodules: none
      - get: nats-release-repo
        trigger: true
        passed: [ deploy-releases ]
        params:
          submodules: none
      - get: routing-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: consul-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: etcd-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: diego-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: loggregator-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: cf-mysql-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: uaa-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: garden-linux-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: cflinuxfs2-rootfs-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: cf-release
        trigger: true
        passed: [ deploy-releases ]
        params:
          tarball: false
      - get: runtime-ci
      - get: cf-acceptance-tests
    - task: write-api-target-file
      file: runtime-ci/scripts/ci/write-target-file/task.yml
      params:
        TARGET: api.hermione.cf-app.com
    - task: enable-docker
      file: runtime-ci/scripts/ci/enable-docker-diego/task.yml
      input_mapping:
        cf-target: target-file-dir
      params:
        CF_USER: {{hermione_admin_username}}
        CF_PASSWORD: {{hermione_admin_password}}
    - task: cf-acceptance-tests
      file: runtime-ci/scripts/ci/run-cats/task.yml
      params:
        INCLUDE_BACKEND_COMPATIBILITY: false
        INCLUDE_INTERNET_DEPENDENT: true
        INCLUDE_DIEGO_DOCKER: true
        INCLUDE_DIEGO_SSH: true
        INCLUDE_LOGGING: true
        INCLUDE_ROUTE_SERVICES: true
        INCLUDE_SECURITY_GROUPS: true
        INCLUDE_SERVICES: true
        INCLUDE_V3: false
        INCLUDE_OPERATOR: true
        INCLUDE_PRIVILEGED_CONTAINER_SUPPORT: true
        SKIP_SSO: false
        BACKEND: diego
        CF_API: "api.hermione.cf-app.com"
        CF_ADMIN_USER: {{hermione_admin_username}}
        CF_ADMIN_PASSWORD: {{hermione_admin_password}}
        CF_APPS_DOMAIN: hermione.cf-app.com
        SKIP_SSL_VALIDATION: "true"
        USE_HTTP: "true"
        NODES: 6
