---
groups:
- name: bosh-2.0
  jobs:
  - destroy-infrastructure
  - setup-infrastructure
  - deploy-releases

resources:
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: hermione-env-repo
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: {{hermione_env_private_key}}
- name: hermione-bosh-director
  type: pool
  source:
    uri: git@github.com:cloudfoundry/runtime-ci-pools
    branch: master
    pool: hermione-bosh-director
    private_key: {{hermione_pool_key}}
- name: capi-release-repo
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/capi-release.git
- name: nats-release-repo
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/nats-release.git
- name: routing-release-repo
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release.git

jobs:
- name: destroy-infrastructure
  public: true
  serial_groups: [hermione]
  plan:
  - aggregate:
    - get: env-repo
      resource: hermione-env-repo
    - get: runtime-ci
  - task: unbind-elb-from-r53
    file: runtime-ci/scripts/ci/unbind-elb-from-r53/task.yml
    input_mapping:
      env-repo: env-repo
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{bbl_lb_cert}}
      BBL_LB_KEY: {{bbl_lb_key}}
      DOMAIN: hermione.cf-app.com
  - task: destroy-infrastructure
    file: runtime-ci/scripts/ci/destroy-infrastructure/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{bbl_lb_cert}}
      BBL_LB_KEY: {{bbl_lb_key}}
  - put: hermione-env-repo
    params:
      repository: updated-env-repo
- name: setup-infrastructure
  public: true
  serial_groups: [hermione]
  plan:
  - aggregate:
    - get: env-repo
      resource: hermione-env-repo
    - get: runtime-ci
    - put: hermione-bosh-director
      params:
        claim: director
  - task: setup-infrastructure
    file: runtime-ci/scripts/ci/setup-infrastructure/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{bbl_lb_cert}}
      BBL_LB_KEY: {{bbl_lb_key}}
  - put: hermione-env-repo
    params:
      repository: updated-env-repo
  - task: bind-elb-to-r53
    file: runtime-ci/scripts/ci/bind-elb-to-r53/task.yml
    input_mapping:
      env-repo: updated-env-repo
    params:
      AWS_ACCESS_KEY_ID: {{hermione_aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{hermione_aws_secret_access_key}}
      BBL_LB_CERT: {{bbl_lb_cert}}
      BBL_LB_KEY: {{bbl_lb_key}}
      DOMAIN: hermione.cf-app.com
- name: deploy-releases
  public: true
  serial_groups: [ hermione ]
  plan:
  - aggregate:
    - get: capi-release-repo
    - get: nats-release-repo
    - get: routing-release-repo
    - get: hermione-env-repo
      trigger: true
    - get: runtime-ci
    - get: hermione-bosh-director
      passed: [ setup-infrastructure ]
      trigger: true
  - task: extract-creds
    file: runtime-ci/scripts/ci/extract-director-creds-from-bbl/task.yml
    params:
      STATE_DIR_PATH: bbl-infrastructure
    input_mapping:
      env-repo: hermione-env-repo
  - aggregate:
    - do:
      - task: create-nats-release
        file: runtime-ci/scripts/ci/create-release/task.yml
        input_mapping:
          release-repo: nats-release-repo
        output_mapping:
          release-tarball: nats-release-tarball
        params:
          RELEASE_NAME: nats
      - task: upload-nats-release
        file: runtime-ci/scripts/ci/bosh-upload-release/task.yml
        input_mapping:
          release: nats-release-tarball
        params:
          TARGET_FILE: target
          USERNAME_FILE: username
          PASSWORD_FILE: password
          RELEASE_NAME: nats-*.tgz
    - do:
      - task: create-routing-release
        file: runtime-ci/scripts/ci/create-release/task.yml
        input_mapping:
          release-repo: routing-release-repo
        output_mapping:
          release-tarball: routing-release-tarball
        params:
          RELEASE_DIR: routing-release
          RELEASE_NAME: routing
      - task: upload-routing-release
        file: runtime-ci/scripts/ci/bosh-upload-release/task.yml
        input_mapping:
          release: routing-release-tarball
        params:
          TARGET_FILE: target
          USERNAME_FILE: username
          PASSWORD_FILE: password
          RELEASE_NAME: routing-*.tgz
    - do:
      - task: create-capi-release
        file: runtime-ci/scripts/ci/create-release/task.yml
        input_mapping:
          release-repo: capi-release-repo
        output_mapping:
          release-tarball: capi-release-tarball
        params:
          RELEASE_NAME: capi
      - task: upload-capi-release
        file: runtime-ci/scripts/ci/bosh-upload-release/task.yml
        input_mapping:
          release: capi-release-tarball
        params:
          TARGET_FILE: target
          USERNAME_FILE: username
          PASSWORD_FILE: password
          RELEASE_NAME: capi-*.tgz
  - task: set-bosh-uuid
    file: runtime-ci/scripts/ci/bosh-uuid/task.yml
    input_mapping:
      manifest: hermione-env-repo
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      MANIFEST_FILE: cf-deployment.yml
  - task: bosh-deploy-cf
    file: runtime-ci/scripts/ci/bosh-deploy/task.yml
    input_mapping:
      manifest: manifest-updated
    params:
      TARGET_FILE:  target
      USERNAME_FILE: username
      PASSWORD_FILE: password
      MANIFEST_FILE: cf-deployment.yml
