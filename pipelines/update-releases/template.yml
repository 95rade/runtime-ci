---

groups:
# - name: update-releases
#   jobs:
- name: update-base-releases
  jobs:
{{range .baseReleases}}
  - update-{{.name}}
{{end}}
- name: update-ops-releases
  jobs:
{{range .opsReleases}}
  - update-{{.name}}
{{end}}
- name: update-windows-stemcells
  jobs:
{{range .windowsVersSupported}}
  - update-{{.name}}-stemcell
{{end}}
- name: TODO
  jobs:
  - update-windows-2016-releases
  - update-bosh-dns
  - update-windows-2012-releases
  - update-windows-2016-offline-releases
  - update-stemcell-and-recompile-releases
  - update-bpm
  - update-syslog

- name: infrastructure
  jobs:
  - setup-infrastructure-compilation
  - destroy-infrastructure-compilation
  - run-bosh-cleanup-compilation

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
resources:
- name: cf-deployment-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_private_key))
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: greengrass-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/greengrass-env.git
    private_key: ((greengrass_env_deploy_key))
- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent
- name: windows-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2012R2-go_agent
- name: windows2016-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2016-go_agent
- name: garden-windows-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-windows-bosh-release
- name: hwc-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/hwc-buildpack-release
- name: windows-utilities-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows-utilities-release
- name: winc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/winc-release
- name: windows2016fs-online-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/windows2016fs-online-release
- name: windows2016fs-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: windows2016fs-release
    access_token: ((release_integration_download_bot_access_token))
- name: bosh-dns-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-dns-release
- name: syslog-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/syslog-release
- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bpm-release

# bosh-io releases
{{range .baseReleases}}
- name: {{.name}}-release
  type: bosh-io-release
  source:
    repository: {{.repository}}
{{end}}
{{range .opsReleases}}
- name: {{.name}}-release
  type: bosh-io-release
  source:
    repository: {{.repository}}
{{end}}

# compiled releases
{{range .baseReleases}}
- name: {{.name}}-release-gcs
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: {{.name}}-[^-]+-ubuntu-trusty-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz
{{end}}

- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h

jobs:
{{range .baseReleases}}
- name: update-{{.name}}
  serial_groups:
  - update-{{.name}}
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: {{.name}}-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-{{.name}}
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: {{.name}}-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: {{.name}}
{{if not (contains "buildpack" .name)}}
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
      ops-files: cf-deployment-develop
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: {{.name}}
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-{{.name}}
{{end}}
  - task: compile-release
    file: runtime-ci/tasks/compile-release-from-manifest/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      manifest: updated-deployment-manifest
    params:
      RELEASE_NAME: {{.name}}
  - task: update-compiled-release-ops
    file: runtime-ci/tasks/update-compiled-release-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      bosh-io-release: {{.name}}-release
      compiled-release-tarball: exported-release
    params:
      RELEASE_NAME: {{.name}}
  - put: {{.name}}-release-gcs
    params:
      file: exported-release/*.tgz
      predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
{{end}}
{{range .opsReleases}}
# do we need stemcell and its passed contraint as input here?
- name: update-{{.name}}
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: greengrass-env-director-state
    - get: {{.name}}-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-{{.name}}
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: {{.name}}-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: {{.name}}
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: {{.cfDeploymentOpsFileDir}}/{{.opsFile}}
      UPDATED_OPS_FILE_PATH: {{.opsFile}}
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
{{if hasKey . "varsFiles"}}
      vars-files: {{.varsFilesInput}}
{{else}}
      vars-files: greengrass-env-director-state
{{end}}
    params:
      DEPLOYMENT_NAME_SUFFIX: {{.name}}
      OPS_FILES: {{.opsFile}}
      SYSTEM_DOMAIN: greengrass.cf-app.com
{{if hasKey . "varsFiles"}}
      VARS_FILES: {{.varsFiles}}
{{end}}
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-{{.name}}
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: {{.opsFile}}
      OPS_FILE_DESTINATION: {{.cfDeploymentOpsFileDir}}/{{.opsFile}}
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
{{end}}
{{range .windowsVersSupported}}
- name: update-{{.name}}-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: {{.name}}-stemcell
      trigger: true
      params:
        tarball: false
  - task: update-windows-stemcell-ops
    file: runtime-ci/tasks/update-windows-stemcell-ops/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
{{if or (contains "windows2016" .name)}}
      windows-stemcell: windows2016-stemcell
    params:
      USE_WINDOWS2016: true
{{end}}
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-stemcell-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: {{.name}}-cell.yml
      OPS_FILE_DESTINATION: operations/{{.name}}-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
{{end}}

- name: update-stemcell-and-recompile-releases
  public: true
  serial_groups:
  - update-binary-buildpack
  - update-capi
  - update-cf-networking
  - update-cf-smoke-tests
  - update-cf-syslog-drain-release
  - update-cflinuxfs2
  - update-consul
  - update-diego
  - update-dotnet-core-buildpack
  - update-garden-runc
  - update-go-buildpack
  - update-java-buildpack
  - update-loggregator
  - update-cf-mysql
  - update-nats
  - update-nodejs-buildpack
  - update-php-buildpack
  - update-python-buildpack
  - update-routing
  - update-ruby-buildpack
  - update-staticfile-buildpack
  - update-statsd-injector
  - update-uaa
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: binary-buildpack-release
      params:
        tarball: false
    - get: capi-release
      params:
        tarball: false
    - get: cf-mysql-release
      params:
        tarball: false
    - get: cf-networking-release
      params:
        tarball: false
    - get: cf-smoke-tests-release
      params:
        tarball: false
    - get: cf-syslog-drain-release
      params:
        tarball: false
    - get: cflinuxfs2-release
      params:
        tarball: false
    - get: consul-release
      params:
        tarball: false
    - get: diego-release
      params:
        tarball: false
    - get: dotnet-core-buildpack-release
      params:
        tarball: false
    - get: garden-runc-release
      params:
        tarball: false
    - get: go-buildpack-release
      params:
        tarball: false
    - get: java-buildpack-release
      params:
        tarball: false
    - get: loggregator-release
      params:
        tarball: false
    - get: nats-release
      params:
        tarball: false
    - get: nodejs-buildpack-release
      params:
        tarball: false
    - get: php-buildpack-release
      params:
        tarball: false
    - get: python-buildpack-release
      params:
        tarball: false
    - get: routing-release
      params:
        tarball: false
    - get: ruby-buildpack-release
      params:
        tarball: false
    - get: staticfile-buildpack-release
      params:
        tarball: false
    - get: statsd-injector-release
      params:
        tarball: false
    - get: uaa-release
      params:
        tarball: false
    - get: stemcell
      trigger: true
      params:
        tarball: false
  - task: update-stemcell-manifest-section
    file: runtime-ci/tasks/update-stemcell-manifest-section/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-develop
  - task: upload-updated-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: updated-deployment-manifest
    params:
      INFRASTRUCTURE: google
  - aggregate:
    - task: compile-release-binary-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-binary-buildpack
      params:
        RELEASE_NAME: binary-buildpack
    - task: compile-release-capi
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-capi
      params:
        RELEASE_NAME: capi
    - task: compile-release-cf-networking
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-networking
      params:
        RELEASE_NAME: cf-networking
    - task: compile-release-cf-smoke-tests
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-smoke-tests
      params:
        RELEASE_NAME: cf-smoke-tests
    - task: compile-release-cf-syslog-drain
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-syslog-drain
      params:
        RELEASE_NAME: cf-syslog-drain
    - task: compile-release-cflinuxfs2
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cflinuxfs2
      params:
        RELEASE_NAME: cflinuxfs2
    - task: compile-release-consul
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-consul
      params:
        RELEASE_NAME: consul
    - task: compile-release-diego
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-diego
      params:
        RELEASE_NAME: diego
    - task: compile-release-dotnet-core-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-dotnet-core-buildpack
      params:
        RELEASE_NAME: dotnet-core-buildpack
    - task: compile-release-garden-runc
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-garden-runc
      params:
        RELEASE_NAME: garden-runc
    - task: compile-release-go-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-go-buildpack
      params:
        RELEASE_NAME: go-buildpack
    - task: compile-release-java-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-java-buildpack
      params:
        RELEASE_NAME: java-buildpack
    - task: compile-release-loggregator
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-loggregator
      params:
        RELEASE_NAME: loggregator
    - task: compile-release-cf-mysql
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-cf-mysql
      params:
        RELEASE_NAME: cf-mysql
    - task: compile-release-nats
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-nats
      params:
        RELEASE_NAME: nats
    - task: compile-release-nodejs-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-nodejs-buildpack
      params:
        RELEASE_NAME: nodejs-buildpack
    - task: compile-release-php-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-php-buildpack
      params:
        RELEASE_NAME: php-buildpack
    - task: compile-release-python-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-python-buildpack
      params:
        RELEASE_NAME: python-buildpack
    - task: compile-release-routing
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-routing
      params:
        RELEASE_NAME: routing
    - task: compile-release-ruby-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-ruby-buildpack
      params:
        RELEASE_NAME: ruby-buildpack
    - task: compile-release-staticfile-buildpack
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-staticfile-buildpack
      params:
        RELEASE_NAME: staticfile-buildpack
    - task: compile-release-statsd-injector
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-statsd-injector
      params:
        RELEASE_NAME: statsd-injector
    - task: compile-release-uaa
      file: runtime-ci/tasks/compile-release-from-manifest/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
        manifest: updated-deployment-manifest
      output_mapping:
        exported-release: exported-release-uaa
      params:
        RELEASE_NAME: uaa
  - task: update-compiled-releases-ops-stemcell
    file: runtime-ci/tasks/update-compiled-releases-ops-stemcell/task.yml
    input_mapping:
      ops-files: cf-deployment-develop
      capi-release-tarball: exported-release-capi
      cf-mysql-release-tarball: exported-release-cf-mysql
      nats-release-tarball: exported-release-nats
      routing-release-tarball: exported-release-routing
      consul-release-tarball: exported-release-consul
      diego-release-tarball: exported-release-diego
      loggregator-release-tarball: exported-release-loggregator
      uaa-release-tarball: exported-release-uaa
      garden-runc-release-tarball: exported-release-garden-runc
      cflinuxfs2-release-tarball: exported-release-cflinuxfs2
      binary-buildpack-release-tarball: exported-release-binary-buildpack
      dotnet-core-buildpack-release-tarball: exported-release-dotnet-core-buildpack
      go-buildpack-release-tarball: exported-release-go-buildpack
      java-buildpack-release-tarball: exported-release-java-buildpack
      nodejs-buildpack-release-tarball: exported-release-nodejs-buildpack
      php-buildpack-release-tarball: exported-release-php-buildpack
      python-buildpack-release-tarball: exported-release-python-buildpack
      ruby-buildpack-release-tarball: exported-release-ruby-buildpack
      staticfile-buildpack-release-tarball: exported-release-staticfile-buildpack
      statsd-injector-release-tarball: exported-release-statsd-injector
      cf-smoke-tests-release-tarball: exported-release-cf-smoke-tests
      cf-syslog-drain-release-tarball: exported-release-cf-syslog-drain
      uaa-release-tarball: exported-release-uaa
      cf-networking-release-tarball: exported-release-cf-networking
  - aggregate:
    - put: binary-buildpack-release-gcs
      params:
        file: exported-release-binary-buildpack/*.tgz
        predefined_acl: publicRead
    - put: capi-release-gcs
      params:
        file: exported-release-capi/*.tgz
        predefined_acl: publicRead
    - put: cf-mysql-release-gcs
      params:
        file: exported-release-cf-mysql/*.tgz
        predefined_acl: publicRead
    - put: cf-networking-release-gcs
      params:
        file: exported-release-cf-networking/*.tgz
        predefined_acl: publicRead
    - put: cf-smoke-tests-release-gcs
      params:
        file: exported-release-cf-smoke-tests/*.tgz
        predefined_acl: publicRead
    - put: cf-syslog-drain-release-gcs
      params:
        file: exported-release-cf-syslog-drain/*.tgz
        predefined_acl: publicRead
    - put: cflinuxfs2-release-gcs
      params:
        file: exported-release-cflinuxfs2/*.tgz
        predefined_acl: publicRead
    - put: consul-release-gcs
      params:
        file: exported-release-consul/*.tgz
        predefined_acl: publicRead
    - put: diego-release-gcs
      params:
        file: exported-release-diego/*.tgz
        predefined_acl: publicRead
    - put: dotnet-core-buildpack-release-gcs
      params:
        file: exported-release-dotnet-core-buildpack/*.tgz
        predefined_acl: publicRead
    - put: garden-runc-release-gcs
      params:
        file: exported-release-garden-runc/*.tgz
        predefined_acl: publicRead
    - put: go-buildpack-release-gcs
      params:
        file: exported-release-go-buildpack/*.tgz
        predefined_acl: publicRead
    - put: java-buildpack-release-gcs
      params:
        file: exported-release-java-buildpack/*.tgz
        predefined_acl: publicRead
    - put: loggregator-release-gcs
      params:
        file: exported-release-loggregator/*.tgz
        predefined_acl: publicRead
    - put: nats-release-gcs
      params:
        file: exported-release-nats/*.tgz
        predefined_acl: publicRead
    - put: nodejs-buildpack-release-gcs
      params:
        file: exported-release-nodejs-buildpack/*.tgz
        predefined_acl: publicRead
    - put: php-buildpack-release-gcs
      params:
        file: exported-release-php-buildpack/*.tgz
        predefined_acl: publicRead
    - put: python-buildpack-release-gcs
      params:
        file: exported-release-python-buildpack/*.tgz
        predefined_acl: publicRead
    - put: routing-release-gcs
      params:
        file: exported-release-routing/*.tgz
        predefined_acl: publicRead
    - put: ruby-buildpack-release-gcs
      params:
        file: exported-release-ruby-buildpack/*.tgz
        predefined_acl: publicRead
    - put: staticfile-buildpack-release-gcs
      params:
        file: exported-release-staticfile-buildpack/*.tgz
        predefined_acl: publicRead
    - put: statsd-injector-release-gcs
      params:
        file: exported-release-statsd-injector/*.tgz
        predefined_acl: publicRead
    - put: uaa-release-gcs
      params:
        file: exported-release-uaa/*.tgz
        predefined_acl: publicRead
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-compiled-releases-ops-file
      manifest: updated-deployment-manifest
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
      OPS_FILE_NAME: use-compiled-releases.yml
      OPS_FILE_DESTINATION: operations/use-compiled-releases.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-windows-2012-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    - get: garden-windows-bosh-release
      trigger: true
      params:
        tarball: false
    - get: hwc-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: windows-utilities-release
      trigger: true
      params:
        tarball: false
    - get: windows-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-windows-releases/task-2012.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
      garden-windows-release: garden-windows-bosh-release
      hwc-buildpack-release: hwc-buildpack-release
      windows-utilities-release: windows-utilities-release
  - task: bosh-upload-windows-stemcell
    file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: windows-stemcell
      bbl-state: greengrass-env-director-state
    params:
      STEMCELL_NAME: '*.tgz'
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: windows-2012-releases
      OPS_FILES: "windows-cell.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-windows-2012-releases
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows-cell.yml
      OPS_FILE_DESTINATION: operations/windows-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-windows-2016-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    - get: winc-release
      trigger: true
      params:
        tarball: false
    - get: hwc-buildpack-release
      trigger: true
      params:
        tarball: false
    - get: windows-utilities-release
      trigger: true
      params:
        tarball: false
    - get: windows2016fs-online-release
      trigger: true
      params:
        tarball: false
    - get: windows2016-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-windows-releases/task-2016.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
      windows2016fs-release: windows2016fs-online-release
  - task: bosh-upload-windows-stemcell
    file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: windows2016-stemcell
      bbl-state: greengrass-env-director-state
    params:
      STEMCELL_NAME: '*.tgz'
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: windows-2016-releases
      OPS_FILES: "windows2016-cell.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-windows-2016-releases
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: windows2016-cell.yml
      OPS_FILE_DESTINATION: operations/windows2016-cell.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-windows-2016-offline-releases
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: greengrass-env-director-state
    - get: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
      params:
        tarball: false
    - get: windows2016fs-release
      trigger: true
      params:
        tarball: false
    - get: windows2016-stemcell
  - task: update-windows-releases
    file: runtime-ci/tasks/update-windows-releases/task-2016-offline.yml
    input_mapping:
      original-ops-file: cf-deployment-develop
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-offline-windows2016fs.yml
      OPS_FILE_DESTINATION: operations/experimental/use-offline-windows2016fs.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-bosh-dns
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: greengrass-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: bosh-dns-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bosh-dns
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bosh-dns-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bosh-dns
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-bosh-dns.yml
      UPDATED_OPS_FILE_PATH: use-bosh-dns.yml
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: bosh-dns
      OPS_FILES: "use-bosh-dns.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bosh-dns
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-bosh-dns.yml
      OPS_FILE_DESTINATION: operations/experimental/use-bosh-dns.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo
  - task: update-release-bosh-dns-rename-network-and-deployment
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bosh-dns-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bosh-dns
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/use-bosh-dns-rename-network-and-deployment.yml
      UPDATED_OPS_FILE_PATH: use-bosh-dns-rename-network-and-deployment.yml
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: cf-deployment-develop
    params:
      DEPLOYMENT_NAME_SUFFIX: bosh-dns
      OPS_FILES: "use-bosh-dns-rename-network-and-deployment.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
      VARS_FILES: "operations/example-vars-files/vars-rename-network-and-deployment.yml"
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bosh-dns
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: use-bosh-dns-rename-network-and-deployment.yml
      OPS_FILE_DESTINATION: operations/experimental/use-bosh-dns-rename-network-and-deployment.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-syslog
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: greengrass-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: syslog-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-syslog
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: syslog-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: syslog
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/addons/enable-component-syslog.yml
      UPDATED_OPS_FILE_PATH: enable-component-syslog.yml
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: cf-deployment-develop
    params:
      DEPLOYMENT_NAME_SUFFIX: syslog
      OPS_FILES: "enable-component-syslog.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
      VARS_FILES: |
        operations/addons/example-vars-files/vars-enable-component-syslog.yml
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-syslog
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-component-syslog.yml
      OPS_FILE_DESTINATION: operations/addons/enable-component-syslog.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: update-bpm
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: cf-deployment-develop
    - get: greengrass-env-director-state
    - get: cf-deployment-concourse-tasks
    - get: bpm-release
      trigger: true
      params:
        tarball: false
    - get: stemcell
      params:
        tarball: false
      passed: [ update-stemcell-and-recompile-releases ]
  - task: update-release-bpm
    file: runtime-ci/tasks/update-single-release/task.yml
    input_mapping:
      release: bpm-release
      deployment-configuration: cf-deployment-develop
      original-ops-file: cf-deployment-develop
    params:
      RELEASE_NAME: bpm
      TARGET: opsfile
      ORIGINAL_OPS_FILE_PATH: operations/experimental/enable-bpm.yml
      UPDATED_OPS_FILE_PATH: enable-bpm.yml
  - task: bosh-dry-run
    file: runtime-ci/tasks/bosh-dry-run-with-ops/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
      cf-deployment: cf-deployment-develop
      ops-files: updated-ops-file
      vars-files: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME_SUFFIX: bpm
      OPS_FILES: "enable-bpm.yml"
      SYSTEM_DOMAIN: greengrass.cf-app.com
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      DEPLOYMENT_NAME: cf-dry-run-bpm
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-develop
      ops-file: updated-ops-file
      manifest: cf-deployment-develop
    params:
      OPS_FILE_NAME: enable-bpm.yml
      OPS_FILE_DESTINATION: operations/experimental/enable-bpm.yml
  - put: cf-deployment-develop
    params:
      rebase: true
      repository: updated-repo

- name: setup-infrastructure-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: greengrass-env-director-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_CONFIG_DIR: bbl-config
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((greengrass_cf_ssl_cert))
      BBL_LB_KEY: ((greengrass_cf_ssl_cert_private_key))
      LB_DOMAIN: greengrass.cf-app.com
      BBL_ENV_NAME: greengrass-compile
    input_mapping:
      bbl-state: greengrass-env-director-state
      bbl-config: greengrass-env-director-state
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: extend-cloud-config-for-credhub-dry-run
    file: runtime-ci/tasks/bosh-extend-cloud-config/task.yml
    input_mapping:
      ops-file: greengrass-env-director-state
      bbl-state: greengrass-env-director-state
    params:
      OPS_FILE_PATH: add-credhub-lb.yml

- name: destroy-infrastructure-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: greengrass-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: greengrass-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: greengrass-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: run-bosh-cleanup-compilation
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: greengrass-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: greengrass-env-director-state
