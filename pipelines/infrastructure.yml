---
groups:
- name: fresh
  jobs:
  - add-claimed-lock-fresh
  - setup-infrastructure-fresh
  - update-infrastructure-fresh
  - destroy-infrastructure-fresh
  - remove-claimed-lock-fresh

- name: internal-services
  jobs:
  - add-claimed-lock-internal-services
  - setup-infrastructure-internal-services
  - update-infrastructure-internal-services
  - destroy-infrastructure-internal-services
  - remove-claimed-lock-internal-services

- name: lite
  jobs:
  - add-claimed-lock-lite
  - setup-infrastructure-lite
  - destroy-infrastructure-lite
  - update-infrastructure-lite
  - remove-claimed-lock-lite
  - run-bosh-cleanup-lite
  - run-bosh-cleanup-ops

- name: ops
  jobs:
  - add-claimed-lock-ops
  - setup-infrastructure-ops
  - update-infrastructure-ops
  - destroy-infrastructure-ops
  - remove-claimed-lock-ops
  - run-bosh-cleanup-ops

- name: stable
  jobs:
  - add-claimed-lock-stable
  - setup-infrastructure-stable
  - update-infrastructure-stable
  - destroy-infrastructure-stable
  - remove-claimed-lock-stable
  - run-bosh-cleanup-stable

- name: transition
  jobs:
  - add-claimed-lock-transition
  - setup-infrastructure-transition
  - update-infrastructure-transition
  - destroy-infrastructure-transition
  - remove-claimed-lock-transition

- name: upgrade
  jobs:
  - add-claimed-lock-upgrade
  - setup-infrastructure-upgrade
  - update-infrastructure-upgrade
  - destroy-infrastructure-upgrade
  - run-bosh-cleanup-upgrade
  - remove-claimed-lock-upgrade

- name: experimental
  jobs:
  - setup-infrastructure-experimental

resources:
# Pools
- name: fresh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: ((relint_ci_pools_readwrite_deploy_key))

- name: internal-services-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/internal-services
    private_key: ((relint_ci_pools_readwrite_deploy_key))

- name: lite-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/lite
    private_key: ((relint_ci_pools_readwrite_deploy_key))

- name: ops-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/ops
    private_key: ((relint_ci_pools_readwrite_deploy_key))

- name: stable-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/stable
    private_key: ((relint_ci_pools_readwrite_deploy_key))

- name: transition-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/transition
    private_key: ((relint_ci_pools_readwrite_deploy_key))

- name: upgrade-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/upgrade
    private_key: ((relint_ci_pools_readwrite_deploy_key))

# Code repos
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

# Env repos
- name: bellatrix-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bellatrix-env.git
    private_key: ((bellatrix_env_readwrite_deploy_key))
    paths:
    - bbl-state

- name: dumbledore-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/dumbledore-env.git
    private_key: ((dumbledore_env_readwrite_deploy_key))
    paths:
    - bbl-state

- name: hagrid-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hagrid-env.git
    private_key: ((hagrid_env_readwrite_deploy_key))

- name: hermione-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/hermione-env.git
    private_key: ((hermione_env_private_key))
    paths:
    - bbl-state

- name: luna-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/luna-env.git
    private_key: ((luna_env_readwrite_deploy_key))
    paths:
    - bbl-state

- name: minerva-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/minerva-env.git
    private_key: ((minerva_env_readwrite_deploy_key))
    paths:
    - bbl-state

- name: snitch-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/snitch-env.git
    private_key: ((snitch_env_private_key))
    paths:
    - bbl-state

- name: trelawney-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/trelawney-env.git
    private_key: ((trelawney_env_readwrite_deploy_key))
    paths:
    - bbl-state

# Time
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 168h

- name: daily
  type: time
  source:
    start: 3:00 -0700
    stop: 3:30 -0700
    interval: 24h

jobs:
# Add claimed locks
- name: add-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {add_claimed: fresh-pool}

- name: add-claimed-lock-internal-services
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: dumbledore
    output_mapping:
      pool-resource: internal-services-pool
  - put: internal-services-pool
    params: {add_claimed: internal-services-pool}

- name: add-claimed-lock-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {add_claimed: lite-pool}

- name: add-claimed-lock-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: ops-pool
  - put: ops-pool
    params: {add_claimed: ops-pool}

- name: add-claimed-lock-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: bellatrix
    output_mapping:
      pool-resource: stable-pool
  - put: stable-pool
    params: {add_claimed: stable-pool}

- name: add-claimed-lock-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: minerva
    output_mapping:
      pool-resource: transition-pool
  - put: transition-pool
    params: {add_claimed: transition-pool}

- name: add-claimed-lock-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: upgrade-pool
  - put: upgrade-pool
    params: {add_claimed: upgrade-pool}

# Setup infrastructure
- name: setup-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: fresh-pool
    trigger: true
    passed: [ add-claimed-lock-fresh ]
  - aggregate:
    - get: runtime-ci
    - get: luna-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_ENV_NAME: luna-fresh
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_IAAS: gcp
      BBL_LB_CERT: ((luna_cf_ssl_cert))
      BBL_LB_KEY: ((luna_cf_ssl_cert_private_key))
      LB_DOMAIN: luna.cf-app.com
    input_mapping:
      env-repo: luna-env-director-state
      ops-files: luna-env-director-state
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: fresh-pool
    params: {release: fresh-pool}

- name: setup-infrastructure-experimental
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: runtime-ci
    - get: hagrid-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_STATE_DIR: bbl-state
      BBL_ENV_NAME: hagrid-fresh
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_IAAS: gcp
      BBL_LB_CERT: ((hagrid_cf_ssl_cert))
      BBL_LB_KEY: ((hagrid_cf_ssl_cert_private_key))
      LB_DOMAIN: hagrid.cf-app.com
    input_mapping:
      env-repo: hagrid-env-director-state
      ops-files: hagrid-env-director-state
    ensure:
      put: hagrid-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: setup-infrastructure-internal-services
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: internal-services-pool
    trigger: true
    passed: [ add-claimed-lock-internal-services ]
  - aggregate:
    - get: runtime-ci
    - get: dumbledore-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_STATE_DIR: bbl-state
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: ((dumbledore_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((dumbledore_aws_secret_access_key))
      SKIP_LB_CREATION: true
      BBL_ENV_NAME: dumbledore-upgrade
    input_mapping:
      env-repo: dumbledore-env-director-state
      ops-files: dumbledore-env-director-state
    ensure:
      put: dumbledore-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: internal-services-pool
    params: {release: internal-services-pool}

- name: setup-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: lite-pool
    trigger: true
    passed: [ add-claimed-lock-lite ]
  - aggregate:
    - get: runtime-ci
    - get: snitch-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_ENV_NAME: snitch-lite
      IS_BOSH_LITE: true
    input_mapping:
      env-repo: snitch-env-director-state
      ops-files: snitch-env-director-state
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: lite-pool
    params: {release: lite-pool}

- name: setup-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: ops-pool
    trigger: true
    passed: [ add-claimed-lock-ops ]
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: trelawney-env-director-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((trelawney_cf_ssl_cert))
      BBL_LB_KEY: ((trelawney_cf_ssl_cert_private_key))
      LB_DOMAIN: trelawney.cf-app.com
      BBL_ENV_NAME: trelawney-fresh
    input_mapping:
      env-repo: trelawney-env-director-state
      ops-files: trelawney-env-director-state
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: ops-pool
    params: {release: ops-pool}

- name: setup-infrastructure-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: stable-pool
    trigger: true
    passed: [ add-claimed-lock-stable ]
  - aggregate:
    - get: runtime-ci
    - get: bellatrix-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_REGION: us-central1
      BBL_LB_CERT: ((bellatrix_cf_ssl_cert))
      BBL_LB_KEY: ((bellatrix_cf_ssl_cert_private_key))
      LB_DOMAIN: bellatrix.cf-app.com
      BBL_ENV_NAME: bellatrix-stable
    input_mapping:
      env-repo: bellatrix-env-director-state
      ops-files: bellatrix-env-director-state
    ensure:
      put: bellatrix-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: stable-pool
    params: {release: stable-pool}

- name: setup-infrastructure-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: transition-pool
    trigger: true
    passed: [ add-claimed-lock-transition ]
  - aggregate:
    - get: runtime-ci
    - get: minerva-env-director-state
    - get: cf-deployment-concourse-tasks
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: ((minerva_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((minerva_aws_secret_access_key))
      BBL_LB_CERT: ((minerva_lbs_ssl_cert))
      BBL_LB_KEY: ((minerva_lbs_ssl_signing_key))
      LB_DOMAIN: minerva.cf-app.com
      BBL_ENV_NAME: minerva-upgrade
    input_mapping:
      env-repo: minerva-env-director-state
      ops-files: minerva-env-director-state
    ensure:
      put: minerva-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: transition-pool
    params: {release: transition-pool}

- name: setup-infrastructure-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - get: upgrade-pool
    trigger: true
    passed: [ add-claimed-lock-upgrade ]
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: hermione-env-director-state
    - get: runtime-ci
    - get: bosh-deployment
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
      BBL_LB_CERT: ((hermione_lbs_ssl_cert))
      BBL_LB_KEY: ((hermione_lbs_ssl_signing_key))
      BBL_LB_CERT_CHAIN: ((hermione_lbs_ssl_cert_chain))
      LB_DOMAIN: hermione.cf-app.com
      BBL_ENV_NAME: hermione-upgrade
      OPS_FILES: "local-dns.yml"
    input_mapping:
      env-repo: hermione-env-director-state
      ops-files: bosh-deployment
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-env-repo
        rebase: true
  - put: upgrade-pool
    params: {release: upgrade-pool}

# Update infrastructure
- name: update-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: fresh-pool
        params: {acquire: true}
      - get: runtime-ci
      - get: luna-env-director-state
      - get: cf-deployment-concourse-tasks
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((luna_cf_ssl_cert))
        BBL_LB_KEY: ((luna_cf_ssl_cert_private_key))
        LB_DOMAIN: luna.cf-app.com
        BBL_ENV_NAME: luna-fresh
      input_mapping:
        env-repo: luna-env-director-state
        ops-files: luna-env-director-state
      ensure:
        put: luna-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: fresh-pool
      params: {release: fresh-pool}

- name: update-infrastructure-internal-services
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: internal-services-pool
        params: {acquire: true}
      - get: dumbledore-env-director-state
      - get: cf-deployment-concourse-tasks
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_STATE_DIR: bbl-state
        BBL_IAAS: aws
        BBL_AWS_REGION: us-west-2
        BBL_AWS_ACCESS_KEY_ID: ((dumbledore_aws_access_key_id))
        BBL_AWS_SECRET_ACCESS_KEY: ((dumbledore_aws_secret_access_key))
        SKIP_LB_CREATION: true
        BBL_ENV_NAME: dumbledore-upgrade
      input_mapping:
        env-repo: dumbledore-env-director-state
        ops-files: dumbledore-env-director-state
      ensure:
        put: dumbledore-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: internal-services-pool
      params: {release: internal-services-pool}

- name: update-infrastructure-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: lite-pool
        params: {acquire: true}
      - get: runtime-ci
      - get: snitch-env-director-state
      - get: cf-deployment-concourse-tasks
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_ENV_NAME: snitch-lite
        IS_BOSH_LITE: true
      input_mapping:
        env-repo: snitch-env-director-state
        ops-files: snitch-env-director-state
      ensure:
        put: snitch-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: lite-pool
      params: {release: lite-pool}

- name: update-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: ops-pool
        params: {acquire: true}
      - get: runtime-ci
      - get: trelawney-env-director-state
      - get: cf-deployment-concourse-tasks
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((trelawney_cf_ssl_cert))
        BBL_LB_KEY: ((trelawney_cf_ssl_cert_private_key))
        LB_DOMAIN: trelawney.cf-app.com
        BBL_ENV_NAME: trelawney-ops
      input_mapping:
        env-repo: trelawney-env-director-state
        ops-files: trelawney-env-director-state
      ensure:
        put: trelawney-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: ops-pool
      params: {release: ops-pool}

- name: update-infrastructure-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: stable-pool
        params: {acquire: true}
      - get: runtime-ci
      - get: bellatrix-env-director-state
      - get: cf-deployment-concourse-tasks
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((bellatrix_cf_ssl_cert))
        BBL_LB_KEY: ((bellatrix_cf_ssl_cert_private_key))
        LB_DOMAIN: bellatrix.cf-app.com
        BBL_ENV_NAME: bellatrix-stable
      input_mapping:
        env-repo: bellatrix-env-director-state
        ops-files: bellatrix-env-director-state
      ensure:
        put: bellatrix-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: stable-pool
      params: {release: stable-pool}

- name: update-infrastructure-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: upgrade-pool
        params: {acquire: true}
      - get: hermione-env-director-state
      - get: cf-deployment-concourse-tasks
      - get: bosh-deployment
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: aws
        BBL_AWS_REGION: us-west-2
        BBL_AWS_ACCESS_KEY_ID: ((hermione_aws_access_key_id))
        BBL_AWS_SECRET_ACCESS_KEY: ((hermione_aws_secret_access_key))
        BBL_LB_CERT: ((hermione_lbs_ssl_cert))
        BBL_LB_KEY: ((hermione_lbs_ssl_signing_key))
        BBL_LB_CERT_CHAIN: ((hermione_lbs_ssl_cert_chain))
        LB_DOMAIN: hermione.cf-app.com
        BBL_ENV_NAME: hermione-upgrade
        OPS_FILES: "local-dns.yml"
      input_mapping:
        env-repo: hermione-env-director-state
        ops-files: bosh-deployment
      ensure:
        put: hermione-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: upgrade-pool
      params: {release: upgrade-pool}

- name: update-infrastructure-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - put: transition-pool
        params: {acquire: true}
      - get: minerva-env-director-state
      - get: cf-deployment-concourse-tasks
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: aws
        BBL_AWS_REGION: us-west-2
        BBL_AWS_ACCESS_KEY_ID: ((minerva_aws_access_key_id))
        BBL_AWS_SECRET_ACCESS_KEY: ((minerva_aws_secret_access_key))
        BBL_LB_CERT: ((minerva_lbs_ssl_cert))
        BBL_LB_KEY: ((minerva_lbs_ssl_signing_key))
        LB_DOMAIN: minerva.cf-app.com
        BBL_ENV_NAME: minerva-upgrade
      input_mapping:
        env-repo: minerva-env-director-state
        ops-files: minerva-env-director-state
      ensure:
        put: minerva-env-director-state
        params:
          repository: updated-env-repo
          rebase: true
    - put: transition-pool
      params: {release: transition-pool}

# Destroy infrastructure
- name: destroy-infrastructure-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: fresh-pool
      params: {claim: luna}
    - get: luna-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      env-repo: luna-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: luna-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: luna-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: destroy-infrastructure-internal-services
  serial_groups: [dumbledore]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: internal-services-pool
      params: {claim: dumbledore}
    - get: dumbledore-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - try:
      do:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          env-repo: dumbledore-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: dumbledore-env-director-state
    params:
      BBL_STATE_DIR: bbl-state
      BBL_AWS_ACCESS_KEY_ID: ((dumbledore_aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((dumbledore_aws_secret_access_key))
    ensure:
      put: dumbledore-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: destroy-infrastructure-lite
  serial_groups: [snitch]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: lite-pool
      params: {claim: snitch}
    - get: snitch-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - try:
      do:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          env-repo: snitch-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: snitch-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: snitch-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: destroy-infrastructure-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: ops-pool
      params: {claim: trelawney}
    - get: trelawney-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: trelawney-env-director-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
    ensure:
      put: trelawney-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: destroy-infrastructure-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: stable-pool
      params: {claim: bellatrix}
    - get: bellatrix-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      env-repo: bellatrix-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: bellatrix-env-director-state
    ensure:
      put: bellatrix-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: destroy-infrastructure-transition
  serial_groups: [minerva]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: transition-pool
      params: {claim: minerva}
    - get: minerva-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - try:
      do:
      - task: guarantee-no-existing-cf-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          env-repo: minerva-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: minerva-env-director-state
    ensure:
      put: minerva-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

- name: destroy-infrastructure-upgrade
  serial_groups: [hermione]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - put: upgrade-pool
      params: {claim: hermione}
    - get: hermione-env-director-state
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      env-repo: hermione-env-director-state
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      env-repo: hermione-env-director-state
    ensure:
      put: hermione-env-director-state
      params:
        repository: updated-env-repo
        rebase: true

# Remove claimed locks
- name: remove-claimed-lock-fresh
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: fresh-pool
    passed: [ destroy-infrastructure-fresh ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: luna
    output_mapping:
      pool-resource: fresh-pool
  - put: fresh-pool
    params: {remove: fresh-pool}

- name: remove-claimed-lock-internal-services
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: internal-services-pool
    passed: [ destroy-infrastructure-internal-services ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: dumbledore
    output_mapping:
      pool-resource: internal-services-pool
  - put: internal-services-pool
    params: {remove: internal-services-pool}

- name: remove-claimed-lock-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: lite-pool
    passed: [ destroy-infrastructure-lite ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: snitch
    output_mapping:
      pool-resource: lite-pool
  - put: lite-pool
    params: {remove: lite-pool}

- name: remove-claimed-lock-ops
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: ops-pool
    passed: [ destroy-infrastructure-ops ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: trelawney
    output_mapping:
      pool-resource: ops-pool
  - put: ops-pool
    params: {remove: ops-pool}

- name: remove-claimed-lock-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: stable-pool
    passed: [ destroy-infrastructure-stable ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: bellatrix
    output_mapping:
      pool-resource: stable-pool
  - put: stable-pool
    params: {remove: stable-pool}

- name: remove-claimed-lock-transition
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: transition-pool
    passed: [ destroy-infrastructure-transition ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: minerva
    output_mapping:
      pool-resource: transition-pool
  - put: transition-pool
    params: {remove: transition-pool}

- name: remove-claimed-lock-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - get: runtime-ci
  - get: upgrade-pool
    passed: [ destroy-infrastructure-upgrade ]
    trigger: true
  - task: prepare-to-modify-pool-resource
    file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
    params:
      NAME: hermione
    output_mapping:
      pool-resource: upgrade-pool
  - put: transition-pool
    params: {remove: upgrade-pool}

# BOSH cleanup
- name: run-bosh-cleanup-lite
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: snitch-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: snitch-env-director-state

- name: run-bosh-cleanup-ops
  build_logs_to_retain: 100
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: trelawney-env-director-state
      passed: [ setup-infrastructure-ops ]
    - get: weekly
      trigger: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      env-repo: trelawney-env-director-state

- name: run-bosh-cleanup-stable
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: bellatrix-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: bellatrix-env-director-state

- name: run-bosh-cleanup-upgrade
  serial: true
  public: true
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: hermione-env-director-state
      - get: daily
        trigger: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        env-repo: hermione-env-director-state
