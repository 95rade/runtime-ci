#!/bin/bash

set -xeu

function cloudformation_stack_status() {
  aws cloudformation describe-stacks --stack-name "${1}" | jq -r .Stacks[].StackStatus
}

function wait_on_cloudformation() {
  local stack_name
  stack_name="${1}"

  local half_an_hour
  half_an_hour="$((30 * 60))"

  local deadline_in_seconds
  deadline_in_seconds=$(($(date +%s) + ${half_an_hour}))

  while cloudformation_stack_status ${stack_name} | grep IN_PROGRESS ; do
    echo "CloudFormation stack '${stack_name}' still in progress..."

    local remaining_time_in_seconds
    remaining_time_in_seconds="$((deadline_in_seconds - $(date +%s)))"

    if [ "${remaining_time_in_seconds}" -gt 0 ]; then
      echo "   Waiting ${remaining_time_in_seconds} more seconds."
      sleep 15
    else
      echo "   Waited ${half_an_hour} seconds, aborting."
      exit 1
    fi
  done

  status="$(cloudformation_stack_status "${stack_name}")"

  if echo "${status}" | grep ROLLBACK ; then
    echo "CloudFormation failed to apply template: ${status}"
    exit 1
  fi

  if ! echo "${status}" | grep COMPLETE ; then
    echo "CloudFormation failed to apply template: ${status}"
    exit 1
  fi
}


RELEASE_NAME="${RELEASE_NAME:?"\$RELEASE_NAME not set"}"
STACK_NAME="${RELEASE_NAME}-buckets"
BUCKET_NAME="${RELEASE_NAME}-release-blobs"

set +x
echo "Loading AWS creds"
source "oss-s3-buckets-creds/$BUCKET_CREDENTIALS_FILE"
set -x

STACK_OPERATION=create-stack
if aws cloudformation describe-stacks --stack-name "${STACK_NAME}" > /dev/null; then
  STACK_OPERATION=update-stack
fi

aws cloudformation "$STACK_OPERATION" \
  --stack-name "${STACK_NAME}" \
  --parameters ParameterKey=BucketName,ParameterValue=${BUCKET_NAME} ParameterKey=CurrentTimestamp,ParameterValue="$(date)" \
  --template-body "file://runtime-ci/templates/bucket.json" \
  --capabilities CAPABILITY_IAM

wait_on_cloudformation "${STACK_NAME}"
