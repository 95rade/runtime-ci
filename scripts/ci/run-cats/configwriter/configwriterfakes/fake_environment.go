// This file was generated by counterfeiter
package configwriterfakes

import (
	"sync"

	"github.com/cloudfoundry/runtime-ci/scripts/ci/run-cats/configwriter"
)

type FakeEnvironment struct {
	GetBooleanStub        func(string) (bool, error)
	getBooleanMutex       sync.RWMutex
	getBooleanArgsForCall []struct {
		arg1 string
	}
	getBooleanReturns struct {
		result1 bool
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeEnvironment) GetBoolean(arg1 string) (bool, error) {
	fake.getBooleanMutex.Lock()
	fake.getBooleanArgsForCall = append(fake.getBooleanArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.recordInvocation("GetBoolean", []interface{}{arg1})
	fake.getBooleanMutex.Unlock()
	if fake.GetBooleanStub != nil {
		return fake.GetBooleanStub(arg1)
	} else {
		return fake.getBooleanReturns.result1, fake.getBooleanReturns.result2
	}
}

func (fake *FakeEnvironment) GetBooleanCallCount() int {
	fake.getBooleanMutex.RLock()
	defer fake.getBooleanMutex.RUnlock()
	return len(fake.getBooleanArgsForCall)
}

func (fake *FakeEnvironment) GetBooleanArgsForCall(i int) string {
	fake.getBooleanMutex.RLock()
	defer fake.getBooleanMutex.RUnlock()
	return fake.getBooleanArgsForCall[i].arg1
}

func (fake *FakeEnvironment) GetBooleanReturns(result1 bool, result2 error) {
	fake.GetBooleanStub = nil
	fake.getBooleanReturns = struct {
		result1 bool
		result2 error
	}{result1, result2}
}

func (fake *FakeEnvironment) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getBooleanMutex.RLock()
	defer fake.getBooleanMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeEnvironment) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ configwriter.Environment = new(FakeEnvironment)
