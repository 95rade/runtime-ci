#!/bin/bash

set -eux

cf_router_load_balancer_url() {
  bbl \
    --state-dir bbl-infrastructure \
    lbs \
    | grep Router | sed 's/.*\[\(.*elb.amazonaws.com.*\)\].*/\1/'
}

cf_ssh_proxy_load_balancer_url() {
  bbl \
    --state-dir bbl-infrastructure \
    lbs \
    | grep "SSH Proxy" | sed 's/.*\[\(.*elb.amazonaws.com.*\)\].*/\1/'
}

aws_hosted_zone_id_from_partial_name() {
  aws route53 list-hosted-zones \
    | jq -r ".HostedZones[] | select(.Name | contains(\"${1}\")) | .Id"
}

write_change_file() {
  cat << EOF > "$1"
{
    "Comment": "Delete *.$2 and ssh.$2 to no longer point to ELBs",
    "Changes": [
        {
            "Action": "DELETE",
            "ResourceRecordSet": {
                "Name": "*.$2.",
                "Type": "CNAME",
                "TTL": 300,
                "ResourceRecords": [
                    {
                        "Value": "${3}"
                    }
                ]
            }
        },
        {
            "Action": "DELETE",
            "ResourceRecordSet": {
                "Name": "ssh.$2.",
                "Type": "CNAME",
                "TTL": 300,
                "ResourceRecords": [
                    {
                        "Value": "${4}"
                    }
                ]
            }
        }

    ]
}
EOF
}

post_change_file() {
  set +e
  OUTPUT=$(aws route53 change-resource-record-sets \
    --hosted-zone-id "${2}" \
    --change-batch "file://${1}"\
    2>&1)
  EXIT_STATUS=$?
  set -e

  if [[ "$EXIT_STATUS" -ne 0 ]]; then
    if ! echo "$OUTPUT" | grep -q "not found"; then
      echo "$OUTPUT"
      exit 1
    else
      echo "Route already deleted. Proceeding..."
    fi
  fi
}

wait_for_post_change_to_get_insync() {
  set -e
  local hosted_zone_id="$1"
  for n in $(seq 1 60); do
    list_resource_record_set_output=$(aws --output text route53 list-resource-record-sets --hosted-zone-id $hosted_zone_id --query 'ResourceRecordSets[?Type==`CNAME`].Name' | wc -l | awk '{print $1}')
    if [ $list_resource_record_set_output == 0 ]; then
      break
    fi
    sleep 1
  done
  if [ $list_resource_record_set_output -gt 0 ]; then
    echo "The following Recordsets have not been deleted after waiting ~1 minute. Failing."
    aws --output table route53 list-resource-record-sets --hosted-zone-id $hosted_zone_id --query 'ResourceRecordSets[?Type==`CNAME`]'
    exit 1
  fi
}

delete_hosted_zone() {
  local hosted_zone_id="$1"
  local number_of_hosted_zone=$(aws --output text route53 list-hosted-zones --query "HostedZones[?Id==\`${hosted_zone_id}\`].Name" | wc -l | awk '{print $1}')
  if [ $number_of_hosted_zone -gt 0 ]; then
    aws route53 delete-hosted-zone --id $hosted_zone_id
  else
    echo "HostedZone does not exist. Skipping deletion..."
  fi
}

main() {
  pushd env-repo
    cf_router_lb_url=$(cf_router_load_balancer_url)

    cf_ssh_proxy_lb_url=$(cf_ssh_proxy_load_balancer_url)

    aws_hosted_zone_id=$(aws_hosted_zone_id_from_partial_name "${DOMAIN}")

    if [ -z "$aws_hosted_zone_id" ]; then
      echo "HostedZone not found. Exiting..."
      exit 0
    fi

    change_file=/tmp/change_file

    write_change_file "${change_file}" "${DOMAIN}" "${cf_router_lb_url}" "${cf_ssh_proxy_lb_url}"

    post_change_file "${change_file}" "${aws_hosted_zone_id}"

    wait_for_post_change_to_get_insync "${aws_hosted_zone_id}"

    delete_hosted_zone "${aws_hosted_zone_id}"
  popd
}

main
