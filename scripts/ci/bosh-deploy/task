#!/bin/bash
set -eux

BOSH_TARGET=$(cat "target/${TARGET_FILE}")
export BOSH_USER=$(cat username/"${USERNAME_FILE}")
BOSH_MANIFEST="manifest/${MANIFEST_FILE}"
set +x
export BOSH_PASSWORD=$(cat "password/${PASSWORD_FILE}")
BOSH_CA_CERT="ca-cert/${CA_CERT_FILE}"
DEPLOYMENT_NAME=$(grep -E "^name:" "$BOSH_MANIFEST" | awk '{print $2}')

ops_file_argument=""
deployment_vars_store_argument=""

if [ "${OPS_FILE}" != "" ]; then
  ops_file_argument="-o manifest/${OPS_FILE}"
fi

if [ "${DEPLOYMENT_VARS_STORE}" != "" ]; then
  deployment_vars_store_argument="--vars-store manifest-properties/${DEPLOYMENT_VARS_STORE} -v system_domain=${SYSTEM_DOMAIN}"
fi

function commit_vars_store {
  pushd manifest-properties
    if [[ -n $(git status --porcelain) ]]; then
      git config user.name "CF MEGA BOT"
      git config user.email "cf-mega@pivotal.io"
      git add .
      git commit -m "Update vars store"
    fi
  popd

  shopt -s dotglob
  cp -R manifest-properties/* updated-vars-store/
}

trap commit_vars_store EXIT

echo "bosh -n -d ${DEPLOYMENT_NAME} -e ${BOSH_TARGET} --ca-cert=${BOSH_CA_CERT} deploy ${deployment_vars_store_argument} ${ops_file_argument} ${BOSH_MANIFEST}"
bosh -n interpolate ${deployment_vars_store_argument} ${ops_file_argument} --var-errs ${BOSH_MANIFEST} > /dev/null

if [ "${DEPLOYMENT_VARS_STORE}" != "" ]; then
  set +x
  cat manifest-properties/integration_config_template.json | \
    sed "s/REPLACE_ME/\"$(bosh int ${BOSH_MANIFEST} --path=/instance_groups/name=uaa/jobs/name=uaa/properties/uaa/scim/users/name=admin/password -l manifest-properties/${DEPLOYMENT_VARS_STORE})\"/" \
    > manifest-properties/integration_config.json
  set -x
fi

bosh \
  -n \
  -d "${DEPLOYMENT_NAME}" \
  -e "${BOSH_TARGET}" \
  --ca-cert="${BOSH_CA_CERT}" \
  deploy \
  $deployment_vars_store_argument \
  $ops_file_argument \
  "${BOSH_MANIFEST}"

set -x
