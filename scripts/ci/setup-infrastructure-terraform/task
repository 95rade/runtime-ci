#!/bin/bash

# This concourse task results in:
# 1. A terraformed GCP environment
# 2. Bosh create-env manifest complete with ca-certs, credentials, etc.
# 3. Files for targeting the new bosh director when deployed
set -xeu

export DIRECTOR_PASSWORD=`openssl rand -base64 32`
export DIRECTOR_USERNAME=user-`openssl rand -base64 32`
export DIRECTOR_SSH_KEY_PATH=env-repo/keys/ssh-key

function commit {
  pushd env-repo
    if [[ -n $(git status --porcelain) ]]; then
      git config user.name "CF MEGA BOT"
      git config user.email "cf-mega@pivotal.io"
      git add .
      git commit -m "Commit terraform state and bosh manifest"
    fi
  popd
}

root_dir=$PWD
infrastructure_task_dir=${root_dir}/runtime-ci/scripts/ci/setup-infrastructure-terraform/

pushd env-repo
  pushd terraform
    export GOOGLE_CREDENTIALS=$(cat google_credentials.json)
    set +x
    echo 'terraform apply'
    terraform apply
    gcloud config set project cf-release-integration-141222
    gcloud config set compute/region us-west1
    gcloud config set compute/zone us-west1-a
    gcloud auth activate-service-account 815441650186-compute@developer.gserviceaccount.com --key-file google_credentials.json
    export DIRECTOR_IP=$(gcloud compute addresses describe dobby-director-address | grep address: | awk '{print $2}')
  popd
  pushd bosh-init
    ip_filename=`printf ${DIRECTOR_IP} | tr . _`
    ssh-keygen keys/key -C vcap
    ${infrastructure_task_dir}/generate-certs.sh director ${DIRECTOR_IP} ${ip_filename} ${root_dir}/env-repo
    ${infrastructure_task_dir}/inject_configuration.rb ${root_dir}/env-repo ${ip_filename}
  popd
popd

echo 'commit'
commit
set -x

shopt -s dotglob
cp -R env-repo/* updated-env-repo/
echo $DIRECTOR_USERNAME > bosh-username/bosh-username
echo $DIRECTOR_PASSWORD > bosh-password/bosh-password
echo $DIRECTOR_IP > bosh-target/director-ip
cp env-repo/bosh-init/certs/rootCA.pem bosh-ca-cert/ca.pem
