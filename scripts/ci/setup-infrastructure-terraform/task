#!/bin/bash

# This concourse task results in:
# 1. A terraformed GCP environment
# 2. Bosh create-env manifest complete with ca-certs, credentials, etc.
# 3. Files for targeting the new bosh director when deployed
set -xeu

export DIRECTOR_PASSWORD=`openssl rand -base64 32`
export DIRECTOR_USERNAME=user-`openssl rand -base64 32`
export DIRECTOR_SSH_KEY_PATH=keys/ssh-key

function commit {
  pushd env-repo
    if [[ -n $(git status --porcelain) ]]; then
      git config user.name "CF MEGA BOT"
      git config user.email "cf-mega@pivotal.io"
      git add .
      git commit -m "Commit terraform state and bosh ops file"
    fi
  popd
}

root_dir=$PWD
infrastructure_task_dir=${root_dir}/runtime-ci/scripts/ci/setup-infrastructure-terraform/

pushd env-repo/infrastructure
	# TODO this whole section should use inputs for region, zone, project-id, etc...
  pushd terraform
    set +x
    echo 'terraform apply'
    export GOOGLE_CREDENTIALS=$(cat google_credentials.json)
    terraform apply
    gcloud config set project cf-release-integration-141222
    gcloud config set compute/region us-central1
    gcloud config set compute/zone us-central1-a
    gcloud auth activate-service-account 815441650186-compute@developer.gserviceaccount.com --key-file google_credentials.json
    export DIRECTOR_IP=$(gcloud compute addresses describe dobby-director-address | grep address: | awk '{print $2}')
    export CF_STATIC_IP=$(gcloud compute addresses describe cf-static-ip | grep address: | awk '{print $2}')
    export DIEGO_SSH_STATIC_IP=$(gcloud compute addresses describe diego-ssh-static-ip | grep address: | awk '{print $2}')
  popd
  pushd bosh-init
    if [ ! -e ${DIRECTOR_SSH_KEY_PATH} ]; then
      mkdir -p `dirname ${DIRECTOR_SSH_KEY_PATH}`
      ssh-keygen -t rsa -f ${DIRECTOR_SSH_KEY_PATH} -C vcap  -N ""
      paste -d: <(echo vcap) ${DIRECTOR_SSH_KEY_PATH}.pub > ${DIRECTOR_SSH_KEY_PATH}.gcp_pub
      gcloud compute project-info add-metadata --metadata-from-file sshKeys=${DIRECTOR_SSH_KEY_PATH}.gcp_pub
    fi

    ${infrastructure_task_dir}/generate-certs.sh director ${DIRECTOR_IP} ${root_dir}/env-repo/infrastructure/bosh-init

    echo ${DIRECTOR_USERNAME} > username
    echo ${DIRECTOR_PASSWORD} > password
    echo ${DIRECTOR_IP} > bosh-target
    echo ${CF_STATIC_IP} > cf-api-target
    echo ${DIEGO_SSH_STATIC_IP} > diego-ssh-target
  popd
popd

output_deployment_env_vars() {
  ruby -ryaml -e 'puts ({
    "google_cpi_json_key" => File.read("env-repo/infrastructure/terraform/google_credentials.json"),
    "director_cert" => File.read("env-repo/infrastructure/bosh-init/certs/director.crt"),
    "director_key" => File.read("env-repo/infrastructure/bosh-init/certs/director.key"),
    "director_ip" => ENV["DIRECTOR_IP"],
    "director_mbus_address" => "https://mbus:mbus-password@#{ENV[%(DIRECTOR_IP)]}:6868",
    "director_ssh_key_path" => ENV["DIRECTOR_SSH_KEY_PATH"],
    "director_username" => ENV["DIRECTOR_USERNAME"],
    "director_password" => ENV["DIRECTOR_PASSWORD"]
  }).to_yaml'
}

output_deployment_env_vars > ${root_dir}/env-repo/infrastructure/bosh-init/deployment-env-vars.yml

echo 'commit'
commit
set -x

shopt -s dotglob
cp -R env-repo/* updated-env-repo/
