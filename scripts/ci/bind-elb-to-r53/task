#!/bin/bash

set -eux

cf_router_load_balancer_url() {
  bbl \
    --state-dir bbl-infrastructure \
    lbs \
    | grep Router | sed 's/.*\[\(.*elb.amazonaws.com.*\)\].*/\1/'
}

cf_ssh_proxy_load_balancer_url() {
  bbl \
    --state-dir bbl-infrastructure \
    lbs \
    | grep "SSH Proxy" | sed 's/.*\[\(.*elb.amazonaws.com.*\)\].*/\1/'
}

get_hosted_zone_id_from_create_hosted_zone_response() {
  create_hosted_zone_response_file="$1"
  jq .HostedZone.Id $create_hosted_zone_response_file | awk -F/ '{print $3}' | tr -d \"
}

aws_hosted_zone_id_from_partial_name() {
  set +u
  list_hosted_zone_id_response=$(aws route53 list-hosted-zones \
    | jq -r ".HostedZones[] | select(.Name | contains(\"${1}\")) | .Id")

  if [ -z $list_hosted_zone_id_response ]; then
    created_hosted_zone_response_temp_file=$(mktemp)
    aws route53 create-hosted-zone --name ${1} --caller-reference $(date "+%s") --hosted-zone-config Comment="Create hosted zone for ${1}" > $created_hosted_zone_response_temp_file
    create_hosted_zone_id=$(get_hosted_zone_id_from_create_hosted_zone_response $created_hosted_zone_response_temp_file)
    echo $create_hosted_zone_id
  else
    echo $list_hosted_zone_id_response
  fi
  set -u
}

assert_nameserver_exists() {
  local domain="${1}"
  local hosted_zone_id="${2}"
  local retry=5

  until [ $retry -le 0 ]; do
    nssearch_result="$(dig +nssearch $domain)"
    if [ -n "$nssearch_result" ]; then
      exit 0
    fi
    sleep 1
    retry=$[$retry-1]
  done

  echo "You should create an NS record in an authoritative DNS account with the following NS values: "
  aws --output table route53 list-resource-record-sets --hosted-zone-id $hosted_zone_id --query='ResourceRecordSets[?Type==`NS`].ResourceRecords[*].Value'
  exit 1
}

write_change_file() {
  cat << EOF > "$1"
{
    "Comment": "Update *.$2 and ssh.$2 to point to ELBs",
    "Changes": [
        {
            "Action": "UPSERT",
            "ResourceRecordSet": {
                "Name": "*.$2.",
                "Type": "CNAME",
                "TTL": 300,
                "ResourceRecords": [
                    {
                        "Value": "${3}"
                    }
                ]
            }
        },
        {
            "Action": "UPSERT",
            "ResourceRecordSet": {
                "Name": "ssh.$2.",
                "Type": "CNAME",
                "TTL": 300,
                "ResourceRecords": [
                    {
                        "Value": "${4}"
                    }
                ]
            }
        }
    ]
}
EOF
}

post_change_file() {
  aws route53 change-resource-record-sets \
    --hosted-zone-id "${2}" \
    --change-batch "file://${1}"
}

main() {
  pushd env-repo
    cf_router_lb_url=$(cf_router_load_balancer_url)

    cf_ssh_proxy_lb_url=$(cf_ssh_proxy_load_balancer_url)

    aws_hosted_zone_id=$(aws_hosted_zone_id_from_partial_name "${DOMAIN}")

    change_file=/tmp/change_file

    write_change_file "${change_file}" "${DOMAIN}" "${cf_router_lb_url}" "${cf_ssh_proxy_lb_url}"

    post_change_file "${change_file}" "${aws_hosted_zone_id}"

    assert_nameserver_exists "${DOMAIN}" "${aws_hosted_zone_id}"
  popd
}

main
